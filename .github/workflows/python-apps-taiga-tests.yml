# This workflow will install Python dependencies and run tests with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: python/apps/taiga - tests

on:
  push:
    branches: [ 'main' ]
    paths:
      - python/**
  pull_request:
    branches: [ '*' ]
    paths:
      - python/**

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ '3.9' ]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: taiga
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: '--health-cmd "pg_isready" --health-interval 5s --health-timeout 5s --health-retries 6 --health-start-period 20s'

    name: Test on Python ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-versions: ${{ matrix.python-version }}

    - name: Enable cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/python/apps/taiga/requirements/devel.txt') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pip-

    - name: Install requirements
      working-directory: ./python/apps/taiga
      run: |
        python -m pip install --upgrade pip wheel setuptools
        python -m pip install -r requirements/devel.txt
        python -m pip install -e .
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Test with pytest
      working-directory: ./python/apps/taiga
      run: |
        python -m pytest
