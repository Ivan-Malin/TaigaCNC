{"version":3,"sources":["ng://@taiga-ui/cdk/constants/empty.ts","ng://@taiga-ui/cdk/constants/stringify.ts","ng://@taiga-ui/cdk/constants/parent-animation.ts","ng://@taiga-ui/cdk/constants/always-false-handler.ts","ng://@taiga-ui/cdk/constants/always-true-handler.ts","ng://@taiga-ui/cdk/constants/unicode-chars.ts","ng://@taiga-ui/cdk/constants/polling-time.ts","ng://@taiga-ui/cdk/constants/matcher.ts","ng://@taiga-ui/cdk/constants/svg-node-filter.ts"],"names":["EMPTY_QUERY","QueryList","TUI_DEFAULT_STRINGIFY","item","String","TUI_PARENT_ANIMATION","trigger","transition","style","overflow","query","animateChild","optional","item1","item2","Array","isArray","length","bothEmpty","search","stringify","toLowerCase","includes","node","NodeFilter","FILTER_REJECT","FILTER_ACCEPT"],"mappings":"2bAQaA,EAAc,IAAIC,EAAAA,UCHlBC,EAA+C,SAAAC,GAAQ,OAAAC,OAAOD,QCH9DE,EAAuBC,EAAAA,QAAQ,qBAAsB,CAC9DC,EAAAA,WAAW,SAAU,CACjBC,EAAAA,MAAM,CAACC,SAAU,WACjBC,EAAAA,MAAM,KAAM,CAACC,EAAAA,gBAAiB,CAACC,UAAU,MAE7CL,EAAAA,WAAW,SAAU,CACjBC,EAAAA,MAAM,CAACC,SAAU,WACjBC,EAAAA,MAAM,KAAM,CAACC,EAAAA,gBAAiB,CAACC,UAAU,+BCNb,WAAM,OAAA,yBCAP,WAAM,OAAA,iBCUd,yBAUO,oBALL,mBAVD,0BALO,4BAyBE,kBLnBN,oBACS,+CACI,WAAM,OAAA,qBMXtB,IAAO,kCCkCsC,SAACC,EAAOC,GAC7E,OAAAD,IAAUC,GAEd,SAAmBD,EAAgBC,GAC/B,OAAOC,MAAMC,QAAQH,IAAUE,MAAMC,QAAQF,KAAWD,EAAMI,SAAWH,EAAMG,OAH5DC,CAAUL,EAAOC,0BA1BL,SAC/BX,EACAgB,EACAC,GACC,YADD,IAAAA,IAAAA,EAAAlB,KACGiB,GAAUC,EAAUjB,GAAMkB,cAAcC,SAASH,EAAOE,wFAQ7B,SAC9BlB,EACAgB,EACAC,GACC,YADD,IAAAA,IAAAA,EAAAlB,GACCkB,EAAUjB,GAAMkB,gBAAkBF,EAAOE,+BCvBpB,SAAiBE,GACvC,MAAA,oBAAqBA,EACfC,WAAWC,cACXD,WAAWE","sourcesContent":["import {QueryList} from '@angular/core';\nimport {ValidatorFn} from '@angular/forms';\n\n/**\n * For type safety when using @ContentChildren and @ViewChildren\n *\n * NOTE: Be careful subscribing to 'changes'\n */\nexport const EMPTY_QUERY = new QueryList<any>();\nexport const EMPTY_ARRAY: [] = [];\nexport const EMPTY_FUNCTION: Function = () => {};\nexport const EMPTY_VALIDATOR: ValidatorFn = () => null;\n","import {TuiStringHandler} from '@taiga-ui/cdk/types';\n\n/**\n * Default method to turn arbitrary object into string\n */\nexport const TUI_DEFAULT_STRINGIFY: TuiStringHandler<any> = item => String(item);\n","import {animateChild, query, style, transition, trigger} from '@angular/animations';\n\nexport const TUI_PARENT_ANIMATION = trigger('tuiParentAnimation', [\n    transition(':enter', [\n        style({overflow: 'hidden'}),\n        query('@*', [animateChild()], {optional: true}),\n    ]),\n    transition(':leave', [\n        style({overflow: 'hidden'}),\n        query('@*', [animateChild()], {optional: true}),\n    ]),\n]);\n","/**\n * Handler that always returns `false`.\n */\nexport const ALWAYS_FALSE_HANDLER = () => false;\n","/**\n * Handler that always returns `true`.\n */\nexport const ALWAYS_TRUE_HANDLER = () => true;\n","/**\n * {@link https://unicode-table.com/en/00A0/ Non-breaking space}.\n */\nexport const CHAR_NO_BREAK_SPACE = '\\u00A0';\n\n/**\n * {@link https://unicode-table.com/en/2013/ EN dash}.\n */\nexport const CHAR_EN_DASH = '\\u2013';\n\n/**\n * {@link https://unicode-table.com/en/2022/ Bullet}.\n */\nexport const CHAR_BULLET = '\\u2022';\n\n/**\n * {@link https://unicode-table.com/en/2026/ Suspension points}.\n */\nexport const CHAR_ELLIPSIS = '\\u2026';\n\n/**\n * {@link https://unicode-table.com/en/00A4/ Suspension points}.\n */\nexport const CHAR_CURRENCY_SIGN = '\\u00A4';\n\n/**\n * {@link https://unicode-table.com/en/200b/ Suspension points}.\n */\nexport const CHAR_ZERO_WIDTH_SPACE = '\\u200b';\n","export const POLLING_TIME = 1000 / 15;\n","import {TuiHandler, TuiIdentityMatcher} from '@taiga-ui/cdk/types';\nimport {TUI_DEFAULT_STRINGIFY} from './stringify';\n\n/**\n * Default handler for matching stringified version of an item and a search query\n * @param item arbitrary element to match with a string\n * @param search search query\n * @param stringify handler to turn item into a string\n */\nexport const TUI_DEFAULT_MATCHER = <T>(\n    item: T,\n    search: string,\n    stringify: TuiHandler<T, string> = TUI_DEFAULT_STRINGIFY,\n) => !!search && stringify(item).toLowerCase().includes(search.toLowerCase());\n\n/**\n * Default handler for strict matching stringified version of an item and a search query\n * @param item arbitrary element to match with a string\n * @param search search query\n * @param stringify handler to turn item into a string\n */\nexport const TUI_STRICT_MATCHER = <T>(\n    item: T,\n    search: string,\n    stringify: TuiHandler<T, string> = TUI_DEFAULT_STRINGIFY,\n) => stringify(item).toLowerCase() === search.toLowerCase();\n\n/**\n * Default handler to match equality of two elements\n * ATTENTION: considers two empty arrays equal\n *\n * @param item1 first element\n * @param item2 second element\n */\nexport const TUI_DEFAULT_IDENTITY_MATCHER: TuiIdentityMatcher<unknown> = (item1, item2) =>\n    item1 === item2 || bothEmpty(item1, item2);\n\nfunction bothEmpty(item1: unknown, item2: unknown): boolean {\n    return Array.isArray(item1) && Array.isArray(item2) && !item1.length && !item2.length;\n}\n","// Filtering SVGElements for TreeWalker\n// Filter must be a function in IE, other modern browsers are compliant to this format\nexport const svgNodeFilter: NodeFilter = ((node: Node) =>\n    'ownerSVGElement' in node\n        ? NodeFilter.FILTER_REJECT\n        : NodeFilter.FILTER_ACCEPT) as any;\n"]}