{"version":3,"file":"taiga-ui-cdk-observables.umd.js","sources":["ng://@taiga-ui/cdk/observables/typed-from-event.ts","ng://@taiga-ui/cdk/observables/mouse-drag-finish-from.ts","ng://@taiga-ui/cdk/observables/drag-and-drop-from.ts","ng://@taiga-ui/cdk/observables/is-alive.ts","ng://@taiga-ui/cdk/observables/focus-visible-observable.ts","ng://@taiga-ui/cdk/observables/items-query-list-observable.ts","ng://@taiga-ui/cdk/observables/must-be-present.ts","ng://@taiga-ui/cdk/observables/pressed-observable.ts","ng://@taiga-ui/cdk/observables/prevent-default.ts","ng://@taiga-ui/cdk/observables/replay-control-value-changes.ts","ng://@taiga-ui/cdk/observables/watch.ts","ng://@taiga-ui/cdk/observables/zone-free.ts"],"sourcesContent":["import {TuiEventWith, TuiTypedEventTarget} from '@taiga-ui/cdk/types';\nimport {fromEvent, Observable} from 'rxjs';\n\nexport function typedFromEvent<E extends keyof WindowEventMap>(\n    target: Window,\n    event: E,\n    options?: AddEventListenerOptions,\n): Observable<TuiEventWith<WindowEventMap[E], typeof target>>;\nexport function typedFromEvent<E extends keyof DocumentEventMap>(\n    target: Document,\n    event: E,\n    options?: AddEventListenerOptions,\n): Observable<TuiEventWith<DocumentEventMap[E], typeof target>>;\nexport function typedFromEvent<T extends Element, E extends keyof HTMLElementEventMap>(\n    target: T,\n    event: E,\n    options?: AddEventListenerOptions,\n): Observable<TuiEventWith<HTMLElementEventMap[E], typeof target>>;\nexport function typedFromEvent<\n    E extends Event,\n    T extends TuiTypedEventTarget<TuiEventWith<E, T>>\n>(\n    target: T,\n    event: string,\n    options?: AddEventListenerOptions,\n): Observable<TuiEventWith<E, T>>;\nexport function typedFromEvent<E extends Event>(\n    target: TuiTypedEventTarget<E>,\n    event: string,\n    options?: AddEventListenerOptions,\n): Observable<E>;\nexport function typedFromEvent<E extends Event>(\n    target: TuiTypedEventTarget<E>,\n    event: string,\n    options: AddEventListenerOptions = {},\n): Observable<E> {\n    return fromEvent(target, event, options);\n}\n","import {TuiEventWith, TuiTypedEventTarget} from '@taiga-ui/cdk/types';\nimport {merge, Observable} from 'rxjs';\nimport {typedFromEvent} from './typed-from-event';\n\n/**\n * Letting go of the mouse after it was pressed\n * @param target\n */\nexport function mouseDragFinishFrom<\n    T extends TuiTypedEventTarget<TuiEventWith<DragEvent, T>>\n>(target: Exclude<T, null>): Observable<TuiEventWith<MouseEvent, T>> {\n    return merge(typedFromEvent(target, 'mouseup'), typedFromEvent(target, 'dragend'));\n}\n","import {isPresent} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {concat, merge, Observable} from 'rxjs';\nimport {endWith, first, map, repeat, takeWhile} from 'rxjs/operators';\nimport {mouseDragFinishFrom} from './mouse-drag-finish-from';\nimport {typedFromEvent} from './typed-from-event';\n\nexport const enum TuiDragStage {\n    Start,\n    Continues,\n    End,\n}\n\nexport class TuiDragState {\n    constructor(readonly stage: TuiDragStage, readonly event: MouseEvent) {}\n}\n\nexport function dragAndDropFrom(element: Element): Observable<TuiDragState> {\n    const {ownerDocument} = element;\n\n    if (!ownerDocument) {\n        throw new Error('element does not have ownerDocument');\n    }\n\n    return concat(\n        typedFromEvent(element, 'mousedown').pipe(\n            first(),\n            map(event => new TuiDragState(TuiDragStage.Start, event)),\n        ),\n        merge(\n            typedFromEvent(ownerDocument, 'mousemove').pipe(\n                map(event => new TuiDragState(TuiDragStage.Continues, event)),\n            ),\n            mouseDragFinishFrom(ownerDocument).pipe(\n                first(),\n                map(event => new TuiDragState(TuiDragStage.End, event)),\n                endWith<TuiDragState | null>(null),\n            ),\n        ).pipe(takeWhile(isPresent)),\n    ).pipe(repeat());\n}\n","import {OperatorFunction, pipe, timer} from 'rxjs';\nimport {distinctUntilChanged, mapTo, startWith, switchMapTo} from 'rxjs/operators';\n\n/**\n * Operator to set lifespan after which current value is considered obsolete\n */\nexport function tuiIsAlive(lifespan: number = 0): OperatorFunction<any, boolean> {\n    return pipe(\n        switchMapTo(timer(lifespan).pipe(mapTo(false), startWith(true))),\n        distinctUntilChanged(),\n    );\n}\n","import {isNativeFocused} from '@taiga-ui/cdk/utils/focus';\nimport {concat, merge, Observable} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    filter,\n    ignoreElements,\n    mapTo,\n    repeat,\n    shareReplay,\n    startWith,\n    switchMapTo,\n    take,\n    withLatestFrom,\n} from 'rxjs/operators';\nimport {tuiIsAlive} from './is-alive';\nimport {typedFromEvent} from './typed-from-event';\n\nlet documentMouseUpIsAlive$: Observable<boolean>;\nlet documentMouseDownIsAlive$: Observable<boolean>;\n\nexport function focusVisibleObservable(element: Element): Observable<boolean> {\n    const elementBlur$ = typedFromEvent(element, 'blur');\n    const {ownerDocument} = element;\n\n    if (!ownerDocument) {\n        throw new Error('element does not have ownerDocument');\n    }\n\n    if (!documentMouseDownIsAlive$ || !documentMouseUpIsAlive$) {\n        documentMouseUpIsAlive$ = typedFromEvent(ownerDocument, 'mouseup', {\n            capture: true,\n        }).pipe(tuiIsAlive(), startWith(false), shareReplay(1));\n        documentMouseDownIsAlive$ = typedFromEvent(ownerDocument, 'mousedown', {\n            capture: true,\n        }).pipe(tuiIsAlive(), startWith(false), shareReplay(1));\n    }\n\n    return merge(\n        // focus events excluding ones that came right after mouse action\n        concat(\n            typedFromEvent(element, 'focus').pipe(take(1)),\n            // filtering out blur events when element remains focused so that we ignore browser tab focus loss\n            elementBlur$.pipe(\n                filter(() => !isNativeFocused(element)),\n                take(1),\n                ignoreElements(),\n            ),\n        ).pipe(\n            repeat(),\n            withLatestFrom(\n                documentMouseDownIsAlive$,\n                documentMouseUpIsAlive$,\n                (_event, elementActual, documentActual) =>\n                    elementActual || documentActual,\n            ),\n            filter(isUserFocus => !isUserFocus),\n        ),\n    ).pipe(\n        switchMapTo(elementBlur$.pipe(mapTo(false), take(1), startWith(true))),\n        distinctUntilChanged(),\n    );\n}\n","import {QueryList} from '@angular/core';\nimport {getOriginalArrayFromQueryList} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n/**\n * Converts changes observable of a QueryList to an Observable of arrays\n */\nexport function itemsQueryListObservable<T>(\n    queryList: QueryList<T>,\n): Observable<ReadonlyArray<T>> {\n    return queryList.changes.pipe(\n        map(() => getOriginalArrayFromQueryList(queryList)),\n        startWith(getOriginalArrayFromQueryList(queryList)),\n    );\n}\n","import {isPresent} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {OperatorFunction} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nexport function mustBePresent<T>(): OperatorFunction<T | undefined | null, T> {\n    return map(value => {\n        if (!isPresent(value)) {\n            throw new Error('Value must present');\n        }\n\n        return value;\n    });\n}\n","import {Observable} from 'rxjs';\nimport {filter, mapTo, startWith, switchMapTo, take} from 'rxjs/operators';\nimport {mouseDragFinishFrom} from './mouse-drag-finish-from';\nimport {typedFromEvent} from './typed-from-event';\n\nexport function pressedObservable(element: Element): Observable<boolean> {\n    const {ownerDocument} = element;\n\n    if (!ownerDocument) {\n        throw new Error('element does not have ownerDocument');\n    }\n\n    return typedFromEvent(element, 'mousedown').pipe(\n        filter(({isTrusted}) => isTrusted),\n        switchMapTo(\n            mouseDragFinishFrom(ownerDocument).pipe(\n                mapTo(false),\n                take(1),\n                startWith(true),\n            ),\n        ),\n    );\n}\n","import {MonoTypeOperatorFunction} from 'rxjs';\nimport {tap} from 'rxjs/operators';\n\nexport function preventDefault<T extends Event>(): MonoTypeOperatorFunction<T> {\n    return tap(e => {\n        e.preventDefault();\n    });\n}\n","import {AbstractControl, AbstractControlDirective} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\n\n/**\n * Turns AbstractControl/Abstract-control-directive valueChanges into ReplaySubject(1)\n */\nexport function tuiReplayedValueChangesFrom<T>(\n    control: AbstractControl | AbstractControlDirective,\n): Observable<T> {\n    return new Observable(subscriber => {\n        if (!control.valueChanges) {\n            throw new Error('Control does not have valueChanges');\n        }\n\n        control.valueChanges.pipe(startWith(control.value)).subscribe(subscriber);\n    });\n}\n","import {ChangeDetectorRef} from '@angular/core';\nimport {MonoTypeOperatorFunction} from 'rxjs';\nimport {tap} from 'rxjs/operators';\n\nexport function watch<T>(\n    changeDetectorRef: ChangeDetectorRef,\n): MonoTypeOperatorFunction<T> {\n    return tap(() => {\n        changeDetectorRef.markForCheck();\n    });\n}\n","import {NgZone} from '@angular/core';\nimport {\n    MonoTypeOperatorFunction,\n    Observable,\n    Observer,\n    Operator,\n    pipe,\n    TeardownLogic,\n} from 'rxjs';\n\nclass TuiZonefreeOperator<T> implements Operator<T, T> {\n    constructor(private readonly ngZone: NgZone) {}\n\n    call(observer: Observer<T>, source: Observable<T>): TeardownLogic {\n        return this.ngZone.runOutsideAngular(() => source.subscribe(observer));\n    }\n}\n\nexport function tuiZonefull<T>(ngZone: NgZone): MonoTypeOperatorFunction<T> {\n    return source =>\n        new Observable(subscriber =>\n            source.subscribe({\n                next: value => ngZone.run(() => subscriber.next(value)),\n                error: error => ngZone.run(() => subscriber.error(error)),\n                complete: () => ngZone.run(() => subscriber.complete()),\n            }),\n        );\n}\n\nexport function tuiZonefree<T>(ngZone: NgZone): MonoTypeOperatorFunction<T> {\n    return source => source.lift(new TuiZonefreeOperator<T>(ngZone));\n}\n\nexport function tuiZoneOptimized<T>(ngZone: NgZone): MonoTypeOperatorFunction<T> {\n    return pipe(tuiZonefree(ngZone), tuiZonefull(ngZone));\n}\n"],"names":["fromEvent","merge","concat","first","map","endWith","takeWhile","isPresent","repeat","pipe","switchMapTo","timer","mapTo","startWith","distinctUntilChanged","shareReplay","take","filter","isNativeFocused","ignoreElements","withLatestFrom","getOriginalArrayFromQueryList","tap","Observable"],"mappings":"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"}