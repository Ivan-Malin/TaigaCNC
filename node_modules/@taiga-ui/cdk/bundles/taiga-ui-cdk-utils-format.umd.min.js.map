{"version":3,"sources":["ng://@taiga-ui/cdk/utils/format/pad-start.ts","ng://@taiga-ui/cdk/utils/format/px.ts"],"names":["sourceString","minResultLength","padString","padSize","length","repeat","slice","value","tuiAssert","assert","Number","isFinite"],"mappings":"8dAQIA,EACAC,EACAC,QAAA,IAAAA,IAAAA,EAAA,KAEA,IAAMC,EAAUF,EAAkBD,EAAaI,OAE/C,OAAID,GAAW,EACJH,EAGJE,EAAUG,OAAOF,EAAUD,EAAUE,QAAQE,MAAM,EAAGH,GAAWH,iBCbzDO,GAGf,OAFAC,EAAAA,UAAUC,OAAOC,OAAOC,SAASJ,GAAQ,+BAE/BA,EAAK","sourcesContent":["/**\n * Pads a string with symbols in the beginning\n *\n * @param sourceString\n * @param minResultLength\n * @param padString string to pad with\n */\nexport function padStart(\n    sourceString: string,\n    minResultLength: number,\n    padString: string = ' ',\n): string {\n    const padSize = minResultLength - sourceString.length;\n\n    if (padSize <= 0) {\n        return sourceString;\n    }\n\n    return padString.repeat(padSize / padString.length).slice(0, padSize) + sourceString;\n}\n","import {tuiAssert} from '@taiga-ui/cdk/classes';\n\n/**\n * Adds 'px' to the number and turns it into a string\n */\nexport function px(value: number): string {\n    tuiAssert.assert(Number.isFinite(value), 'Value must be finite number');\n\n    return `${value}px`;\n}\n"]}