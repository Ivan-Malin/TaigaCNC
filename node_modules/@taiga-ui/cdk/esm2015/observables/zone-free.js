import { Observable, pipe, } from 'rxjs';
class TuiZonefreeOperator {
    constructor(ngZone) {
        this.ngZone = ngZone;
    }
    call(observer, source) {
        return this.ngZone.runOutsideAngular(() => source.subscribe(observer));
    }
}
export function tuiZonefull(ngZone) {
    return source => new Observable(subscriber => source.subscribe({
        next: value => ngZone.run(() => subscriber.next(value)),
        error: error => ngZone.run(() => subscriber.error(error)),
        complete: () => ngZone.run(() => subscriber.complete()),
    }));
}
export function tuiZonefree(ngZone) {
    return source => source.lift(new TuiZonefreeOperator(ngZone));
}
export function tuiZoneOptimized(ngZone) {
    return pipe(tuiZonefree(ngZone), tuiZonefull(ngZone));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9uZS1mcmVlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2Nkay9vYnNlcnZhYmxlcy8iLCJzb3VyY2VzIjpbInpvbmUtZnJlZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBRUgsVUFBVSxFQUdWLElBQUksR0FFUCxNQUFNLE1BQU0sQ0FBQztBQUVkLE1BQU0sbUJBQW1CO0lBQ3JCLFlBQTZCLE1BQWM7UUFBZCxXQUFNLEdBQU4sTUFBTSxDQUFRO0lBQUcsQ0FBQztJQUUvQyxJQUFJLENBQUMsUUFBcUIsRUFBRSxNQUFxQjtRQUM3QyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQzNFLENBQUM7Q0FDSjtBQUVELE1BQU0sVUFBVSxXQUFXLENBQUksTUFBYztJQUN6QyxPQUFPLE1BQU0sQ0FBQyxFQUFFLENBQ1osSUFBSSxVQUFVLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FDeEIsTUFBTSxDQUFDLFNBQVMsQ0FBQztRQUNiLElBQUksRUFBRSxLQUFLLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN2RCxLQUFLLEVBQUUsS0FBSyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDekQsUUFBUSxFQUFFLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO0tBQzFELENBQUMsQ0FDTCxDQUFDO0FBQ1YsQ0FBQztBQUVELE1BQU0sVUFBVSxXQUFXLENBQUksTUFBYztJQUN6QyxPQUFPLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLG1CQUFtQixDQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFDckUsQ0FBQztBQUVELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBSSxNQUFjO0lBQzlDLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUMxRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtOZ1pvbmV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgICBNb25vVHlwZU9wZXJhdG9yRnVuY3Rpb24sXG4gICAgT2JzZXJ2YWJsZSxcbiAgICBPYnNlcnZlcixcbiAgICBPcGVyYXRvcixcbiAgICBwaXBlLFxuICAgIFRlYXJkb3duTG9naWMsXG59IGZyb20gJ3J4anMnO1xuXG5jbGFzcyBUdWlab25lZnJlZU9wZXJhdG9yPFQ+IGltcGxlbWVudHMgT3BlcmF0b3I8VCwgVD4ge1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgbmdab25lOiBOZ1pvbmUpIHt9XG5cbiAgICBjYWxsKG9ic2VydmVyOiBPYnNlcnZlcjxUPiwgc291cmNlOiBPYnNlcnZhYmxlPFQ+KTogVGVhcmRvd25Mb2dpYyB7XG4gICAgICAgIHJldHVybiB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiBzb3VyY2Uuc3Vic2NyaWJlKG9ic2VydmVyKSk7XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdHVpWm9uZWZ1bGw8VD4obmdab25lOiBOZ1pvbmUpOiBNb25vVHlwZU9wZXJhdG9yRnVuY3Rpb248VD4ge1xuICAgIHJldHVybiBzb3VyY2UgPT5cbiAgICAgICAgbmV3IE9ic2VydmFibGUoc3Vic2NyaWJlciA9PlxuICAgICAgICAgICAgc291cmNlLnN1YnNjcmliZSh7XG4gICAgICAgICAgICAgICAgbmV4dDogdmFsdWUgPT4gbmdab25lLnJ1bigoKSA9PiBzdWJzY3JpYmVyLm5leHQodmFsdWUpKSxcbiAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IgPT4gbmdab25lLnJ1bigoKSA9PiBzdWJzY3JpYmVyLmVycm9yKGVycm9yKSksXG4gICAgICAgICAgICAgICAgY29tcGxldGU6ICgpID0+IG5nWm9uZS5ydW4oKCkgPT4gc3Vic2NyaWJlci5jb21wbGV0ZSgpKSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdHVpWm9uZWZyZWU8VD4obmdab25lOiBOZ1pvbmUpOiBNb25vVHlwZU9wZXJhdG9yRnVuY3Rpb248VD4ge1xuICAgIHJldHVybiBzb3VyY2UgPT4gc291cmNlLmxpZnQobmV3IFR1aVpvbmVmcmVlT3BlcmF0b3I8VD4obmdab25lKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0dWlab25lT3B0aW1pemVkPFQ+KG5nWm9uZTogTmdab25lKTogTW9ub1R5cGVPcGVyYXRvckZ1bmN0aW9uPFQ+IHtcbiAgICByZXR1cm4gcGlwZSh0dWlab25lZnJlZShuZ1pvbmUpLCB0dWlab25lZnVsbChuZ1pvbmUpKTtcbn1cbiJdfQ==