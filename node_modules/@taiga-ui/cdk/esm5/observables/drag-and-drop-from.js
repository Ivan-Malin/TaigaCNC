import { isPresent } from '@taiga-ui/cdk/utils/miscellaneous';
import { concat, merge } from 'rxjs';
import { endWith, first, map, repeat, takeWhile } from 'rxjs/operators';
import { mouseDragFinishFrom } from './mouse-drag-finish-from';
import { typedFromEvent } from './typed-from-event';
var TuiDragState = /** @class */ (function () {
    function TuiDragState(stage, event) {
        this.stage = stage;
        this.event = event;
    }
    return TuiDragState;
}());
export { TuiDragState };
export function dragAndDropFrom(element) {
    var ownerDocument = element.ownerDocument;
    if (!ownerDocument) {
        throw new Error('element does not have ownerDocument');
    }
    return concat(typedFromEvent(element, 'mousedown').pipe(first(), map(function (event) { return new TuiDragState(0 /* Start */, event); })), merge(typedFromEvent(ownerDocument, 'mousemove').pipe(map(function (event) { return new TuiDragState(1 /* Continues */, event); })), mouseDragFinishFrom(ownerDocument).pipe(first(), map(function (event) { return new TuiDragState(2 /* End */, event); }), endWith(null))).pipe(takeWhile(isPresent))).pipe(repeat());
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy1hbmQtZHJvcC1mcm9tLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2Nkay9vYnNlcnZhYmxlcy8iLCJzb3VyY2VzIjpbImRyYWctYW5kLWRyb3AtZnJvbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sbUNBQW1DLENBQUM7QUFDNUQsT0FBTyxFQUFDLE1BQU0sRUFBRSxLQUFLLEVBQWEsTUFBTSxNQUFNLENBQUM7QUFDL0MsT0FBTyxFQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUN0RSxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUM3RCxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFRbEQ7SUFDSSxzQkFBcUIsS0FBbUIsRUFBVyxLQUFpQjtRQUEvQyxVQUFLLEdBQUwsS0FBSyxDQUFjO1FBQVcsVUFBSyxHQUFMLEtBQUssQ0FBWTtJQUFHLENBQUM7SUFDNUUsbUJBQUM7QUFBRCxDQUFDLEFBRkQsSUFFQzs7QUFFRCxNQUFNLFVBQVUsZUFBZSxDQUFDLE9BQWdCO0lBQ3JDLElBQUEscUNBQWEsQ0FBWTtJQUVoQyxJQUFJLENBQUMsYUFBYSxFQUFFO1FBQ2hCLE1BQU0sSUFBSSxLQUFLLENBQUMscUNBQXFDLENBQUMsQ0FBQztLQUMxRDtJQUVELE9BQU8sTUFBTSxDQUNULGNBQWMsQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDLENBQUMsSUFBSSxDQUNyQyxLQUFLLEVBQUUsRUFDUCxHQUFHLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxJQUFJLFlBQVksZ0JBQXFCLEtBQUssQ0FBQyxFQUEzQyxDQUEyQyxDQUFDLENBQzVELEVBQ0QsS0FBSyxDQUNELGNBQWMsQ0FBQyxhQUFhLEVBQUUsV0FBVyxDQUFDLENBQUMsSUFBSSxDQUMzQyxHQUFHLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxJQUFJLFlBQVksb0JBQXlCLEtBQUssQ0FBQyxFQUEvQyxDQUErQyxDQUFDLENBQ2hFLEVBQ0QsbUJBQW1CLENBQUMsYUFBYSxDQUFDLENBQUMsSUFBSSxDQUNuQyxLQUFLLEVBQUUsRUFDUCxHQUFHLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxJQUFJLFlBQVksY0FBbUIsS0FBSyxDQUFDLEVBQXpDLENBQXlDLENBQUMsRUFDdkQsT0FBTyxDQUFzQixJQUFJLENBQUMsQ0FDckMsQ0FDSixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FDL0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztBQUNyQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtpc1ByZXNlbnR9IGZyb20gJ0B0YWlnYS11aS9jZGsvdXRpbHMvbWlzY2VsbGFuZW91cyc7XG5pbXBvcnQge2NvbmNhdCwgbWVyZ2UsIE9ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtlbmRXaXRoLCBmaXJzdCwgbWFwLCByZXBlYXQsIHRha2VXaGlsZX0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHttb3VzZURyYWdGaW5pc2hGcm9tfSBmcm9tICcuL21vdXNlLWRyYWctZmluaXNoLWZyb20nO1xuaW1wb3J0IHt0eXBlZEZyb21FdmVudH0gZnJvbSAnLi90eXBlZC1mcm9tLWV2ZW50JztcblxuZXhwb3J0IGNvbnN0IGVudW0gVHVpRHJhZ1N0YWdlIHtcbiAgICBTdGFydCxcbiAgICBDb250aW51ZXMsXG4gICAgRW5kLFxufVxuXG5leHBvcnQgY2xhc3MgVHVpRHJhZ1N0YXRlIHtcbiAgICBjb25zdHJ1Y3RvcihyZWFkb25seSBzdGFnZTogVHVpRHJhZ1N0YWdlLCByZWFkb25seSBldmVudDogTW91c2VFdmVudCkge31cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRyYWdBbmREcm9wRnJvbShlbGVtZW50OiBFbGVtZW50KTogT2JzZXJ2YWJsZTxUdWlEcmFnU3RhdGU+IHtcbiAgICBjb25zdCB7b3duZXJEb2N1bWVudH0gPSBlbGVtZW50O1xuXG4gICAgaWYgKCFvd25lckRvY3VtZW50KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignZWxlbWVudCBkb2VzIG5vdCBoYXZlIG93bmVyRG9jdW1lbnQnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY29uY2F0KFxuICAgICAgICB0eXBlZEZyb21FdmVudChlbGVtZW50LCAnbW91c2Vkb3duJykucGlwZShcbiAgICAgICAgICAgIGZpcnN0KCksXG4gICAgICAgICAgICBtYXAoZXZlbnQgPT4gbmV3IFR1aURyYWdTdGF0ZShUdWlEcmFnU3RhZ2UuU3RhcnQsIGV2ZW50KSksXG4gICAgICAgICksXG4gICAgICAgIG1lcmdlKFxuICAgICAgICAgICAgdHlwZWRGcm9tRXZlbnQob3duZXJEb2N1bWVudCwgJ21vdXNlbW92ZScpLnBpcGUoXG4gICAgICAgICAgICAgICAgbWFwKGV2ZW50ID0+IG5ldyBUdWlEcmFnU3RhdGUoVHVpRHJhZ1N0YWdlLkNvbnRpbnVlcywgZXZlbnQpKSxcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICBtb3VzZURyYWdGaW5pc2hGcm9tKG93bmVyRG9jdW1lbnQpLnBpcGUoXG4gICAgICAgICAgICAgICAgZmlyc3QoKSxcbiAgICAgICAgICAgICAgICBtYXAoZXZlbnQgPT4gbmV3IFR1aURyYWdTdGF0ZShUdWlEcmFnU3RhZ2UuRW5kLCBldmVudCkpLFxuICAgICAgICAgICAgICAgIGVuZFdpdGg8VHVpRHJhZ1N0YXRlIHwgbnVsbD4obnVsbCksXG4gICAgICAgICAgICApLFxuICAgICAgICApLnBpcGUodGFrZVdoaWxlKGlzUHJlc2VudCkpLFxuICAgICkucGlwZShyZXBlYXQoKSk7XG59XG4iXX0=