{"version":3,"file":"taiga-ui-cdk-abstract.js","sources":["ng://@taiga-ui/cdk/abstract/interactive.ts","ng://@taiga-ui/cdk/abstract/control.ts","ng://@taiga-ui/cdk/abstract/controller.ts","ng://@taiga-ui/cdk/abstract/dialog.service.ts","ng://@taiga-ui/cdk/abstract/multiple-control.ts","ng://@taiga-ui/cdk/abstract/nullable-control.ts","ng://@taiga-ui/cdk/abstract/theme-switcher.ts","ng://@taiga-ui/cdk/abstract/taiga-ui-cdk-abstract.ts"],"sourcesContent":["import {Directive, EventEmitter, HostBinding, Input, Output} from '@angular/core';\nimport {tuiDefaultProp} from '@taiga-ui/cdk/decorators';\nimport {fallbackValue} from '@taiga-ui/cdk/utils/miscellaneous';\n\nconst TUI = 'tui_interactive_';\n\n/**\n * The most basic class for interactive components\n */\n@Directive()\nexport abstract class AbstractTuiInteractive {\n    private readonly autoIdString: string;\n\n    private static autoId = 0;\n\n    abstract disabled: boolean;\n\n    hovered = false;\n\n    pressed = false;\n\n    focusVisible = false;\n\n    abstract focused: boolean;\n\n    @Input()\n    @tuiDefaultProp()\n    pseudoHovered: boolean | null = null;\n\n    @Input()\n    @tuiDefaultProp()\n    pseudoPressed: boolean | null = null;\n\n    @Input()\n    @tuiDefaultProp()\n    pseudoFocused: boolean | null = null;\n\n    /**\n     * Determines if component is focusable with keyboard.\n     */\n    @Input()\n    @tuiDefaultProp()\n    focusable = true;\n\n    @Input()\n    @tuiDefaultProp()\n    nativeId = '';\n\n    /**\n     * Emits 'true' on focus and 'false' on blur.\n     */\n    @Output()\n    readonly focusedChange = new EventEmitter<boolean>();\n\n    @Output()\n    readonly pressedChange = new EventEmitter<boolean>();\n\n    @Output()\n    readonly hoveredChange = new EventEmitter<boolean>();\n\n    @Output()\n    readonly focusVisibleChange = new EventEmitter<boolean>();\n\n    constructor() {\n        this.autoIdString = `${TUI}${AbstractTuiInteractive.autoId++}${Date.now()}`;\n    }\n\n    @HostBinding('class._disabled')\n    get computedDisabled(): boolean {\n        return this.disabled;\n    }\n\n    @HostBinding('class._hovered')\n    get computedHovered(): boolean {\n        return !this.computedDisabled && fallbackValue(this.pseudoHovered, this.hovered);\n    }\n\n    @HostBinding('class._pressed')\n    get computedPressed(): boolean {\n        return !this.computedDisabled && fallbackValue(this.pseudoPressed, this.pressed);\n    }\n\n    get computedFocusable(): boolean {\n        return !this.computedDisabled && (this.focusable || this.focused);\n    }\n\n    @HostBinding('class._focused')\n    get computedFocused(): boolean {\n        return !this.computedDisabled && fallbackValue(this.pseudoFocused, this.focused);\n    }\n\n    @HostBinding('class._focus-visible')\n    get computedFocusVisible(): boolean {\n        return (\n            !this.computedDisabled && fallbackValue(this.pseudoFocused, this.focusVisible)\n        );\n    }\n\n    get id(): string {\n        return !!this.nativeId ? this.nativeId : this.autoIdString;\n    }\n\n    protected updateHovered(hovered: boolean) {\n        if (this.hovered === hovered) {\n            return;\n        }\n\n        this.hovered = hovered;\n        this.hoveredChange.emit(hovered);\n    }\n\n    protected updatePressed(pressed: boolean) {\n        if (this.pressed === pressed) {\n            return;\n        }\n\n        this.pressed = pressed;\n        this.pressedChange.emit(pressed);\n    }\n\n    protected updateFocused(focused: boolean) {\n        this.focusedChange.emit(focused);\n    }\n\n    protected updateFocusVisible(focusVisible: boolean) {\n        if (this.focusVisible === focusVisible) {\n            return;\n        }\n\n        this.focusVisible = focusVisible;\n        this.focusVisibleChange.emit(focusVisible);\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Directive,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\nimport {AbstractControl, ControlValueAccessor, NgControl, NgModel} from '@angular/forms';\nimport {tuiAssert} from '@taiga-ui/cdk/classes';\nimport {EMPTY_FUNCTION} from '@taiga-ui/cdk/constants';\nimport {tuiDefaultProp} from '@taiga-ui/cdk/decorators';\nimport {fallbackValue} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {merge, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {AbstractTuiInteractive} from './interactive';\n\n/**\n * Basic ControlValueAccessor class to build form components upon\n */\n@Directive()\nexport abstract class AbstractTuiControl<T>\n    extends AbstractTuiInteractive\n    implements OnDestroy, OnInit, ControlValueAccessor {\n    private previousInternalValue?: T | null;\n\n    private onTouched = EMPTY_FUNCTION;\n\n    private onChange = EMPTY_FUNCTION;\n\n    protected readonly fallbackValue = this.getFallbackValue();\n\n    protected readonly destroy$ = new Subject<void>();\n\n    @Input()\n    @HostBinding('class._readonly')\n    @tuiDefaultProp()\n    readOnly = false;\n\n    @Input()\n    @tuiDefaultProp()\n    pseudoInvalid: boolean | null = null;\n\n    protected constructor(\n        private readonly ngControl: NgControl | null,\n        protected readonly changeDetectorRef: ChangeDetectorRef,\n    ) {\n        super();\n\n        if (this.ngControl === null) {\n            tuiAssert.assert(\n                false,\n                `NgControl not injected in ${this.constructor.name}!\\n`,\n                'Use [(ngModel)] or [formControl] or formControlName for correct work.',\n            );\n        } else {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n\n    @HostBinding('class._invalid')\n    get computedInvalid(): boolean {\n        return (\n            !this.readOnly &&\n            !this.disabled &&\n            (this.pseudoInvalid !== null\n                ? this.pseudoInvalid\n                : this.touched && this.invalid)\n        );\n    }\n\n    get value(): T {\n        return fallbackValue<T>(this.previousInternalValue, this.fallbackValue);\n    }\n\n    get safeCurrentValue(): T {\n        return fallbackValue<T>(this.rawValue, this.fallbackValue);\n    }\n\n    get invalid(): boolean {\n        return this.safeNgControlData<boolean>(({invalid}) => invalid, false);\n    }\n\n    get valid(): boolean {\n        return this.safeNgControlData<boolean>(({valid}) => valid, false);\n    }\n\n    get touched(): boolean {\n        return this.safeNgControlData<boolean>(({touched}) => touched, false);\n    }\n\n    get disabled(): boolean {\n        return this.safeNgControlData<boolean>(({disabled}) => disabled, false);\n    }\n\n    get control(): AbstractControl | null {\n        return this.safeNgControlData<AbstractControl | null>(\n            ({control}) => control,\n            null,\n        );\n    }\n\n    get computedName(): string | number | null {\n        return this.controlName;\n    }\n\n    protected get controlName(): string | number | null {\n        return this.ngControl && this.ngControl.name;\n    }\n\n    private get rawValue(): T | undefined {\n        const {ngControl} = this;\n\n        if (ngControl === null) {\n            return undefined;\n        }\n\n        return ngControl instanceof NgModel && this.previousInternalValue === undefined\n            ? ngControl.viewModel\n            : ngControl.value;\n    }\n\n    ngOnInit() {\n        if (\n            !this.ngControl ||\n            !this.ngControl.valueChanges ||\n            !this.ngControl.statusChanges\n        ) {\n            return;\n        }\n\n        merge(this.ngControl.valueChanges, this.ngControl.statusChanges)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n                this.refreshLocalValue(this.safeCurrentValue);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    checkControlUpdate() {\n        this.changeDetectorRef.markForCheck();\n    }\n\n    registerOnChange(onChange: (value: T) => void) {\n        this.onChange = onChange;\n    }\n\n    registerOnTouched(onTouched: () => void) {\n        this.onTouched = onTouched;\n    }\n\n    setDisabledState() {\n        this.checkControlUpdate();\n    }\n\n    writeValue(value: T | null) {\n        this.refreshLocalValue(\n            this.ngControl instanceof NgModel && this.previousInternalValue === undefined\n                ? this.ngControl.model\n                : value,\n        );\n    }\n\n    protected abstract getFallbackValue(): T;\n\n    protected updateFocused(focused: boolean) {\n        if (!focused) {\n            this.controlMarkAsTouched();\n        }\n\n        super.updateFocused(focused);\n    }\n\n    protected updateValue(value: T) {\n        if (this.disabled || this.valueIdenticalComparator(this.value, value)) {\n            return;\n        }\n\n        this.previousInternalValue = value;\n        this.controlSetValue(value);\n    }\n\n    protected valueIdenticalComparator(oldValue: T, newValue: T): boolean {\n        return oldValue === newValue;\n    }\n\n    private safeNgControlData<T>(\n        extractor: (ngControl: NgControl) => T | null | undefined,\n        defaultFieldValue: T,\n    ): T {\n        return fallbackValue<T>(\n            this.ngControl && extractor(this.ngControl),\n            defaultFieldValue,\n        );\n    }\n\n    private controlMarkAsTouched() {\n        this.onTouched();\n        this.checkControlUpdate();\n    }\n\n    private controlSetValue(value: T) {\n        this.onChange(value);\n        this.checkControlUpdate();\n    }\n\n    private refreshLocalValue(value: T | null) {\n        this.previousInternalValue = value;\n        this.checkControlUpdate();\n    }\n}\n","import {OnChanges} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nexport abstract class TuiController implements OnChanges {\n    readonly change$ = new Subject<void>();\n\n    ngOnChanges() {\n        this.change$.next();\n    }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {TuiBaseDialogContext} from '@taiga-ui/cdk/interfaces';\nimport {TuiIdService} from '@taiga-ui/cdk/services';\nimport {TuiDialog} from '@taiga-ui/cdk/types';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n@Injectable()\nexport abstract class AbstractTuiDialogService<T extends {}> extends Observable<\n    readonly TuiDialog<T, any>[]\n> {\n    protected abstract readonly component: PolymorpheusContent<TuiDialog<T, any>>;\n\n    protected abstract readonly defaultOptions: T;\n\n    protected readonly dialogs$ = new BehaviorSubject<readonly TuiDialog<T, any>[]>([]);\n\n    protected constructor(\n        @Inject(TuiIdService) private readonly idService: TuiIdService,\n    ) {\n        super(observer => this.dialogs$.subscribe(observer));\n    }\n\n    open<G>(\n        content: PolymorpheusContent<TuiBaseDialogContext<G> & T>,\n        options: Partial<T> = {},\n    ): Observable<G> {\n        return new Observable(observer => {\n            const completeWith = (result: G) => {\n                observer.next(result);\n                observer.complete();\n            };\n            const dialog = {\n                ...this.defaultOptions,\n                ...options,\n                content,\n                completeWith,\n                $implicit: observer,\n                component: this.component,\n                id: this.idService.generate(),\n            };\n\n            this.dialogs$.next([...this.dialogs$.value, dialog]);\n\n            return () => {\n                this.dialogs$.next(this.dialogs$.value.filter(item => item !== dialog));\n            };\n        });\n    }\n}\n","import {Directive} from '@angular/core';\nimport {AbstractTuiControl} from './control';\n\n@Directive()\nexport abstract class AbstractTuiMultipleControl<T> extends AbstractTuiControl<\n    ReadonlyArray<T>\n> {\n    clear() {\n        this.updateValue([]);\n    }\n\n    protected getFallbackValue(): ReadonlyArray<T> {\n        return [];\n    }\n}\n","import {Directive} from '@angular/core';\nimport {AbstractTuiControl} from './control';\n\n@Directive()\nexport abstract class AbstractTuiNullableControl<T> extends AbstractTuiControl<T | null> {\n    protected getFallbackValue(): T | null {\n        return null;\n    }\n}\n","import {OnDestroy} from '@angular/core';\n\n/**\n * Use this abstract class to create your own toggleable themes.\n * A component extending this class must have CSS variables definitions\n * and have ViewEncapsulation set to NONE. A boolean input allows to\n * switch theme on or off.\n */\nexport abstract class AbstractTuiThemeSwitcher implements OnDestroy {\n    static style: HTMLStyleElement | null = null;\n\n    protected constructor(private readonly documentRef: Document) {\n        if (this.style !== null) {\n            this.addTheme();\n\n            return;\n        }\n\n        const styles = this.documentRef.head.querySelectorAll('style');\n\n        (<typeof AbstractTuiThemeSwitcher>this.constructor).style =\n            styles[styles.length - 1];\n    }\n\n    get style(): HTMLStyleElement | null {\n        return (<typeof AbstractTuiThemeSwitcher>this.constructor).style;\n    }\n\n    ngOnDestroy() {\n        this.removeTheme();\n    }\n\n    private addTheme() {\n        if (this.style && !this.documentRef.head.contains(this.style)) {\n            for (let i = this.style.attributes.length - 1; i >= 0; i--) {\n                this.style.removeAttribute(this.style.attributes[i].name);\n            }\n\n            this.documentRef.head.appendChild(this.style);\n        }\n    }\n\n    private removeTheme() {\n        if (this.style && this.documentRef.head.contains(this.style)) {\n            this.documentRef.head.removeChild(this.style);\n        }\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}