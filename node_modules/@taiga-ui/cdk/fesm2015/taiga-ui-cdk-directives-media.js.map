{"version":3,"file":"taiga-ui-cdk-directives-media.js","sources":["ng://@taiga-ui/cdk/directives/media/media.directive.ts","ng://@taiga-ui/cdk/directives/media/media.module.ts","ng://@taiga-ui/cdk/directives/media/taiga-ui-cdk-directives-media.ts"],"sourcesContent":["import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Inject,\n    Input,\n    Output,\n} from '@angular/core';\nimport {tuiDefaultProp, tuiRequiredSetter} from '@taiga-ui/cdk/decorators';\n\nexport function nonNegativeFiniteAssertion(value: number): boolean {\n    return isFinite(value) && value >= 0;\n}\n\nexport function volumeAssertion(volume: number): boolean {\n    return isFinite(volume) && volume >= 0 && volume <= 1;\n}\n\n@Directive({\n    selector: 'video[tuiMedia], audio[tuiMedia]',\n    exportAs: 'tuiMedia',\n})\nexport class TuiMediaDirective {\n    @Input()\n    @HostBinding('volume')\n    @tuiDefaultProp(volumeAssertion)\n    volume = 1;\n\n    @Input('playbackRate')\n    @tuiRequiredSetter(nonNegativeFiniteAssertion)\n    set playbackRateSetter(playbackRate: number) {\n        this.updatePlaybackRate(playbackRate);\n    }\n\n    @Input()\n    @tuiRequiredSetter(nonNegativeFiniteAssertion)\n    set currentTime(currentTime: number) {\n        if (Math.abs(currentTime - this.currentTime) > 0.001) {\n            this.elementRef.nativeElement.currentTime = currentTime;\n        }\n    }\n\n    @Input()\n    set paused(paused: boolean) {\n        if (paused) {\n            this.elementRef.nativeElement.pause();\n        } else {\n            this.elementRef.nativeElement.play();\n            this.updatePlaybackRate(this.playbackRate);\n        }\n    }\n\n    @Output()\n    readonly currentTimeChange = new EventEmitter<number>();\n\n    @Output()\n    readonly pausedChange = new EventEmitter<boolean>();\n\n    @Output()\n    readonly volumeChange = new EventEmitter<number>();\n\n    private playbackRate = 1;\n\n    constructor(\n        @Inject(ElementRef)\n        private readonly elementRef: ElementRef<HTMLMediaElement>,\n    ) {}\n\n    get paused(): boolean {\n        return this.elementRef.nativeElement.paused;\n    }\n\n    get currentTime(): number {\n        return this.elementRef.nativeElement.currentTime;\n    }\n\n    // @bad TODO: Make sure no other events can affect this like network issues etc.\n    @HostListener('ended', ['true'])\n    @HostListener('pause', ['true'])\n    @HostListener('play', ['false'])\n    onPausedChange(paused: boolean) {\n        this.pausedChange.emit(paused);\n        this.updatePlaybackRate(this.playbackRate);\n    }\n\n    @HostListener('volumechange')\n    onVolumeChange() {\n        this.volume = this.elementRef.nativeElement.volume;\n        this.volumeChange.emit(this.volume);\n    }\n\n    @HostListener('timeupdate')\n    @HostListener('seeking')\n    @HostListener('seeked')\n    onCurrentTimeChange() {\n        this.currentTimeChange.emit(this.currentTime);\n    }\n\n    @HostListener('durationchange')\n    changeDetectionTrigger() {\n        // @bad TODO: consider if other events need to trigger CD\n    }\n\n    private updatePlaybackRate(playbackRate: number) {\n        this.playbackRate = playbackRate;\n        this.elementRef.nativeElement.playbackRate = this.playbackRate;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {TuiMediaDirective} from './media.directive';\n\n@NgModule({\n    declarations: [TuiMediaDirective],\n    exports: [TuiMediaDirective],\n})\nexport class TuiMediaModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}