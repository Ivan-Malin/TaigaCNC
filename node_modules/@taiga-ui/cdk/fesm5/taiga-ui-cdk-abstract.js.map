{"version":3,"file":"taiga-ui-cdk-abstract.js","sources":["ng://@taiga-ui/cdk/abstract/interactive.ts","ng://@taiga-ui/cdk/abstract/control.ts","ng://@taiga-ui/cdk/abstract/controller.ts","ng://@taiga-ui/cdk/abstract/dialog.service.ts","ng://@taiga-ui/cdk/abstract/multiple-control.ts","ng://@taiga-ui/cdk/abstract/nullable-control.ts","ng://@taiga-ui/cdk/abstract/theme-switcher.ts","ng://@taiga-ui/cdk/abstract/taiga-ui-cdk-abstract.ts"],"sourcesContent":["import {Directive, EventEmitter, HostBinding, Input, Output} from '@angular/core';\nimport {tuiDefaultProp} from '@taiga-ui/cdk/decorators';\nimport {fallbackValue} from '@taiga-ui/cdk/utils/miscellaneous';\n\nconst TUI = 'tui_interactive_';\n\n/**\n * The most basic class for interactive components\n */\n@Directive()\nexport abstract class AbstractTuiInteractive {\n    private readonly autoIdString: string;\n\n    private static autoId = 0;\n\n    abstract disabled: boolean;\n\n    hovered = false;\n\n    pressed = false;\n\n    focusVisible = false;\n\n    abstract focused: boolean;\n\n    @Input()\n    @tuiDefaultProp()\n    pseudoHovered: boolean | null = null;\n\n    @Input()\n    @tuiDefaultProp()\n    pseudoPressed: boolean | null = null;\n\n    @Input()\n    @tuiDefaultProp()\n    pseudoFocused: boolean | null = null;\n\n    /**\n     * Determines if component is focusable with keyboard.\n     */\n    @Input()\n    @tuiDefaultProp()\n    focusable = true;\n\n    @Input()\n    @tuiDefaultProp()\n    nativeId = '';\n\n    /**\n     * Emits 'true' on focus and 'false' on blur.\n     */\n    @Output()\n    readonly focusedChange = new EventEmitter<boolean>();\n\n    @Output()\n    readonly pressedChange = new EventEmitter<boolean>();\n\n    @Output()\n    readonly hoveredChange = new EventEmitter<boolean>();\n\n    @Output()\n    readonly focusVisibleChange = new EventEmitter<boolean>();\n\n    constructor() {\n        this.autoIdString = `${TUI}${AbstractTuiInteractive.autoId++}${Date.now()}`;\n    }\n\n    @HostBinding('class._disabled')\n    get computedDisabled(): boolean {\n        return this.disabled;\n    }\n\n    @HostBinding('class._hovered')\n    get computedHovered(): boolean {\n        return !this.computedDisabled && fallbackValue(this.pseudoHovered, this.hovered);\n    }\n\n    @HostBinding('class._pressed')\n    get computedPressed(): boolean {\n        return !this.computedDisabled && fallbackValue(this.pseudoPressed, this.pressed);\n    }\n\n    get computedFocusable(): boolean {\n        return !this.computedDisabled && (this.focusable || this.focused);\n    }\n\n    @HostBinding('class._focused')\n    get computedFocused(): boolean {\n        return !this.computedDisabled && fallbackValue(this.pseudoFocused, this.focused);\n    }\n\n    @HostBinding('class._focus-visible')\n    get computedFocusVisible(): boolean {\n        return (\n            !this.computedDisabled && fallbackValue(this.pseudoFocused, this.focusVisible)\n        );\n    }\n\n    get id(): string {\n        return !!this.nativeId ? this.nativeId : this.autoIdString;\n    }\n\n    protected updateHovered(hovered: boolean) {\n        if (this.hovered === hovered) {\n            return;\n        }\n\n        this.hovered = hovered;\n        this.hoveredChange.emit(hovered);\n    }\n\n    protected updatePressed(pressed: boolean) {\n        if (this.pressed === pressed) {\n            return;\n        }\n\n        this.pressed = pressed;\n        this.pressedChange.emit(pressed);\n    }\n\n    protected updateFocused(focused: boolean) {\n        this.focusedChange.emit(focused);\n    }\n\n    protected updateFocusVisible(focusVisible: boolean) {\n        if (this.focusVisible === focusVisible) {\n            return;\n        }\n\n        this.focusVisible = focusVisible;\n        this.focusVisibleChange.emit(focusVisible);\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Directive,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\nimport {AbstractControl, ControlValueAccessor, NgControl, NgModel} from '@angular/forms';\nimport {tuiAssert} from '@taiga-ui/cdk/classes';\nimport {EMPTY_FUNCTION} from '@taiga-ui/cdk/constants';\nimport {tuiDefaultProp} from '@taiga-ui/cdk/decorators';\nimport {fallbackValue} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {merge, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {AbstractTuiInteractive} from './interactive';\n\n/**\n * Basic ControlValueAccessor class to build form components upon\n */\n@Directive()\nexport abstract class AbstractTuiControl<T>\n    extends AbstractTuiInteractive\n    implements OnDestroy, OnInit, ControlValueAccessor {\n    private previousInternalValue?: T | null;\n\n    private onTouched = EMPTY_FUNCTION;\n\n    private onChange = EMPTY_FUNCTION;\n\n    protected readonly fallbackValue = this.getFallbackValue();\n\n    protected readonly destroy$ = new Subject<void>();\n\n    @Input()\n    @HostBinding('class._readonly')\n    @tuiDefaultProp()\n    readOnly = false;\n\n    @Input()\n    @tuiDefaultProp()\n    pseudoInvalid: boolean | null = null;\n\n    protected constructor(\n        private readonly ngControl: NgControl | null,\n        protected readonly changeDetectorRef: ChangeDetectorRef,\n    ) {\n        super();\n\n        if (this.ngControl === null) {\n            tuiAssert.assert(\n                false,\n                `NgControl not injected in ${this.constructor.name}!\\n`,\n                'Use [(ngModel)] or [formControl] or formControlName for correct work.',\n            );\n        } else {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n\n    @HostBinding('class._invalid')\n    get computedInvalid(): boolean {\n        return (\n            !this.readOnly &&\n            !this.disabled &&\n            (this.pseudoInvalid !== null\n                ? this.pseudoInvalid\n                : this.touched && this.invalid)\n        );\n    }\n\n    get value(): T {\n        return fallbackValue<T>(this.previousInternalValue, this.fallbackValue);\n    }\n\n    get safeCurrentValue(): T {\n        return fallbackValue<T>(this.rawValue, this.fallbackValue);\n    }\n\n    get invalid(): boolean {\n        return this.safeNgControlData<boolean>(({invalid}) => invalid, false);\n    }\n\n    get valid(): boolean {\n        return this.safeNgControlData<boolean>(({valid}) => valid, false);\n    }\n\n    get touched(): boolean {\n        return this.safeNgControlData<boolean>(({touched}) => touched, false);\n    }\n\n    get disabled(): boolean {\n        return this.safeNgControlData<boolean>(({disabled}) => disabled, false);\n    }\n\n    get control(): AbstractControl | null {\n        return this.safeNgControlData<AbstractControl | null>(\n            ({control}) => control,\n            null,\n        );\n    }\n\n    get computedName(): string | number | null {\n        return this.controlName;\n    }\n\n    protected get controlName(): string | number | null {\n        return this.ngControl && this.ngControl.name;\n    }\n\n    private get rawValue(): T | undefined {\n        const {ngControl} = this;\n\n        if (ngControl === null) {\n            return undefined;\n        }\n\n        return ngControl instanceof NgModel && this.previousInternalValue === undefined\n            ? ngControl.viewModel\n            : ngControl.value;\n    }\n\n    ngOnInit() {\n        if (\n            !this.ngControl ||\n            !this.ngControl.valueChanges ||\n            !this.ngControl.statusChanges\n        ) {\n            return;\n        }\n\n        merge(this.ngControl.valueChanges, this.ngControl.statusChanges)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n                this.refreshLocalValue(this.safeCurrentValue);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    checkControlUpdate() {\n        this.changeDetectorRef.markForCheck();\n    }\n\n    registerOnChange(onChange: (value: T) => void) {\n        this.onChange = onChange;\n    }\n\n    registerOnTouched(onTouched: () => void) {\n        this.onTouched = onTouched;\n    }\n\n    setDisabledState() {\n        this.checkControlUpdate();\n    }\n\n    writeValue(value: T | null) {\n        this.refreshLocalValue(\n            this.ngControl instanceof NgModel && this.previousInternalValue === undefined\n                ? this.ngControl.model\n                : value,\n        );\n    }\n\n    protected abstract getFallbackValue(): T;\n\n    protected updateFocused(focused: boolean) {\n        if (!focused) {\n            this.controlMarkAsTouched();\n        }\n\n        super.updateFocused(focused);\n    }\n\n    protected updateValue(value: T) {\n        if (this.disabled || this.valueIdenticalComparator(this.value, value)) {\n            return;\n        }\n\n        this.previousInternalValue = value;\n        this.controlSetValue(value);\n    }\n\n    protected valueIdenticalComparator(oldValue: T, newValue: T): boolean {\n        return oldValue === newValue;\n    }\n\n    private safeNgControlData<T>(\n        extractor: (ngControl: NgControl) => T | null | undefined,\n        defaultFieldValue: T,\n    ): T {\n        return fallbackValue<T>(\n            this.ngControl && extractor(this.ngControl),\n            defaultFieldValue,\n        );\n    }\n\n    private controlMarkAsTouched() {\n        this.onTouched();\n        this.checkControlUpdate();\n    }\n\n    private controlSetValue(value: T) {\n        this.onChange(value);\n        this.checkControlUpdate();\n    }\n\n    private refreshLocalValue(value: T | null) {\n        this.previousInternalValue = value;\n        this.checkControlUpdate();\n    }\n}\n","import {OnChanges} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nexport abstract class TuiController implements OnChanges {\n    readonly change$ = new Subject<void>();\n\n    ngOnChanges() {\n        this.change$.next();\n    }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {TuiBaseDialogContext} from '@taiga-ui/cdk/interfaces';\nimport {TuiIdService} from '@taiga-ui/cdk/services';\nimport {TuiDialog} from '@taiga-ui/cdk/types';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n@Injectable()\nexport abstract class AbstractTuiDialogService<T extends {}> extends Observable<\n    readonly TuiDialog<T, any>[]\n> {\n    protected abstract readonly component: PolymorpheusContent<TuiDialog<T, any>>;\n\n    protected abstract readonly defaultOptions: T;\n\n    protected readonly dialogs$ = new BehaviorSubject<readonly TuiDialog<T, any>[]>([]);\n\n    protected constructor(\n        @Inject(TuiIdService) private readonly idService: TuiIdService,\n    ) {\n        super(observer => this.dialogs$.subscribe(observer));\n    }\n\n    open<G>(\n        content: PolymorpheusContent<TuiBaseDialogContext<G> & T>,\n        options: Partial<T> = {},\n    ): Observable<G> {\n        return new Observable(observer => {\n            const completeWith = (result: G) => {\n                observer.next(result);\n                observer.complete();\n            };\n            const dialog = {\n                ...this.defaultOptions,\n                ...options,\n                content,\n                completeWith,\n                $implicit: observer,\n                component: this.component,\n                id: this.idService.generate(),\n            };\n\n            this.dialogs$.next([...this.dialogs$.value, dialog]);\n\n            return () => {\n                this.dialogs$.next(this.dialogs$.value.filter(item => item !== dialog));\n            };\n        });\n    }\n}\n","import {Directive} from '@angular/core';\nimport {AbstractTuiControl} from './control';\n\n@Directive()\nexport abstract class AbstractTuiMultipleControl<T> extends AbstractTuiControl<\n    ReadonlyArray<T>\n> {\n    clear() {\n        this.updateValue([]);\n    }\n\n    protected getFallbackValue(): ReadonlyArray<T> {\n        return [];\n    }\n}\n","import {Directive} from '@angular/core';\nimport {AbstractTuiControl} from './control';\n\n@Directive()\nexport abstract class AbstractTuiNullableControl<T> extends AbstractTuiControl<T | null> {\n    protected getFallbackValue(): T | null {\n        return null;\n    }\n}\n","import {OnDestroy} from '@angular/core';\n\n/**\n * Use this abstract class to create your own toggleable themes.\n * A component extending this class must have CSS variables definitions\n * and have ViewEncapsulation set to NONE. A boolean input allows to\n * switch theme on or off.\n */\nexport abstract class AbstractTuiThemeSwitcher implements OnDestroy {\n    static style: HTMLStyleElement | null = null;\n\n    protected constructor(private readonly documentRef: Document) {\n        if (this.style !== null) {\n            this.addTheme();\n\n            return;\n        }\n\n        const styles = this.documentRef.head.querySelectorAll('style');\n\n        (<typeof AbstractTuiThemeSwitcher>this.constructor).style =\n            styles[styles.length - 1];\n    }\n\n    get style(): HTMLStyleElement | null {\n        return (<typeof AbstractTuiThemeSwitcher>this.constructor).style;\n    }\n\n    ngOnDestroy() {\n        this.removeTheme();\n    }\n\n    private addTheme() {\n        if (this.style && !this.documentRef.head.contains(this.style)) {\n            for (let i = this.style.attributes.length - 1; i >= 0; i--) {\n                this.style.removeAttribute(this.style.attributes[i].name);\n            }\n\n            this.documentRef.head.appendChild(this.style);\n        }\n    }\n\n    private removeTheme() {\n        if (this.style && this.documentRef.head.contains(this.style)) {\n            this.documentRef.head.removeChild(this.style);\n        }\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}