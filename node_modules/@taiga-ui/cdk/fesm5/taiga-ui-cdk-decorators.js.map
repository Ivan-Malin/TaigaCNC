{"version":3,"file":"taiga-ui-cdk-decorators.js","sources":["ng://@taiga-ui/cdk/decorators/default-prop.ts","ng://@taiga-ui/cdk/decorators/pure.ts","ng://@taiga-ui/cdk/decorators/required-setter.ts","ng://@taiga-ui/cdk/decorators/taiga-ui-cdk-decorators.ts"],"sourcesContent":["import {tuiAssert} from '@taiga-ui/cdk/classes';\nimport {TuiBooleanHandler} from '@taiga-ui/cdk/types';\n\n/**\n * Decorator for checking input values for undefined. You can also pass\n * optional assertion to check input against.\n *\n * See {@link createPropDecorator} for more details.\n *\n * CAUTION: This decorator overwrites other getters and setters.\n */\nexport function tuiDefaultProp<T extends object, K extends keyof T>(\n    assertion?: TuiBooleanHandler<T[K]>,\n    ...args: any[]\n): PropertyDecorator {\n    return (target, key) => {\n        const {name} = target.constructor;\n        const errorGetDefaultMessage = errorGetDefault(key, name);\n        const errorSetDefaultMessage = errorSetDefault(key, name);\n\n        Object.defineProperty(target, key, {\n            get(): undefined {\n                tuiAssert.assert(false, errorGetDefaultMessage);\n\n                return undefined;\n            },\n            set(this: T, initialValue: T[K]) {\n                const isValid = initialValue !== undefined;\n                const errorMessage = errorSetDefaultInitial(key, name);\n                let currentValue = initialValue;\n\n                tuiAssert.assert(isValid, errorMessage);\n\n                if (isValid && assertion) {\n                    tuiAssert.assert(\n                        assertion.call(this, initialValue),\n                        `${String(key)} in ${name} received:`,\n                        initialValue,\n                        ...args,\n                    );\n                }\n\n                Object.defineProperty(this, key, {\n                    get(): T[K] {\n                        return currentValue;\n                    },\n                    set(this: T, value: T[K]) {\n                        const isValid = value !== undefined;\n                        const backupValue = initialValue;\n\n                        tuiAssert.assert(\n                            isValid,\n                            errorSetDefaultMessage,\n                            String(backupValue),\n                        );\n\n                        if (isValid && assertion) {\n                            tuiAssert.assert(\n                                assertion.call(this, value),\n                                `${String(key)} in ${name} received:`,\n                                value,\n                                ...args,\n                            );\n                        }\n\n                        currentValue = isValid ? value : backupValue;\n                    },\n                });\n            },\n        });\n    };\n}\n\nfunction errorGetDefault(key: string | symbol, component: string): string {\n    return `Default value for ${String(\n        key,\n    )} was not provided in ${component}, error in Taiga UI Angular Kit`;\n}\n\nfunction errorSetDefault(key: string | symbol, component: string): string {\n    return `Undefined was passed as ${String(\n        key,\n    )} to ${component}, which is invalid input, using default value:`;\n}\n\nfunction errorSetDefaultInitial(key: string | symbol, component: string): string {\n    return `Undefined was passed as default value for ${String(\n        key,\n    )} to ${component}, error in Taiga UI Angular Kit`;\n}\n","/**\n * Implements lazy initialization for getter or memoization of a function call similar to pure {@link: Pipe}.\n * Replaces getter with its calculated value upon first call or keeps track of last call arguments and returned\n * value for function, skipping calculation when arguments are strictly the same.\n *\n * @throws error if used not on getter or function\n *\n * CAUTION: `this` is not available inside such functions/getters, they must be pure.\n */\nexport function tuiPure<T>(\n    _target: Object,\n    propertyKey: string,\n    {get, enumerable, value}: TypedPropertyDescriptor<T>,\n): TypedPropertyDescriptor<T> {\n    if (get) {\n        return {\n            enumerable,\n            get(): T {\n                const value = get.call(this);\n\n                Object.defineProperty(this, propertyKey, {enumerable, value});\n\n                return value;\n            },\n        };\n    }\n\n    if (typeof value !== 'function') {\n        throw new Error('tuiPure can only be used with functions or getters');\n    }\n\n    const original = value;\n\n    return {\n        enumerable,\n        get(): T {\n            let previousArgs: ReadonlyArray<unknown> = [];\n            let previousResult: any;\n\n            const patched = (...args: Array<unknown>) => {\n                if (\n                    previousArgs.length === args.length &&\n                    args.every((arg, index) => arg === previousArgs[index])\n                ) {\n                    return previousResult;\n                }\n\n                previousArgs = args;\n                previousResult = original.apply(this, args);\n\n                return previousResult;\n            };\n\n            Object.defineProperty(this, propertyKey, {\n                value: patched,\n            });\n\n            return patched as any;\n        },\n    };\n}\n","import {tuiAssert} from '@taiga-ui/cdk/classes';\nimport {TuiBooleanHandler} from '@taiga-ui/cdk/types';\n\n/**\n * Decorator for checking input setter values against a custom assertion which\n * takes value passed to input setter and component instance as arguments.\n * It specifically checks for undefined values and prevents calls to the\n * original setter in this case.\n */\nexport function tuiRequiredSetter<T extends object, K extends keyof T>(\n    assertion?: TuiBooleanHandler<T[K]>,\n    ...args: any[]\n): MethodDecorator {\n    return (\n        target: Object,\n        key,\n        {configurable, enumerable, get, set}: PropertyDescriptor,\n    ): PropertyDescriptor => {\n        const {name} = target.constructor;\n\n        return {\n            configurable,\n            enumerable,\n            get,\n            set(this: T, value: T[K]) {\n                if (value !== undefined && assertion) {\n                    tuiAssert.assert(\n                        assertion.call(this, value),\n                        `${String(key)} in ${name} received:`,\n                        value,\n                        ...args,\n                    );\n                }\n\n                if (!set || value === undefined) {\n                    tuiAssert.assert(value !== undefined, errorSet(key, name));\n\n                    return;\n                }\n\n                set.call(this, value);\n            },\n        };\n    };\n}\n\nfunction errorSet(key: string | symbol, component: string): string {\n    return `Undefined was passed as ${String(\n        key,\n    )} to ${component}, setter will not be called`;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}