{"version":3,"file":"taiga-ui-cdk-services.js","sources":["ng://@taiga-ui/cdk/services/destroy.service.ts","ng://@taiga-ui/cdk/services/directive-styles.service.ts","ng://@taiga-ui/cdk/services/focus-visible.service.ts","ng://@taiga-ui/cdk/services/hovered.service.ts","ng://@taiga-ui/cdk/services/id.service.ts","ng://@taiga-ui/cdk/services/parents-scroll.service.ts","ng://@taiga-ui/cdk/services/obscured.service.ts","ng://@taiga-ui/cdk/services/resize.service.ts","ng://@taiga-ui/cdk/services/scroll.service.ts","ng://@taiga-ui/cdk/services/static-request.service.ts","ng://@taiga-ui/cdk/services/taiga-ui-cdk-services.ts"],"sourcesContent":["import {Injectable, OnDestroy} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/**\n * Observable abstraction over ngOnDestroy to use with takeUntil\n */\n@Injectable()\nexport class TuiDestroyService extends Subject<void> implements OnDestroy {\n    ngOnDestroy() {\n        this.next();\n        this.complete();\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, Renderer2} from '@angular/core';\nimport {TUI_DEFAULT_RENDERER} from '@taiga-ui/cdk/tokens';\n\n/**\n * Service to use styles with directives\n * @dynamic\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class TuiDirectiveStylesService {\n    constructor(\n        @Inject(DOCUMENT) private readonly documentRef: Document,\n        @Inject(TUI_DEFAULT_RENDERER) private readonly renderer: Renderer2,\n    ) {}\n\n    addStyle(styles: string, attribute: string) {\n        if (this.documentRef.head.querySelector(`style[${attribute}]`)) {\n            return;\n        }\n\n        const style = this.renderer.createElement('style');\n\n        this.renderer.setProperty(style, 'textContent', styles);\n        this.renderer.setAttribute(style, attribute, '');\n        this.documentRef.head.appendChild(style);\n    }\n}\n","import {ChangeDetectorRef, ElementRef, Inject, Injectable} from '@angular/core';\nimport {focusVisibleObservable, watch} from '@taiga-ui/cdk/observables';\nimport {Observable} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {TuiDestroyService} from './destroy.service';\n\n/**\n * Service to imitate :focus-visible\n * (https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible)\n * in browsers that do not support it\n * @dynamic\n */\n@Injectable()\nexport class TuiFocusVisibleService extends Observable<boolean> {\n    private readonly focusVisible$: Observable<boolean>;\n\n    constructor(\n        @Inject(ElementRef) {nativeElement}: ElementRef<Element>,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(TuiDestroyService) destroy$: Observable<void>,\n    ) {\n        super(subscriber => this.focusVisible$.subscribe(subscriber));\n\n        this.focusVisible$ = focusVisibleObservable(nativeElement).pipe(\n            watch(changeDetectorRef),\n            takeUntil(destroy$),\n        );\n    }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {tuiZoneOptimized, typedFromEvent} from '@taiga-ui/cdk/observables';\nimport {getActualTarget} from '@taiga-ui/cdk/utils/dom';\nimport {merge, Observable} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    filter,\n    mapTo,\n    startWith,\n    switchMap,\n    take,\n} from 'rxjs/operators';\n\n// @dynamic\n@Injectable({\n    providedIn: 'root',\n})\nexport class TuiHoveredService {\n    private readonly documentEvents$: Observable<Event>;\n\n    constructor(\n        @Inject(DOCUMENT) documentRef: Document,\n        @Inject(NgZone) private readonly ngZone: NgZone,\n    ) {\n        this.documentEvents$ = merge(\n            typedFromEvent(documentRef, 'mousemove'),\n            typedFromEvent(documentRef, 'touchend'),\n        );\n    }\n\n    createHovered$(\n        target: Element,\n        options: AddEventListenerOptions = {},\n    ): Observable<boolean> {\n        return merge(\n            typedFromEvent(target, 'mouseenter', options),\n            typedFromEvent(target, 'touchstart', options),\n        ).pipe(\n            switchMap(() =>\n                merge(\n                    typedFromEvent(target, 'mouseleave', options),\n                    this.documentEvents$.pipe(\n                        filter(event => !target.contains(getActualTarget(event))),\n                        tuiZoneOptimized(this.ngZone),\n                        take(1),\n                    ),\n                ).pipe(mapTo(false), startWith(true)),\n            ),\n            distinctUntilChanged(),\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\n\nconst TUI = 'tui_';\n\n/**\n * Generates unique ids\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class TuiIdService {\n    private static autoId = 0;\n\n    generate(): string {\n        return `${TUI}${TuiIdService.autoId++}${Date.now()}`;\n    }\n}\n","import {ElementRef, Inject, Injectable} from '@angular/core';\nimport {WINDOW} from '@ng-web-apis/common';\nimport {typedFromEvent} from '@taiga-ui/cdk/observables';\nimport {defer, merge, Observable} from 'rxjs';\n\n/**\n * Service that subscribes to scroll events of all parent elements\n */\n// Ambient type cannot be used without dynamic https://github.com/angular/angular/issues/23395\n// @dynamic\n@Injectable()\nexport class TuiParentsScrollService extends Observable<Event> {\n    private readonly callback$: Observable<Event>;\n\n    constructor(\n        @Inject(ElementRef) {nativeElement}: ElementRef<Element>,\n        @Inject(WINDOW) windowRef: Window,\n    ) {\n        super(subscriber => this.callback$.subscribe(subscriber));\n\n        this.callback$ = defer(() => {\n            const eventTargets: Array<Element | Window> = [windowRef, nativeElement];\n\n            while (nativeElement.parentElement) {\n                nativeElement = nativeElement.parentElement;\n                eventTargets.push(nativeElement);\n            }\n\n            return merge<Event>(\n                ...eventTargets.map<Observable<Event>>(element =>\n                    typedFromEvent(element, 'scroll'),\n                ),\n            );\n        });\n    }\n}\n","import {ElementRef, Inject, Injectable, NgZone, Self} from '@angular/core';\nimport {WINDOW} from '@ng-web-apis/common';\nimport {POLLING_TIME} from '@taiga-ui/cdk/constants';\nimport {tuiZoneOptimized} from '@taiga-ui/cdk/observables';\nimport {getElementObscurers} from '@taiga-ui/cdk/utils/dom';\nimport {fromEvent, interval, merge, Observable} from 'rxjs';\nimport {delay, distinctUntilChanged, map, startWith, takeUntil} from 'rxjs/operators';\nimport {TuiDestroyService} from './destroy.service';\nimport {TuiParentsScrollService} from './parents-scroll.service';\n\n// @bad TODO: Consider Intersection Observer with fallback to current implementation\n/**\n * Service that monitors element visibility by subscribing to scrolls\n * and polling with set interval, returns either null or an array\n * of elements that overlap given element edges\n */\n// Ambient type cannot be used without dynamic https://github.com/angular/angular/issues/23395\n// @dynamic\n@Injectable()\nexport class TuiObscuredService extends Observable<null | ReadonlyArray<Element>> {\n    private obscured$: Observable<null | ReadonlyArray<Element>>;\n\n    constructor(\n        @Inject(TuiParentsScrollService)\n        @Self()\n        parentsScroll$: TuiParentsScrollService,\n        @Inject(ElementRef) {nativeElement}: ElementRef<Element>,\n        @Inject(NgZone) ngZone: NgZone,\n        @Inject(WINDOW) windowRef: Window,\n        @Inject(TuiDestroyService) destroy$: Observable<void>,\n    ) {\n        super(subscriber => this.obscured$.subscribe(subscriber));\n\n        this.obscured$ = merge(\n            // delay is added so it will not interfere with other listeners\n            merge(parentsScroll$, fromEvent(windowRef, 'resize')).pipe(delay(0)),\n            interval(POLLING_TIME),\n        ).pipe(\n            map(() => getElementObscurers(nativeElement)),\n            startWith(null),\n            distinctUntilChanged(),\n            tuiZoneOptimized(ngZone),\n            takeUntil(destroy$),\n        );\n    }\n}\n","import {ElementRef, Inject, Injectable, NgZone} from '@angular/core';\nimport {\n    RESIZE_OBSERVER_SUPPORT,\n    RESIZE_OPTION_BOX,\n    ResizeObserverService,\n} from '@ng-web-apis/resize-observer';\nimport {EMPTY_ARRAY, POLLING_TIME} from '@taiga-ui/cdk/constants';\nimport {tuiZonefree} from '@taiga-ui/cdk/observables';\nimport {interval, Observable} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    mapTo,\n    takeUntil,\n} from 'rxjs/operators';\nimport {TuiDestroyService} from './destroy.service';\n\n// @dynamic\n@Injectable()\nexport class TuiResizeService extends ResizeObserverService {\n    constructor(\n        @Inject(ElementRef) elementRef: ElementRef<HTMLElement>,\n        @Inject(NgZone) ngZone: NgZone,\n        @Inject(TuiDestroyService) destroy$: Observable<void>,\n        @Inject(RESIZE_OBSERVER_SUPPORT) support: boolean,\n        @Inject(RESIZE_OPTION_BOX) box: ResizeObserverOptions['box'],\n    ) {\n        super(elementRef, ngZone, support, box);\n\n        return this.pipe(\n            catchError(() =>\n                interval(POLLING_TIME).pipe(\n                    map(\n                        () =>\n                            `${elementRef.nativeElement.clientWidth} ${elementRef.nativeElement.clientHeight}`,\n                    ),\n                    distinctUntilChanged(),\n                    mapTo(EMPTY_ARRAY),\n                ),\n            ),\n            takeUntil(destroy$),\n            debounceTime(0),\n            tuiZonefree(ngZone),\n        );\n    }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {ANIMATION_FRAME, PERFORMANCE} from '@ng-web-apis/common';\nimport {tuiAssert} from '@taiga-ui/cdk/classes';\nimport {clamp} from '@taiga-ui/cdk/utils/math';\nimport {easeInOutQuad} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {defer, Observable, of, timer} from 'rxjs';\nimport {map, switchMap, takeUntil, tap} from 'rxjs/operators';\n\nconst SCROLL_TIME = 300;\n\n// @dynamic\n@Injectable()\nexport class TuiScrollService {\n    constructor(\n        @Inject(PERFORMANCE) private readonly performanceRef: Performance,\n        @Inject(ANIMATION_FRAME) private readonly animationFrame$: Observable<number>,\n    ) {}\n\n    scroll$(\n        element: Element,\n        scrollTop: number,\n        scrollLeft: number = element.scrollLeft,\n        duration: number = SCROLL_TIME,\n    ): Observable<[number, number]> {\n        tuiAssert.assert(duration >= 0, 'Duration cannot be negative');\n        tuiAssert.assert(scrollTop >= 0, 'scrollTop cannot be negative');\n        tuiAssert.assert(scrollLeft >= 0, 'scrollLeft cannot be negative');\n\n        const initialTop = element.scrollTop;\n        const initialLeft = element.scrollLeft;\n        const deltaTop = scrollTop - initialTop;\n        const deltaLeft = scrollLeft - initialLeft;\n        const observable = !duration\n            ? of([scrollTop, scrollLeft] as [number, number])\n            : defer(() => of(this.performanceRef.now())).pipe(\n                  switchMap(start => this.animationFrame$.pipe(map(now => now - start))),\n                  takeUntil(timer(duration)),\n                  map(elapsed => easeInOutQuad(clamp(elapsed / duration, 0, 1))),\n                  map(\n                      percent =>\n                          [\n                              initialTop + deltaTop * percent,\n                              initialLeft + deltaLeft * percent,\n                          ] as [number, number],\n                  ),\n              );\n\n        return observable.pipe(\n            tap(([scrollTop, scrollLeft]) => {\n                element.scrollTop = scrollTop;\n                element.scrollLeft = scrollLeft;\n            }),\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Observer} from 'rxjs';\nimport {shareReplay} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TuiStaticRequestService {\n    private cache = new Map<string, Observable<string>>();\n\n    request(url: string): Observable<string> {\n        const cache = this.cache.get(url);\n\n        if (cache) {\n            return cache;\n        }\n\n        const observable = new Observable((observer: Observer<string>) => {\n            const xhr = new XMLHttpRequest();\n\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === 4) {\n                    const response = xhr.responseType ? xhr.response : xhr.responseText;\n\n                    if (xhr.status === 200) {\n                        observer.next(response);\n                        observer.complete();\n                    } else {\n                        observer.error(response);\n                    }\n                }\n            };\n            xhr.open('GET', url);\n            xhr.send();\n\n            return () => {\n                xhr.abort();\n            };\n        });\n        const piped = observable.pipe(shareReplay(1));\n\n        this.cache.set(url, piped);\n\n        return piped;\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}