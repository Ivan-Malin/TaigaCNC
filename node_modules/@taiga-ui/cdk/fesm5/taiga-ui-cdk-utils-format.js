import { tuiAssert } from '@taiga-ui/cdk/classes';

/**
 * Pads a string with symbols in the beginning
 *
 * @param sourceString
 * @param minResultLength
 * @param padString string to pad with
 */
function padStart(sourceString, minResultLength, padString) {
    if (padString === void 0) { padString = ' '; }
    var padSize = minResultLength - sourceString.length;
    if (padSize <= 0) {
        return sourceString;
    }
    return padString.repeat(padSize / padString.length).slice(0, padSize) + sourceString;
}

/**
 * Adds 'px' to the number and turns it into a string
 */
function px(value) {
    tuiAssert.assert(Number.isFinite(value), 'Value must be finite number');
    return value + "px";
}

/**
 * Generated bundle index. Do not edit.
 */

export { padStart, px };
//# sourceMappingURL=taiga-ui-cdk-utils-format.js.map
