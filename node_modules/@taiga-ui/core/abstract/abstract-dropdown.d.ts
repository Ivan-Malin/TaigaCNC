import { AfterViewChecked, ComponentFactoryResolver, ComponentRef, ElementRef, Injector, OnDestroy } from '@angular/core';
import { TuiActiveZoneDirective, TuiPortalService } from '@taiga-ui/cdk';
import { TuiDropdownBoxComponent } from '@taiga-ui/core/components/dropdown-box';
import { TuiDropdownWidth } from '@taiga-ui/core/enums';
import { TuiDropdown } from '@taiga-ui/core/interfaces';
import { TuiHorizontalDirection, TuiVerticalDirection } from '@taiga-ui/core/types';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
export declare abstract class AbstractTuiDropdown implements TuiDropdown, AfterViewChecked, OnDestroy {
    private readonly componentFactoryResolver;
    private readonly injector;
    private readonly portalService;
    protected readonly elementRef: ElementRef<HTMLElement>;
    readonly activeZone: TuiActiveZoneDirective | null;
    content: PolymorpheusContent;
    tuiDropdownHost: HTMLElement | null;
    minHeight: number;
    maxHeight: number;
    align: TuiHorizontalDirection;
    direction: TuiVerticalDirection | null;
    sided: boolean;
    limitMinWidth: TuiDropdownWidth;
    dropdownBoxRef: ComponentRef<TuiDropdownBoxComponent> | null;
    abstract refresh$: Observable<unknown>;
    constructor(componentFactoryResolver: ComponentFactoryResolver, injector: Injector, portalService: TuiPortalService, elementRef: ElementRef<HTMLElement>, activeZone: TuiActiveZoneDirective | null);
    ngOnDestroy(): void;
    ngAfterViewChecked(): void;
    get clientRect(): ClientRect;
    get host(): HTMLElement;
    get fixed(): boolean;
    protected openDropdownBox(): void;
    protected closeDropdownBox(): void;
}
