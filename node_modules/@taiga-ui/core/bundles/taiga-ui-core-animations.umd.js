(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/animations'), require('@taiga-ui/core/constants')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/core/animations', ['exports', '@angular/animations', '@taiga-ui/core/constants'], factory) :
    (global = global || self, factory((global['taiga-ui'] = global['taiga-ui'] || {}, global['taiga-ui'].core = global['taiga-ui'].core || {}, global['taiga-ui'].core.animations = {}), global.ng.animations, global['taiga-ui'].core.constants));
}(this, (function (exports, animations, constants) { 'use strict';

    var TRANSITION = constants.TUI_ANIMATION_DURATION + ' ease-in-out';
    // @bad TODO: Break into files
    var tuiHeightCollapse = animations.trigger('tuiHeightCollapse', [
        animations.transition(':enter', [animations.style({ height: 0 }), animations.animate(TRANSITION, animations.style({ height: '*' }))]),
        animations.transition(':leave', [animations.style({ height: '*' }), animations.animate(TRANSITION, animations.style({ height: 0 }))]),
    ]);
    var tuiHeightCollapseList = animations.trigger('tuiHeightCollapseList', [
        animations.transition('* => *', [
            animations.query(':enter', [
                animations.style({ height: 0 }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ height: '*' })),
                ]),
            ], {
                optional: true,
            }),
            animations.query(':leave', [
                animations.style({ height: '*' }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ height: 0 })),
                ]),
            ], {
                optional: true,
            }),
        ]),
    ]);
    var tuiWidthCollapse = animations.trigger('tuiWidthCollapse', [
        animations.transition(':enter', [animations.style({ width: 0 }), animations.animate(TRANSITION, animations.style({ width: '*' }))]),
        animations.transition(':leave', [animations.style({ width: '*' }), animations.animate(TRANSITION, animations.style({ width: 0 }))]),
    ]);
    var tuiWidthCollapseList = animations.trigger('tuiWidthCollapseList', [
        animations.transition('* => *', [
            animations.query(':enter', [
                animations.style({ width: 0 }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ width: '*' })),
                ]),
            ], {
                optional: true,
            }),
            animations.query(':leave', [
                animations.style({ width: '*' }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ width: 0 })),
                ]),
            ], {
                optional: true,
            }),
        ]),
    ]);
    var tuiFadeIn = animations.trigger('tuiFadeIn', [
        animations.transition(':enter', [animations.style({ opacity: 0 }), animations.animate(TRANSITION, animations.style({ opacity: 1 }))]),
        animations.transition(':leave', [animations.style({ opacity: 1 }), animations.animate(TRANSITION, animations.style({ opacity: 0 }))]),
    ]);
    var tuiFadeInList = animations.trigger('tuiFadeInList', [
        animations.transition('* => *', [
            animations.query(':enter', [
                animations.style({ opacity: 0 }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ opacity: 1 })),
                ]),
            ], {
                optional: true,
            }),
            animations.query(':leave', [
                animations.style({ opacity: 1 }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ opacity: 0 })),
                ]),
            ], {
                optional: true,
            }),
        ]),
    ]);
    var tuiFadeInTop = animations.trigger('tuiFadeInTop', [
        animations.transition(':enter', [
            animations.style({ transform: 'translateY(-10px)', opacity: 0 }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateY(0)', opacity: 1 })),
        ]),
        animations.transition(':leave', [
            animations.style({ transform: 'translateY(0)', opacity: 1 }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateY(-10px)', opacity: 0 })),
        ]),
    ]);
    var tuiFadeInBottom = animations.trigger('tuiFadeInBottom', [
        animations.transition(':enter', [
            animations.style({ transform: 'translateY(10px)', opacity: 0 }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateY(0)', opacity: 1 })),
        ]),
        animations.transition(':leave', [
            animations.style({ transform: 'translateY(0)', opacity: 1 }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateY(10px)', opacity: 0 })),
        ]),
    ]);
    var tuiDropdownAnimation = animations.trigger('tuiDropdownAnimation', [
        animations.transition("* => " + "fadeInTop" /* FadeInTop */, [
            animations.style({ transform: 'translateY(-10px)', opacity: 0 }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateY(0)', opacity: 1 })),
        ]),
        animations.transition("* => " + "fadeInBottom" /* FadeInBottom */, [
            animations.style({ transform: 'translateY(10px)', opacity: 0 }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateY(0)', opacity: 1 })),
        ]),
        animations.transition("fadeInBottom" /* FadeInBottom */ + " => *", [
            animations.style({ transform: 'translateY(0)', opacity: 1 }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateY(10px)', opacity: 0 })),
        ]),
        animations.transition("fadeInTop" /* FadeInTop */ + " => *", [
            animations.style({ transform: 'translateY(0)', opacity: 1 }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateY(-10px)', opacity: 0 })),
        ]),
    ]);
    var tuiScaleIn = animations.trigger('tuiScaleIn', [
        animations.transition(':enter', [
            animations.style({ transform: 'scale(0)' }),
            animations.animate(TRANSITION, animations.style({ transform: 'scale(1)' })),
        ]),
        animations.transition(':leave', [
            animations.style({ transform: 'scale(1)' }),
            animations.animate(TRANSITION, animations.style({ transform: 'scale(0)' })),
        ]),
    ]);
    var tuiScaleInList = animations.trigger('tuiScaleInList', [
        animations.transition('* => *', [
            animations.query(':enter', [
                animations.style({ transform: 'scale(0)' }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ transform: 'scale(1)' })),
                ]),
            ], { optional: true }),
            animations.query(':leave', [
                animations.style({ transform: 'scale(1)' }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ transform: 'scale(0)' })),
                ]),
            ], { optional: true }),
        ]),
    ]);
    var tuiSlideIn = animations.trigger('tuiSlideIn', [
        animations.transition("* => left", [
            animations.style({ transform: 'translateX(-100%)' }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateX(0)' })),
        ]),
        animations.transition('left => *', [
            animations.style({ transform: 'translateX(0)' }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateX(-100%)' })),
        ]),
        animations.transition('* => right', [
            animations.style({ transform: 'translateX(100%)' }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateX(0)' })),
        ]),
        animations.transition('right => *', [
            animations.style({ transform: 'translateX(0)' }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateX(100%)' })),
        ]),
    ]);
    var tuiSlideInLeft = animations.trigger('tuiSlideInLeft', [
        animations.transition(':enter', [
            animations.style({ transform: 'translateX(-100%)' }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateX(0)' })),
        ]),
        animations.transition(':leave', [
            animations.style({ transform: 'translateX(0)' }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateX(-100%)' })),
        ]),
    ]);
    var tuiSlideInLeftList = animations.trigger('tuiSlideInLeftList', [
        animations.transition('* => *', [
            animations.query(':enter', [
                animations.style({ transform: 'translateX(-100%)' }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ transform: 'translateX(0)' })),
                ]),
            ], { optional: true }),
            animations.query(':leave', [
                animations.style({ transform: 'translateX(0)' }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ transform: 'translateX(-100%)' })),
                ]),
            ], { optional: true }),
        ]),
    ]);
    var tuiSlideInRight = animations.trigger('tuiSlideInRight', [
        animations.transition(':enter', [
            animations.style({ transform: 'translateX(100%)' }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateX(0)' })),
        ]),
        animations.transition(':leave', [
            animations.style({ transform: 'translateX(0)' }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateX(100%)' })),
        ]),
    ]);
    var tuiSlideInRightList = animations.trigger('tuiSlideInRightList', [
        animations.transition('* => *', [
            animations.query(':enter', [
                animations.style({ transform: 'translateX(100%)' }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ transform: 'translateX(0)' })),
                ]),
            ], { optional: true }),
            animations.query(':leave', [
                animations.style({ transform: 'translateX(0)' }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ transform: 'translateX(100%)' })),
                ]),
            ], { optional: true }),
        ]),
    ]);
    var tuiSlideInTop = animations.trigger('tuiSlideInTop', [
        animations.transition(':enter', [
            animations.style({ transform: 'translate3d(0,{{start}},0)' }),
            animations.animate(TRANSITION, animations.style({ transform: 'translate3d(0,{{end}},0)' })),
        ], { params: { end: 0, start: '100%' } }),
        animations.transition(':leave', [
            animations.style({ transform: 'translate3d(0,{{end}},0)' }),
            animations.animate(TRANSITION, animations.style({ transform: 'translate3d(0,{{start}},0)' })),
        ], { params: { end: 0, start: '100%' } }),
    ]);
    var tuiSlideInTopList = animations.trigger('tuiSlideInTopList', [
        animations.transition('* => *', [
            animations.query(':enter', [
                animations.style({ transform: 'translateY(100%)' }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ transform: 'translateY(0)' })),
                ]),
            ], { optional: true }),
            animations.query(':leave', [
                animations.style({ transform: 'translateY(0)' }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ transform: 'translateY(100%)' })),
                ]),
            ], { optional: true }),
        ]),
    ]);
    var tuiSlideInBottom = animations.trigger('tuiSlideInBottom', [
        animations.transition(':enter', [
            animations.style({ transform: 'translateY(-100%)' }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateY(0)' })),
        ]),
        animations.transition(':leave', [
            animations.style({ transform: 'translateY(0)' }),
            animations.animate(TRANSITION, animations.style({ transform: 'translateY(-100%)' })),
        ]),
    ]);
    var tuiSlideInBottomList = animations.trigger('tuiSlideInBottomList', [
        animations.transition('* => *', [
            animations.query(':enter', [
                animations.style({ transform: 'translateY(-100%)' }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ transform: 'translateY(0)' })),
                ]),
            ], { optional: true }),
            animations.query(':leave', [
                animations.style({ transform: 'translateY(0)' }),
                animations.stagger(constants.TUI_ANIMATION_DURATION, [
                    animations.animate(TRANSITION, animations.style({ transform: 'translateY(-100%)' })),
                ]),
            ], { optional: true }),
        ]),
    ]);

    exports.tuiDropdownAnimation = tuiDropdownAnimation;
    exports.tuiFadeIn = tuiFadeIn;
    exports.tuiFadeInBottom = tuiFadeInBottom;
    exports.tuiFadeInList = tuiFadeInList;
    exports.tuiFadeInTop = tuiFadeInTop;
    exports.tuiHeightCollapse = tuiHeightCollapse;
    exports.tuiHeightCollapseList = tuiHeightCollapseList;
    exports.tuiScaleIn = tuiScaleIn;
    exports.tuiScaleInList = tuiScaleInList;
    exports.tuiSlideIn = tuiSlideIn;
    exports.tuiSlideInBottom = tuiSlideInBottom;
    exports.tuiSlideInBottomList = tuiSlideInBottomList;
    exports.tuiSlideInLeft = tuiSlideInLeft;
    exports.tuiSlideInLeftList = tuiSlideInLeftList;
    exports.tuiSlideInRight = tuiSlideInRight;
    exports.tuiSlideInRightList = tuiSlideInRightList;
    exports.tuiSlideInTop = tuiSlideInTop;
    exports.tuiSlideInTopList = tuiSlideInTopList;
    exports.tuiWidthCollapse = tuiWidthCollapse;
    exports.tuiWidthCollapseList = tuiWidthCollapseList;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=taiga-ui-core-animations.umd.js.map
