(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core/directives/hint-controller'), require('@taiga-ui/core/directives/textfield-controller'), require('@taiga-ui/core/tokens'), require('@taiga-ui/core/utils/miscellaneous'), require('@tinkoff/ng-polymorpheus'), require('rxjs'), require('@angular/forms'), require('@taiga-ui/core/providers'), require('@angular/common'), require('@taiga-ui/core/components/svg'), require('@taiga-ui/core/components/tooltip'), require('@taiga-ui/core/components/wrapper'), require('@taiga-ui/core/directives/described-by'), require('@taiga-ui/core/directives/mask-accessor')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/core/components/primitive-textfield', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core/directives/hint-controller', '@taiga-ui/core/directives/textfield-controller', '@taiga-ui/core/tokens', '@taiga-ui/core/utils/miscellaneous', '@tinkoff/ng-polymorpheus', 'rxjs', '@angular/forms', '@taiga-ui/core/providers', '@angular/common', '@taiga-ui/core/components/svg', '@taiga-ui/core/components/tooltip', '@taiga-ui/core/components/wrapper', '@taiga-ui/core/directives/described-by', '@taiga-ui/core/directives/mask-accessor'], factory) :
    (global = global || self, factory((global['taiga-ui'] = global['taiga-ui'] || {}, global['taiga-ui'].core = global['taiga-ui'].core || {}, global['taiga-ui'].core.components = global['taiga-ui'].core.components || {}, global['taiga-ui'].core.components['primitive-textfield'] = {}), global.ng.core, global.cdk, global['taiga-ui'].core.directives['hint-controller'], global['taiga-ui'].core.directives['textfield-controller'], global['taiga-ui'].core.tokens, global['taiga-ui'].core.utils.miscellaneous, global.ngPolymorpheus, global.rxjs, global.ng.forms, global['taiga-ui'].core.providers, global.ng.common, global['taiga-ui'].core.components.svg, global['taiga-ui'].core.components.tooltip, global['taiga-ui'].core.components.wrapper, global['taiga-ui'].core.directives['described-by'], global['taiga-ui'].core.directives['mask-accessor']));
}(this, (function (exports, core, cdk, hintController, textfieldController, tokens, miscellaneous, ngPolymorpheus, rxjs, forms, providers, common, svg, tooltip, wrapper, describedBy, maskAccessor) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __createBinding(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    }

    function __exportStar(m, exports) {
        for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }

    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var ɵ0 = cdk.identity;
    var TUI_PRIMITIVE_TEXTFIELD_PROVIDERS = [
        {
            provide: cdk.TUI_FOCUSABLE_ITEM_ACCESSOR,
            useExisting: core.forwardRef(function () { return TuiPrimitiveTextfieldComponent; }),
        },
        {
            provide: tokens.TUI_VALUE_ACCESSOR,
            deps: [[new core.Optional(), forms.NG_VALUE_ACCESSOR]],
            useFactory: ɵ0,
        },
        textfieldController.TEXTFIELD_CONTROLLER_PROVIDER,
        hintController.HINT_CONTROLLER_PROVIDER,
        providers.MODE_PROVIDER,
    ];

    var ICON_PADDING = 28;
    var ICON_PADDING_S = 24;
    var TuiPrimitiveTextfieldComponent = /** @class */ (function (_super) {
        __extends(TuiPrimitiveTextfieldComponent, _super);
        function TuiPrimitiveTextfieldComponent(mode$, appearance, controller, hintController) {
            var _this = _super.call(this) || this;
            _this.mode$ = mode$;
            _this.appearance = appearance;
            _this.controller = controller;
            _this.hintController = hintController;
            _this.editable = true;
            _this.filler = '';
            _this.iconAlign = 'right';
            _this.iconContent = null;
            _this.readOnly = false;
            _this.invalid = false;
            _this.disabled = false;
            _this.postfix = '';
            _this.value = '';
            _this.valueChange = new core.EventEmitter();
            _this.autofilledChange = new core.EventEmitter();
            _this.autofilled = false;
            return _this;
        }
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "nativeFocusableElement", {
            get: function () {
                return this.computedDisabled || !this.focusableElement
                    ? null
                    : this.focusableElement.nativeElement;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "focused", {
            get: function () {
                return cdk.isNativeFocused(this.nativeFocusableElement);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "size", {
            get: function () {
                return this.controller.size;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "labelOutside", {
            get: function () {
                return this.controller.labelOutside;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "computedInvalid", {
            get: function () {
                return !this.readOnly && !this.disabled && this.invalid;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "inputHidden", {
            get: function () {
                return !!this.content;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasTooltip", {
            get: function () {
                return !!this.hintController && !!this.hintController.content && !this.disabled;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasCustomContent", {
            get: function () {
                return !!this.controller.customContent;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "iconPaddingLeft", {
            get: function () {
                return this.size === 's' ? ICON_PADDING_S : ICON_PADDING;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "paddingLeft", {
            get: function () {
                return ((this.iconAlignLeft ? this.iconPaddingLeft : 0) +
                    miscellaneous.getPadding(miscellaneous.sizeBigger(this.size, 'm'), false));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "paddingRight", {
            get: function () {
                return miscellaneous.getPadding(miscellaneous.sizeBigger(this.size, 'm'), this.iconAlignRight, this.hasCleaner, this.hasTooltip, this.hasCustomContent);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasPlaceholder", {
            get: function () {
                return ((this.big && !this.labelOutside) ||
                    (!this.hasValue && !this.hasExampleText && !this.hasPostfix));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "placeholderRaised", {
            get: function () {
                return (this.big &&
                    !this.labelOutside &&
                    ((this.computedFocused && !this.readOnly) || this.hasValue || this.autofilled));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "iconAlignLeft", {
            get: function () {
                return this.hasIcon && this.iconAlign === 'left';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "iconAlignRight", {
            get: function () {
                return this.hasIcon && this.iconAlign === 'right';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasValue", {
            get: function () {
                return !!this.value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasCleaner", {
            get: function () {
                return (this.controller.cleaner && this.hasValue && !this.disabled && !this.readOnly);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "rightAligned", {
            get: function () {
                return (this.appearance === "table" /* Table */ &&
                    (this.controller.inputMode === "numeric" /* Numeric */ ||
                        this.controller.inputMode === "decimal" /* Decimal */));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasValueDecoration", {
            get: function () {
                var fillerOrExampleShown = this.computedFocused && !this.readOnly && this.hasFillerOrExampleText;
                return fillerOrExampleShown || this.hasPostfix;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasPostfix", {
            get: function () {
                var isPostfixAllowed = this.hasValue || (this.computedFocused && !this.readOnly);
                return isPostfixAllowed && !!this.postfix;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasFillerOrExampleText", {
            get: function () {
                return this.hasValue ? !!this.computedFiller : !!this.controller.exampleText;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "postfixShifted", {
            get: function () {
                return this.postfix !== '%' && (this.hasFillerOrExampleText || this.hasValue);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "computedFiller", {
            get: function () {
                return this.hasExampleText
                    ? this.controller.exampleText
                    : this.filler.slice(this.value.length);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "name", {
            // Safari expiration date autofill workaround
            get: function () {
                return this.controller.autocomplete === "cc-exp" /* CcExp */
                    ? 'ccexpiryyear'
                    : null;
            },
            enumerable: true,
            configurable: true
        });
        TuiPrimitiveTextfieldComponent.prototype.clear = function () {
            this.updateValue('');
        };
        TuiPrimitiveTextfieldComponent.prototype.onMouseDown = function (event) {
            if (!this.focusableElement ||
                event.target === this.focusableElement.nativeElement) {
                return;
            }
            event.preventDefault();
            cdk.setNativeFocused(this.focusableElement.nativeElement);
        };
        TuiPrimitiveTextfieldComponent.prototype.onModelChange = function (value) {
            this.updateValue(value);
        };
        TuiPrimitiveTextfieldComponent.prototype.onHovered = function (hovered) {
            this.updateHovered(hovered);
        };
        TuiPrimitiveTextfieldComponent.prototype.onFocused = function (focused) {
            this.updateFocused(focused);
        };
        TuiPrimitiveTextfieldComponent.prototype.onAutofilled = function (autofilled) {
            this.updateAutofilled(autofilled);
        };
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "big", {
            get: function () {
                return this.size !== 's';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasIcon", {
            get: function () {
                return !!this.iconContent;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasExampleText", {
            get: function () {
                return (!!this.controller.exampleText &&
                    this.computedFocused &&
                    !this.hasValue &&
                    !this.readOnly);
            },
            enumerable: true,
            configurable: true
        });
        TuiPrimitiveTextfieldComponent.prototype.updateAutofilled = function (autofilled) {
            if (this.autofilled === autofilled) {
                return;
            }
            this.autofilled = autofilled;
            this.autofilledChange.emit(autofilled);
        };
        TuiPrimitiveTextfieldComponent.prototype.updateValue = function (value) {
            this.value = value;
            this.valueChange.emit(value);
        };
        TuiPrimitiveTextfieldComponent.ctorParameters = function () { return [
            { type: rxjs.Observable, decorators: [{ type: core.Inject, args: [tokens.TUI_MODE,] }] },
            { type: String, decorators: [{ type: core.Inject, args: [tokens.TUI_TEXTFIELD_APPEARANCE,] }] },
            { type: textfieldController.TuiTextfieldController, decorators: [{ type: core.Inject, args: [textfieldController.TUI_TEXTIFELD_WATCHED_CONTROLLER,] }] },
            { type: hintController.TuiHintControllerDirective, decorators: [{ type: core.Inject, args: [hintController.TUI_HINT_WATCHED_CONTROLLER,] }] }
        ]; };
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "editable", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "filler", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "iconAlign", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "iconContent", void 0);
        __decorate([
            core.Input(),
            core.HostBinding('class._readonly'),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "readOnly", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "invalid", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "disabled", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "postfix", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiPrimitiveTextfieldComponent.prototype, "value", void 0);
        __decorate([
            core.Output()
        ], TuiPrimitiveTextfieldComponent.prototype, "valueChange", void 0);
        __decorate([
            core.Output()
        ], TuiPrimitiveTextfieldComponent.prototype, "autofilledChange", void 0);
        __decorate([
            core.ViewChild('focusableElement')
        ], TuiPrimitiveTextfieldComponent.prototype, "focusableElement", void 0);
        __decorate([
            core.ContentChild(ngPolymorpheus.PolymorpheusOutletComponent)
        ], TuiPrimitiveTextfieldComponent.prototype, "content", void 0);
        __decorate([
            core.HostBinding('attr.data-tui-host-size')
        ], TuiPrimitiveTextfieldComponent.prototype, "size", null);
        __decorate([
            core.HostBinding('class._label-outside')
        ], TuiPrimitiveTextfieldComponent.prototype, "labelOutside", null);
        __decorate([
            core.HostBinding('class._invalid')
        ], TuiPrimitiveTextfieldComponent.prototype, "computedInvalid", null);
        __decorate([
            core.HostBinding('class._right-aligned')
        ], TuiPrimitiveTextfieldComponent.prototype, "rightAligned", null);
        TuiPrimitiveTextfieldComponent = __decorate([
            core.Component({
                selector: 'tui-primitive-textfield',
                template: "<tui-wrapper\n    automation-id=\"tui-primitive-textfield__wrapper\"\n    [appearance]=\"appearance\"\n    [readOnly]=\"readOnly\"\n    [disabled]=\"disabled\"\n    [focused]=\"computedFocused\"\n    [hovered]=\"computedHovered\"\n    [pressed]=\"computedPressed\"\n    [invalid]=\"computedInvalid\"\n    (tuiHoveredChange)=\"onHovered($event)\"\n    (mousedown)=\"onMouseDown($event)\"\n>\n    <input\n        #focusableElement\n        tuiMaskAccessor\n        automation-id=\"tui-primitive-textfield__native-input\"\n        class=\"input\"\n        [class.input_hidden]=\"inputHidden\"\n        [style.paddingLeft.px]=\"paddingLeft\"\n        [style.paddingRight.px]=\"paddingRight\"\n        [attr.disabled]=\"computedDisabled || null\"\n        [attr.maxLength]=\"controller.maxLength\"\n        [attr.name]=\"name\"\n        [attr.aria-placeholder]=\"controller.exampleText\"\n        [attr.aria-invalid]=\"computedInvalid\"\n        [autocomplete]=\"controller.autocomplete\"\n        [type]=\"controller.type\"\n        [id]=\"id\"\n        [readOnly]=\"readOnly || !editable\"\n        [tuiInputMode]=\"controller.inputMode\"\n        [tuiFocusable]=\"computedFocusable\"\n        [tuiDescribedBy]=\"id\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"onModelChange($event)\"\n        (tuiFocusedChange)=\"onFocused($event)\"\n        (tuiAutofilledChange)=\"onAutofilled($event)\"\n    />\n    <div\n        *ngIf=\"inputHidden\"\n        automation-id=\"tui-primitive-textfield__value\"\n        class=\"input input_template\"\n        [style.paddingLeft.px]=\"paddingLeft\"\n        [style.borderRightWidth.px]=\"paddingRight\"\n    >\n        <ng-content select=\"[polymorpheus-outlet]\"></ng-content>\n    </div>\n    <div class=\"content\" tuiPreventDefault=\"click\">\n        <div\n            polymorpheus-outlet\n            *ngIf=\"iconAlignLeft\"\n            class=\"icon icon_left\"\n            [content]=\"iconContent\"\n        >\n            <ng-template let-iconSrc>\n                <tui-svg [src]=\"iconSrc\"></tui-svg>\n            </ng-template>\n        </div>\n        <div class=\"wrapper\">\n            <span aria-hidden=\"true\" class=\"value\">{{value}}</span>\n            <label\n                *ngIf=\"hasPlaceholder\"\n                automation-id=\"tui-primitive-textfield__placeholder\"\n                class=\"placeholder\"\n                [class.placeholder_raised]=\"placeholderRaised\"\n                [for]=\"id\"\n            >\n                <ng-content></ng-content>\n            </label>\n            <div\n                *ngIf=\"hasValueDecoration\"\n                class=\"value-decoration\"\n                automation-id=\"tui-primitive-textfield__value-decoration\"\n                aria-hidden=\"true\"\n            >\n                <span class=\"value-decoration-inner\">\n                    <span class=\"ghost\">{{value}}</span>\n                    <span automation-id=\"tui-primitive-textfield__example-text\"\n                        >{{computedFiller}}</span\n                    >\n                    <span\n                        *ngIf=\"hasPostfix\"\n                        class=\"postfix\"\n                        [class.postfix_shifted]=\"postfixShifted\"\n                        >{{postfix}}</span\n                    >\n                </span>\n            </div>\n        </div>\n        <div\n            polymorpheus-outlet\n            *ngIf=\"hasCustomContent\"\n            class=\"custom-content\"\n            automation-id=\"tui-primitive-textfield__custom-content\"\n            [content]=\"controller.customContent\"\n        >\n            <ng-template let-iconSrc>\n                <tui-svg class=\"custom-icon\" [src]=\"iconSrc\"></tui-svg>\n            </ng-template>\n        </div>\n        <tui-svg\n            *ngIf=\"hasCleaner\"\n            class=\"cleaner\"\n            automation-id=\"tui-primitive-textfield__cleaner\"\n            src=\"tuiIconCloseLarge\"\n            (click.stop)=\"clear()\"\n        ></tui-svg>\n        <tui-tooltip\n            *ngIf=\"hasTooltip\"\n            automation-id=\"tui-primitive-textfield__tooltip\"\n            [describeId]=\"id\"\n            [content]=\"hintController.content\"\n            [direction]=\"hintController.direction\"\n            [mode]=\"hintController.mode\"\n        ></tui-tooltip>\n        <div\n            polymorpheus-outlet\n            *ngIf=\"iconAlignRight\"\n            class=\"icon\"\n            [content]=\"iconContent\"\n        >\n            <ng-template let-iconSrc>\n                <tui-svg [src]=\"iconSrc\"></tui-svg>\n            </ng-template>\n        </div>\n    </div>\n</tui-wrapper>\n",
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                providers: TUI_PRIMITIVE_TEXTFIELD_PROVIDERS,
                host: {
                    '($.data-mode.attr)': 'mode$',
                },
                styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:block;border-radius:var(--tui-radius-m)}:host[data-tui-host-size='s']{height:var(--tui-height-s);min-height:var(--tui-height-s);max-height:var(--tui-height-s)}:host[data-tui-host-size='m']{height:var(--tui-height-m);min-height:var(--tui-height-m);max-height:var(--tui-height-m)}:host[data-tui-host-size='l']{height:var(--tui-height-l);min-height:var(--tui-height-l);max-height:var(--tui-height-l);font-size:15px}.input{font:var(--tui-font-text-s);color:var(--tui-text-01);padding:0 12px;border:0;border-radius:inherit;background:0 0;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;box-sizing:border-box;white-space:nowrap;overflow:hidden;text-transform:inherit}.input:-webkit-autofill,.input:-webkit-autofill:focus,.input:-webkit-autofill:hover{border-radius:inherit;-webkit-text-fill-color:inherit!important;color:inherit!important;background-color:transparent!important;-webkit-box-shadow:0 0 0 1000px var(--tui-autofill) inset!important}:host[data-tui-host-size='s'] .input{padding:0 8px 0 12px}:host[data-tui-host-size='l'] .input{padding:0 16px}:host._disabled .input{pointer-events:none}:host._right-aligned .input{text-align:right}:host[data-tui-host-size='l']:not(._label-outside) .input{padding-top:20px}:host[data-tui-host-size='l']:not(._label-outside) .input:-webkit-autofill+.content .placeholder{width:114%;transform:translateY(-10px) scale(.87)}:host[data-tui-host-size='m']:not(._label-outside) .input{padding-top:18px}:host[data-tui-host-size='m']:not(._label-outside) .input:-webkit-autofill+.content .placeholder{width:118%;transform:translateY(-8px) scale(.85)}.ghost{visibility:hidden;white-space:pre;text-overflow:clip}.filler{vertical-align:middle}.content{display:flex;height:100%;width:100%;padding:0 12px;box-sizing:border-box;align-items:center;overflow:hidden}:host[data-tui-host-size='s'] .content{padding-right:8px}:host[data-tui-host-size='l'] .content{padding-left:16px}.wrapper{flex:1;min-width:0;padding-right:4px}.value-decoration{display:flex;align-items:center;height:20px;margin:-20px 0;padding:10px 0;box-sizing:content-box;color:var(--tui-text-03);letter-spacing:normal;text-transform:none}:host._right-aligned .value-decoration{flex-direction:row-reverse;margin-right:-4px}:host[data-tui-host-size='m']._label-outside .value-decoration{margin-top:-19px}:host[data-mode=onDark] .value-decoration{color:var(--tui-text-03-night)}.value-decoration-inner{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:0}.postfix{transition-property:color;transition-duration:.3s;transition-timing-function:ease-in-out;color:var(--tui-text-01)}.postfix_shifted{margin-left:.5ch}:host[data-mode=onDark] .postfix{color:var(--tui-text-01-night)}.placeholder{transition-property:transform,min-width,color,letter-spacing;transition-duration:.3s;transition-timing-function:ease-in-out;font:var(--tui-font-text-s);color:var(--tui-text-01);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;width:100%;height:20px;font-size:13px;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;color:var(--tui-text-02);transform-origin:left;letter-spacing:normal;text-transform:none}.placeholder_raised{width:114%;transform:translateY(-10px) scale(.87)}:host[data-tui-host-size='m'] .placeholder_raised{width:118%;transform:translateY(-8px) scale(.85);letter-spacing:.4px}:host._invalid:not(._focused) .placeholder_raised,:host._invalid:not(._focused)._hovered .placeholder_raised{color:var(--tui-error-fill)}:host[data-mode=onDark]._invalid:not(._focused) .placeholder_raised,:host[data-mode=onDark]._invalid:not(._focused)._hovered .placeholder_raised{color:var(--tui-error-fill-night)}:host._focused .placeholder,:host[data-tui-host-size='l']._focused._label-outside .placeholder,:host[data-tui-host-size='m']._focused._label-outside .placeholder{color:var(--tui-text-03)}:host[data-tui-host-size='l'] .placeholder{font-size:15px}:host[data-tui-host-size='l']._focused:not(._label-outside) .placeholder,:host[data-tui-host-size='m']._focused:not(._label-outside) .placeholder{color:var(--tui-text-01)}:host[data-mode=onDark] .placeholder{color:var(--tui-text-02-night)}:host[data-tui-host-size='l'][data-mode=onDark]._focused:not(._label-outside) .placeholder,:host[data-tui-host-size='m'][data-mode=onDark]._focused:not(._label-outside) .placeholder{color:var(--tui-text-01-night)}:host[data-mode=onDark]._focused .placeholder,:host[data-tui-host-size='l'][data-mode=onDark]._focused._label-outside .placeholder,:host[data-tui-host-size='m'][data-mode=onDark]._focused._label-outside .placeholder{color:var(--tui-text-02-night)}.cleaner{transition-duration:.3s;transition-timing-function:ease-in-out;display:flex;width:24px;height:24px;align-items:center;justify-content:center;color:var(--tui-text-03);position:relative;box-sizing:border-box;cursor:pointer;transition-property:color,transform}.cleaner:hover{color:var(--tui-text-02)}:host._disabled .cleaner,:host._readonly .cleaner{pointer-events:none}:host[data-mode=onDark] .cleaner{color:var(--tui-text-03-night)}:host[data-mode=onDark] .cleaner:hover{color:var(--tui-text-01-night)}.icon{display:flex;align-items:center;justify-content:center;color:var(--tui-text-03)}.icon_left{margin:0 8px 0 -4px}:host[data-tui-host-size='s'] .icon_left{margin-right:4px}.value{height:0;display:block;visibility:hidden;white-space:pre}.custom-content{position:relative;display:flex;align-items:center;justify-content:center;width:32px;height:32px;margin-right:4px;pointer-events:none}.custom-icon{width:100%;height:100%}.icon{transition-duration:.3s;transition-timing-function:ease-in-out;display:flex;width:24px;height:24px;align-items:center;justify-content:center;color:var(--tui-text-03);box-sizing:border-box;cursor:pointer;transition-property:color,transform;position:relative;pointer-events:none}.icon:hover{color:var(--tui-text-02)}:host._disabled .icon,:host._readonly .icon{pointer-events:none}:host[data-mode=onDark] .icon{color:var(--tui-text-03-night)}:host[data-mode=onDark] .icon:hover{color:var(--tui-text-01-night)}:host._hovered:not(._readonly) .icon{color:var(--tui-text-02)}:host[data-mode=onDark]._hovered:not(._readonly) .icon{color:var(--tui-text-01-night)}:host[data-mode=onLight]._hovered:not(._readonly) .icon{color:var(--tui-text-01)}.input_hidden{opacity:0;text-indent:-10em;-webkit-user-select:none}:host[data-tui-host-size] .input_template{display:flex;width:100%;max-width:100%;align-items:center;padding-right:0;border-right:0 solid transparent;pointer-events:none}.input::-webkit-caps-lock-indicator{margin-right:6px;align-self:center}:host[data-tui-host-size='l']:not(._label-outside) .input::-webkit-caps-lock-indicator{margin-top:-20px}.input::-webkit-contacts-auto-fill-button,.input::-webkit-credentials-auto-fill-button,.input::-webkit-credit-card-auto-fill-button{background-color:var(--tui-text-03)}:host[data-tui-host-size='l']:not(._label-outside) .input::-webkit-contacts-auto-fill-button,:host[data-tui-host-size='l']:not(._label-outside) .input::-webkit-credentials-auto-fill-button,:host[data-tui-host-size='l']:not(._label-outside) .input::-webkit-credit-card-auto-fill-button{margin-top:-20px}.input::-webkit-contacts-auto-fill-button:hover,.input::-webkit-credentials-auto-fill-button:hover,.input::-webkit-credit-card-auto-fill-button:hover{background-color:var(--tui-text-02)}.text-template{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}"]
            }),
            __param(0, core.Inject(tokens.TUI_MODE)),
            __param(1, core.Inject(tokens.TUI_TEXTFIELD_APPEARANCE)),
            __param(2, core.Inject(textfieldController.TUI_TEXTIFELD_WATCHED_CONTROLLER)),
            __param(3, core.Inject(hintController.TUI_HINT_WATCHED_CONTROLLER))
        ], TuiPrimitiveTextfieldComponent);
        return TuiPrimitiveTextfieldComponent;
    }(cdk.AbstractTuiInteractive));

    var TuiPrimitiveTextfieldModule = /** @class */ (function () {
        function TuiPrimitiveTextfieldModule() {
        }
        TuiPrimitiveTextfieldModule = __decorate([
            core.NgModule({
                imports: [
                    common.CommonModule,
                    forms.FormsModule,
                    maskAccessor.TuiMaskAccessorModule,
                    cdk.TuiFocusableModule,
                    cdk.TuiFocusedModule,
                    cdk.TuiHoveredModule,
                    cdk.TuiInputModeModule,
                    ngPolymorpheus.PolymorpheusModule,
                    wrapper.TuiWrapperModule,
                    svg.TuiSvgModule,
                    tooltip.TuiTooltipModule,
                    cdk.TuiAutofilledModule,
                    describedBy.TuiDescribedByModule,
                    cdk.TuiPreventDefaultModule,
                ],
                declarations: [TuiPrimitiveTextfieldComponent],
                exports: [TuiPrimitiveTextfieldComponent],
            })
        ], TuiPrimitiveTextfieldModule);
        return TuiPrimitiveTextfieldModule;
    }());

    exports.TUI_PRIMITIVE_TEXTFIELD_PROVIDERS = TUI_PRIMITIVE_TEXTFIELD_PROVIDERS;
    exports.TuiPrimitiveTextfieldComponent = TuiPrimitiveTextfieldComponent;
    exports.TuiPrimitiveTextfieldModule = TuiPrimitiveTextfieldModule;
    exports.ɵ0 = ɵ0;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=taiga-ui-core-components-primitive-textfield.umd.js.map
