(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@taiga-ui/cdk'), require('rxjs/operators'), require('@angular/core'), require('@taiga-ui/core/directives/mode'), require('@taiga-ui/core/tokens'), require('@taiga-ui/core/utils/miscellaneous')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/core/providers', ['exports', '@taiga-ui/cdk', 'rxjs/operators', '@angular/core', '@taiga-ui/core/directives/mode', '@taiga-ui/core/tokens', '@taiga-ui/core/utils/miscellaneous'], factory) :
    (global = global || self, factory((global['taiga-ui'] = global['taiga-ui'] || {}, global['taiga-ui'].core = global['taiga-ui'].core || {}, global['taiga-ui'].core.providers = {}), global.cdk, global.rxjs.operators, global.ng.core, global['taiga-ui'].core.directives.mode, global['taiga-ui'].core.tokens, global['taiga-ui'].core.utils.miscellaneous));
}(this, (function (exports, cdk, operators, core, mode, tokens, miscellaneous) { 'use strict';

    function watchedControllerFactory(controller, changeDetectorRef, destroy$) {
        controller.change$.pipe(cdk.watch(changeDetectorRef), operators.takeUntil(destroy$)).subscribe();
        return controller;
    }

    var ɵ0 = miscellaneous.modeFactory;
    var MODE_PROVIDER = {
        provide: tokens.TUI_MODE,
        deps: [[new core.Optional(), mode.TuiModeDirective], core.ElementRef],
        useFactory: ɵ0,
    };

    exports.MODE_PROVIDER = MODE_PROVIDER;
    exports.watchedControllerFactory = watchedControllerFactory;
    exports.ɵ0 = ɵ0;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=taiga-ui-core-providers.umd.js.map
