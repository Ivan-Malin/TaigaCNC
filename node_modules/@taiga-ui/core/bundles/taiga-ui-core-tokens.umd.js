(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/i18n'), require('@taiga-ui/core/constants'), require('@taiga-ui/cdk')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/core/tokens', ['exports', '@angular/core', '@taiga-ui/i18n', '@taiga-ui/core/constants', '@taiga-ui/cdk'], factory) :
    (global = global || self, factory((global['taiga-ui'] = global['taiga-ui'] || {}, global['taiga-ui'].core = global['taiga-ui'].core || {}, global['taiga-ui'].core.tokens = {}), global.ng.core, global.i18n, global['taiga-ui'].core.constants, global.cdk));
}(this, (function (exports, core, i18n, constants, cdk) { 'use strict';

    var TUI_ASSERT_ENABLED = new core.InjectionToken('Flag to enable assertions across Taiga UI', {
        factory: function () { return core.isDevMode(); },
    });

    var TUI_DATA_LIST_ACCESSOR = new core.InjectionToken('Accessor for options');

    var TUI_DATA_LIST_HOST = new core.InjectionToken('DataList controller');

    var TUI_DOCUMENT_OR_SHADOW_ROOT = new core.InjectionToken('Document or ShadowRoot');

    var TUI_DROPDOWN_DIRECTIVE = new core.InjectionToken('Directive controlling TuiDropdownBoxComponent');

    var TUI_ELEMENT_REF = new core.InjectionToken('ElementRef when you cannot use @Input for single time injection');

    var TUI_MONTHS = new core.InjectionToken('Localized months names', {
        factory: i18n.extractI18n('months'),
    });
    var TUI_CLOSE_WORD = new core.InjectionToken("i18n 'close' word", {
        factory: i18n.extractI18n('close'),
    });
    var TUI_NOTHING_FOUND_MESSAGE = new core.InjectionToken("i18n 'Nothing found' message", {
        factory: i18n.extractI18n('nothingFoundMessage'),
    });
    var TUI_DEFAULT_ERROR_MESSAGE = new core.InjectionToken("i18n of error message", {
        factory: i18n.extractI18n('defaultErrorMessage'),
    });
    var TUI_SPIN_TEXTS = new core.InjectionToken('spin i18n texts', {
        factory: i18n.extractI18n('spinTexts'),
    });
    var TUI_SHORT_WEEK_DAYS = new core.InjectionToken('calendars i18n texts', {
        factory: i18n.extractI18n('shortWeekDays'),
    });

    var TUI_ICONS = new core.InjectionToken('A key/value dictionary of icon names and src to be defined with TuiSvgService', {
        factory: function () { return ({}); },
    });

    // TODO: Consider renaming
    var TUI_ICONS_PATH = new core.InjectionToken('A handler to retrieve USE id for icon by name', {
        factory: function () { return constants.DEFAULT_ICONS_PATH; },
    });

    var TUI_MODE = new core.InjectionToken('Mode stream for private providers');

    var TUI_OPTION_CONTENT = new core.InjectionToken('Content for tuiOption component');

    var TUI_SANITIZER = cdk.TUI_SANITIZER;

    var TUI_SCROLL_REF = new core.InjectionToken('Scrollable container');

    var TUI_TEXTFIELD_APPEARANCE = new core.InjectionToken('Appearance for inputs', {
        factory: function () { return "textfield" /* Textfield */; },
    });

    var TUI_VALUE_ACCESSOR = new core.InjectionToken('Buffer token to pass NG_VALUE_ACCESSOR to a different Injector');

    exports.TUI_ASSERT_ENABLED = TUI_ASSERT_ENABLED;
    exports.TUI_CLOSE_WORD = TUI_CLOSE_WORD;
    exports.TUI_DATA_LIST_ACCESSOR = TUI_DATA_LIST_ACCESSOR;
    exports.TUI_DATA_LIST_HOST = TUI_DATA_LIST_HOST;
    exports.TUI_DEFAULT_ERROR_MESSAGE = TUI_DEFAULT_ERROR_MESSAGE;
    exports.TUI_DOCUMENT_OR_SHADOW_ROOT = TUI_DOCUMENT_OR_SHADOW_ROOT;
    exports.TUI_DROPDOWN_DIRECTIVE = TUI_DROPDOWN_DIRECTIVE;
    exports.TUI_ELEMENT_REF = TUI_ELEMENT_REF;
    exports.TUI_ICONS = TUI_ICONS;
    exports.TUI_ICONS_PATH = TUI_ICONS_PATH;
    exports.TUI_MODE = TUI_MODE;
    exports.TUI_MONTHS = TUI_MONTHS;
    exports.TUI_NOTHING_FOUND_MESSAGE = TUI_NOTHING_FOUND_MESSAGE;
    exports.TUI_OPTION_CONTENT = TUI_OPTION_CONTENT;
    exports.TUI_SANITIZER = TUI_SANITIZER;
    exports.TUI_SCROLL_REF = TUI_SCROLL_REF;
    exports.TUI_SHORT_WEEK_DAYS = TUI_SHORT_WEEK_DAYS;
    exports.TUI_SPIN_TEXTS = TUI_SPIN_TEXTS;
    exports.TUI_TEXTFIELD_APPEARANCE = TUI_TEXTFIELD_APPEARANCE;
    exports.TUI_VALUE_ACCESSOR = TUI_VALUE_ACCESSOR;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=taiga-ui-core-tokens.umd.js.map
