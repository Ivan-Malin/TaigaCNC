{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@taiga-ui/core/utils/mask/create-number-mask.ts","ng://@taiga-ui/core/utils/mask/masked-money-value-is-empty.ts","ng://@taiga-ui/core/utils/mask/masked-number-string-to-number.ts","ng://@taiga-ui/core/utils/mask/create-auto-corrected-money-pipe.ts","ng://@taiga-ui/core/utils/mask/create-correction-mask.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","NON_ZERO_DIGIT","convertToMask","strNumber","split","map","char","TUI_DIGIT_REGEXP","test","parseFloat","CHAR_NO_BREAK_SPACE","join","decimalLimit","decimalSymbol","nativeInput","tuiAssert","assert","Number","isInteger","previousCaret","unlucky","isSafari","addEventListener","selectionStart","conformedValue","config","isNativeFocused","caret_1","previousValue","current","tailRegex","RegExp","previousWithoutTail","replace","currentWithoutTail","Math","abs","indexOf","previous","calculateChangedTailIndex","changeLength","calculateSafariCaret","previousConformedValue","setTimeout","setSelectionRange","ownerDocument","getDocumentOrShadowRoot","currentCaretPosition","realCaretPosition_1","wereSpaces","calculateCaretGap","withDecimalSymbol","addDecimalSymbolIfNeeded","decimalPart","zeroPaddingSize","repeat","allowed","correctionHandler","rawValue","mask","reduce","result","index","corrected","MASK_CARET_TRAP","lastIndex","lastIndexOf","filtered","filter","item","some","_a","_b","_c","allowDecimal","_d","_e","autoCorrectDecimalSymbol","_f","_g","requireDecimal","_h","allowNegative","_j","integerLimit","isNegative","CHAR_EN_DASH","str","isDecimalSymbol","substr","decimalIndex","max","otherDecimalSymbol","getDecimalSymbolIndex","hasDecimal","integer","slice","thousandSeparators","match","integerCappedClean","TUI_NON_DIGITS_REGEXP","fraction","fractionCapped","apply","unshift","firstDigitIndex","preventLeadingZeroes"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {CHAR_EN_DASH, CHAR_NO_BREAK_SPACE, tuiAssert} from '@taiga-ui/cdk';\nimport {\n    MASK_CARET_TRAP,\n    TUI_DIGIT_REGEXP,\n    TUI_NON_DIGITS_REGEXP,\n} from '@taiga-ui/core/constants';\nimport {TuiNumberMaskOptions, TuiTextMaskListHandler} from '@taiga-ui/core/mask';\nimport {TuiDecimalSymbol} from '@taiga-ui/core/types';\nimport {otherDecimalSymbol} from '@taiga-ui/core/utils/format';\n\nconst NON_ZERO_DIGIT = /[1-9]/;\n\n/**\n * Adaptation for {@link https://github.com/text-mask/text-mask/tree/master/addons#createnumbermask `createNumberMask`}\n */\nexport function tuiCreateNumberMask({\n    allowDecimal = false,\n    decimalSymbol = ',',\n    autoCorrectDecimalSymbol = true,\n    decimalLimit = 2,\n    requireDecimal = false,\n    allowNegative = false,\n    integerLimit = 0,\n}: TuiNumberMaskOptions = {}): TuiTextMaskListHandler {\n    tuiAssert.assert(Number.isInteger(decimalLimit));\n    tuiAssert.assert(decimalLimit > 0);\n    tuiAssert.assert(Number.isInteger(integerLimit));\n    tuiAssert.assert(integerLimit >= 0);\n\n    return (rawValue, {previousConformedValue}) => {\n        if (previousConformedValue && requireDecimal) {\n            const conformedWithoutSeparator = rawValue\n                .split(CHAR_NO_BREAK_SPACE)\n                .join('');\n            const previousConformedValueWithoutDecimalSymbolAndSeparator = previousConformedValue\n                .split(CHAR_NO_BREAK_SPACE)\n                .join('')\n                .split(',')\n                .join('');\n\n            // Forbid removal of decimal separator if decimal part is required\n            if (\n                conformedWithoutSeparator ===\n                previousConformedValueWithoutDecimalSymbolAndSeparator\n            ) {\n                rawValue = previousConformedValue;\n            }\n        }\n\n        const isNegative =\n            (rawValue[0] === '-' || rawValue[0] === CHAR_EN_DASH) && allowNegative;\n\n        if (\n            isDecimalSymbol(rawValue, decimalSymbol, autoCorrectDecimalSymbol) &&\n            allowDecimal\n        ) {\n            return ['0', decimalSymbol, TUI_DIGIT_REGEXP];\n        }\n\n        if (isNegative) {\n            rawValue = rawValue.substr(1);\n        }\n\n        const decimalIndex = getDecimalSymbolIndex(\n            rawValue,\n            decimalSymbol,\n            autoCorrectDecimalSymbol,\n        );\n        const hasDecimal = decimalIndex !== -1;\n        const integer = hasDecimal ? rawValue.slice(0, decimalIndex) : rawValue;\n        const thousandSeparators =\n            integer.match(new RegExp(CHAR_NO_BREAK_SPACE, 'g')) || [];\n        const integerCapped = integerLimit\n            ? integer.slice(0, integerLimit + thousandSeparators.length)\n            : integer;\n        const integerCappedClean = integerCapped\n            .replace(TUI_NON_DIGITS_REGEXP, '')\n            .replace(/^0+(?!\\.|$)/, '0');\n        const withSeparator = addThousandsSeparator(integerCappedClean);\n        const mask = convertToMask(withSeparator);\n\n        if ((hasDecimal && allowDecimal) || requireDecimal) {\n            const fraction = hasDecimal\n                ? convertToMask(\n                      rawValue.slice(decimalIndex + 1).replace(TUI_NON_DIGITS_REGEXP, ''),\n                  )\n                : [];\n            const fractionCapped = decimalLimit\n                ? fraction.slice(0, decimalLimit)\n                : fraction;\n\n            if (rawValue[decimalIndex] !== otherDecimalSymbol(decimalSymbol)) {\n                mask.push(MASK_CARET_TRAP);\n            }\n\n            mask.push(decimalSymbol, MASK_CARET_TRAP, ...fractionCapped);\n\n            for (let i = 0; i < decimalLimit - fractionCapped.length; i++) {\n                mask.push(TUI_DIGIT_REGEXP);\n            }\n        }\n\n        if (isNegative) {\n            if (mask.length === 0) {\n                mask.push(TUI_DIGIT_REGEXP);\n            }\n\n            mask.unshift('-');\n        }\n\n        return preventLeadingZeroes(mask);\n    };\n}\n\nfunction preventLeadingZeroes(mask: Array<string | RegExp>): Array<string | RegExp> {\n    const firstDigitIndex = mask.indexOf(TUI_DIGIT_REGEXP);\n\n    if (firstDigitIndex !== -1 && mask[firstDigitIndex + 1] === TUI_DIGIT_REGEXP) {\n        mask[firstDigitIndex] = NON_ZERO_DIGIT;\n    }\n\n    return mask;\n}\n\nfunction getDecimalSymbolIndex(\n    str: string,\n    decimalSymbol: TuiDecimalSymbol,\n    autoCorrectDecimalSymbol: boolean,\n): number {\n    if (!autoCorrectDecimalSymbol) {\n        return str.lastIndexOf(decimalSymbol);\n    }\n\n    return Math.max(\n        str.lastIndexOf(decimalSymbol),\n        str.lastIndexOf(otherDecimalSymbol(decimalSymbol)),\n    );\n}\n\nfunction isDecimalSymbol(\n    str: string,\n    decimalSymbol: TuiDecimalSymbol,\n    autoCorrectDecimalSymbol: boolean,\n): boolean {\n    if (autoCorrectDecimalSymbol) {\n        return /^[,.]$/.test(str);\n    }\n\n    return str === decimalSymbol;\n}\n\nfunction convertToMask(strNumber: string): Array<string | RegExp> {\n    return strNumber\n        .split('')\n        .map(char => (TUI_DIGIT_REGEXP.test(char) ? TUI_DIGIT_REGEXP : char));\n}\n\nfunction addThousandsSeparator(strNumber: string): string {\n    return strNumber.length > 3\n        ? strNumber.replace(/\\B(?=(\\d{3})+(?!\\d))/g, CHAR_NO_BREAK_SPACE)\n        : strNumber;\n}\n","export function maskedMoneyValueIsEmpty(value: string): boolean {\n    switch (value) {\n        case '':\n        case '-':\n        case ',':\n        case '-,':\n            return true;\n        default:\n            return false;\n    }\n}\n","import {CHAR_NO_BREAK_SPACE} from '@taiga-ui/cdk';\n\nexport function maskedNumberStringToNumber(value: string): number {\n    return parseFloat(value.split(CHAR_NO_BREAK_SPACE).join('').split(',').join('.'));\n}\n","import {\n    CHAR_NO_BREAK_SPACE,\n    getDocumentOrShadowRoot,\n    isNativeFocused,\n    isSafari,\n    tuiAssert,\n} from '@taiga-ui/cdk';\nimport {TuiTextMaskPipeHandler} from '@taiga-ui/core/mask';\nimport {TuiDecimalSymbol} from '@taiga-ui/core/types';\n\n/**\n * Used to finish a number with zeros to a given precision\n */\nexport function tuiCreateAutoCorrectedNumberPipe(\n    decimalLimit: number = 0,\n    decimalSymbol: TuiDecimalSymbol = ',',\n    nativeInput?: HTMLInputElement,\n): TuiTextMaskPipeHandler {\n    tuiAssert.assert(Number.isInteger(decimalLimit));\n    tuiAssert.assert(decimalLimit >= 0);\n\n    // Guess for which browser I need this :)\n    let previousCaret = -1;\n\n    const unlucky = !!nativeInput && isSafari(nativeInput);\n\n    if (nativeInput && unlucky) {\n        nativeInput.addEventListener('beforeinput', () => {\n            previousCaret = nativeInput.selectionStart || 0;\n        });\n    }\n\n    return (conformedValue, config) => {\n        // remove these hacks after text mask library has changed\n        if (nativeInput && unlucky && isNativeFocused(nativeInput)) {\n            const caret = calculateSafariCaret(\n                config.previousConformedValue,\n                conformedValue,\n                previousCaret,\n            );\n\n            setTimeout(() => {\n                nativeInput.setSelectionRange(caret, caret);\n            });\n        }\n\n        if (\n            nativeInput &&\n            nativeInput.ownerDocument !== getDocumentOrShadowRoot(nativeInput) &&\n            isNativeFocused(nativeInput) &&\n            config.currentCaretPosition\n        ) {\n            const realCaretPosition =\n                config.currentCaretPosition +\n                calculateCaretGap(config.previousConformedValue, conformedValue);\n\n            setTimeout(() => {\n                nativeInput.setSelectionRange(realCaretPosition, realCaretPosition);\n            });\n        }\n\n        if (conformedValue === '' || !decimalLimit) {\n            return {value: conformedValue};\n        }\n\n        const withDecimalSymbol = addDecimalSymbolIfNeeded(conformedValue, decimalSymbol);\n        const decimalPart = withDecimalSymbol.split(decimalSymbol)[1];\n        const zeroPaddingSize = decimalLimit - decimalPart.length;\n\n        return {\n            value: withDecimalSymbol + '0'.repeat(zeroPaddingSize),\n        };\n    };\n}\n\nfunction addDecimalSymbolIfNeeded(\n    value: string,\n    decimalSymbol: TuiDecimalSymbol = ',',\n): string {\n    return value.indexOf(decimalSymbol) === -1 ? value + decimalSymbol : value;\n}\n\nfunction calculateSafariCaret(\n    previousValue: string = '',\n    current: string,\n    previousCaret: number,\n    decimalSymbol: string = ',',\n): number {\n    const tailRegex = new RegExp(`${decimalSymbol}.+`);\n    const previousWithoutTail = previousValue.replace(tailRegex, '');\n    const currentWithoutTail = current.replace(tailRegex, '');\n\n    const pasteOrCutOperation =\n        Math.abs(previousWithoutTail.length - currentWithoutTail.length) > 2;\n\n    if (pasteOrCutOperation) {\n        return current.length;\n    }\n\n    if (previousValue.length === current.length) {\n        if (previousValue.indexOf(decimalSymbol) <= previousCaret) {\n            return calculateChangedTailIndex(previousValue, current);\n        }\n\n        return previousWithoutTail === currentWithoutTail\n            ? previousCaret - 1\n            : previousCaret + 1;\n    }\n\n    if (previousValue.length === 0) {\n        return 1;\n    }\n\n    const changeLength = current.length - previousValue.length;\n\n    return previousCaret + changeLength;\n}\n\nfunction calculateChangedTailIndex(previous: string, current: string): number {\n    for (let i = 0; i < current.length; i++) {\n        if (previous[i] !== current[i]) {\n            return current[i] === '0' ? i : i + 1;\n        }\n    }\n\n    return current.length;\n}\n\nfunction calculateCaretGap(previousValue: string = '', current: string): number {\n    const pasteOrCutOperation = Math.abs(previousValue.length - current.length) > 2;\n\n    if (pasteOrCutOperation) {\n        return 0;\n    }\n\n    const wereSpaces = previousValue.split(CHAR_NO_BREAK_SPACE).length;\n    const nowSpaces = current.split(CHAR_NO_BREAK_SPACE).length;\n\n    return nowSpaces - wereSpaces;\n}\n","import {tuiAssert} from '@taiga-ui/cdk';\nimport {MASK_CARET_TRAP} from '@taiga-ui/core/constants';\nimport {\n    TuiTextMaskCorrectionHandler,\n    TuiTextMaskList,\n    TuiTextMaskListHandler,\n} from '@taiga-ui/core/mask';\n\nconst ASSERTION = 'Correction function must return single char or null';\n\nexport function tuiCreateCorrectionMask(\n    allowed: RegExp,\n    correctionHandler: TuiTextMaskCorrectionHandler,\n): TuiTextMaskListHandler {\n    return rawValue => {\n        const mask = rawValue.split('').reduce<TuiTextMaskList>((result, char, index) => {\n            const corrected = correctionHandler(char, index);\n\n            tuiAssert.assert(corrected === null || corrected.length === 1, ASSERTION);\n\n            if (!allowed.test(char) && !corrected) {\n                return result;\n            }\n\n            if (allowed.test(char)) {\n                return [...result, allowed];\n            }\n\n            if (corrected) {\n                return [...result, corrected, MASK_CARET_TRAP];\n            }\n\n            return result;\n        }, []);\n        const lastIndex = mask.lastIndexOf(MASK_CARET_TRAP);\n        const filtered = mask.filter(\n            (item, index) => item !== MASK_CARET_TRAP || index === lastIndex,\n        );\n\n        return filtered.some(item => item !== allowed)\n            ? [...filtered, allowed]\n            : filtered;\n    };\n}\n"]}