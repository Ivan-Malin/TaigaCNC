import { ChangeDetectorRef, ElementRef } from '@angular/core';
import { AbstractTuiInteractive, TuiFocusableElementAccessor, TuiFocusVisibleService, TuiHoveredService } from '@taiga-ui/cdk';
import { TuiAppearance, TuiButtonShape } from '@taiga-ui/core/enums';
import { TuiSizeS, TuiSizeXL, TuiSizeXS } from '@taiga-ui/core/types';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
export declare class TuiButtonComponent extends AbstractTuiInteractive implements TuiFocusableElementAccessor {
    private readonly elementRef;
    appearance: TuiAppearance | string;
    disabled: boolean;
    icon: PolymorpheusContent;
    iconRight: PolymorpheusContent;
    shape: TuiButtonShape | null;
    showLoader: boolean;
    size: TuiSizeXS | TuiSizeXL;
    constructor(elementRef: ElementRef<HTMLElement>, focusVisible$: TuiFocusVisibleService, hoveredService: TuiHoveredService, destroy$: Observable<void>, changeDetectorRef: ChangeDetectorRef);
    get nativeFocusableElement(): HTMLElement | null;
    get focused(): boolean;
    get loaderSize(): TuiSizeS;
    get nativeDisabled(): '' | null;
    get tabIndex(): number;
    onFocused(focused: boolean): void;
}
