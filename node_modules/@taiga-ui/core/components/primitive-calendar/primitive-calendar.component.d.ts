import { EventEmitter } from '@angular/core';
import { TuiBooleanHandler, TuiDay, TuiDayRange, TuiMonth } from '@taiga-ui/cdk';
import { TuiInteractiveState, TuiRangeState } from '@taiga-ui/core/enums';
import { TuiMarkerHandler } from '@taiga-ui/core/types';
import { Observable } from 'rxjs';
export declare class TuiPrimitiveCalendarComponent {
    readonly weekDays$: Observable<[string, string, string, string, string, string, string]>;
    disabledItemHandler: TuiBooleanHandler<TuiDay>;
    markerHandler: TuiMarkerHandler;
    value: TuiDayRange | TuiDay | null;
    hoveredItem: TuiDay | null;
    showAdjacent: boolean;
    set month(month: TuiMonth);
    readonly hoveredItemChange: EventEmitter<TuiDay | null>;
    readonly dayClick: EventEmitter<TuiDay>;
    sheet: ReadonlyArray<ReadonlyArray<TuiDay>>;
    private pressedItem;
    private currentMonth;
    private today;
    readonly toMarkers: (day: TuiDay, today: boolean, inRange: boolean) => [string, string] | [string] | null;
    constructor(weekDays$: Observable<[string, string, string, string, string, string, string]>);
    get isSingle(): boolean;
    getItemState(item: TuiDay): TuiInteractiveState | null;
    getItemRange(item: TuiDay): TuiRangeState | null;
    itemIsDisabled(day: TuiDay): boolean;
    itemIsToday(item: TuiDay): boolean;
    itemIsUnavailable(item: TuiDay): boolean;
    itemIsInterval(day: TuiDay): boolean;
    onItemHovered(hovered: boolean, item: TuiDay): void;
    onItemPressed(pressed: boolean, item: TuiDay): void;
    onItemClick(event: MouseEvent, item: TuiDay): void;
    private updateHoveredItem;
    private updatePressedItem;
}
