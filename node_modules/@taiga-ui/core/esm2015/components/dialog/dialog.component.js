import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, Inject } from '@angular/core';
import { TUI_IS_MOBILE } from '@taiga-ui/cdk';
import { tuiFadeIn, tuiSlideInTop } from '@taiga-ui/core/animations';
import { TUI_CLOSE_WORD } from '@taiga-ui/core/tokens';
import { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
import { TUI_DIALOG_CLOSE_STREAM, TUI_DIALOG_PROVIDERS } from './dialog.providers';
const SMALL_DIALOGS_ANIMATION = { value: '', params: { start: '40px' } };
const FULLSCREEN_DIALOGS_ANIMATION = { value: '', params: { start: '100vh' } };
const REQUIRED_ERROR = new Error('Required dialog was dismissed');
// @dynamic
let TuiDialogComponent = class TuiDialogComponent {
    constructor(isMobile, context, close$, closeWord$) {
        this.isMobile = isMobile;
        this.context = context;
        this.closeWord$ = closeWord$;
        close$.subscribe(() => {
            this.close();
        });
    }
    get size() {
        return this.context.size;
    }
    get header() {
        return this.context.header;
    }
    get h() {
        if (this.isMobile) {
            return 'h5';
        }
        switch (this.size) {
            case 's':
                return 'h5';
            case 'm':
                return 'h4';
            default:
                return 'h3';
        }
    }
    get slideInTop() {
        return this.size === 'fullscreen' || this.size === 'page' || this.isMobile
            ? FULLSCREEN_DIALOGS_ANIMATION
            : SMALL_DIALOGS_ANIMATION;
    }
    close() {
        if (this.context.required) {
            this.context.$implicit.error(REQUIRED_ERROR);
        }
        else {
            this.context.$implicit.complete();
        }
    }
};
TuiDialogComponent.ctorParameters = () => [
    { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_MOBILE,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [POLYMORPHEUS_CONTEXT,] }] },
    { type: Observable, decorators: [{ type: Inject, args: [TUI_DIALOG_CLOSE_STREAM,] }] },
    { type: Observable, decorators: [{ type: Inject, args: [TUI_CLOSE_WORD,] }] }
];
__decorate([
    HostBinding('attr.data-size')
], TuiDialogComponent.prototype, "size", null);
__decorate([
    HostBinding('class._centered')
], TuiDialogComponent.prototype, "header", null);
__decorate([
    HostBinding('@tuiSlideInTop')
], TuiDialogComponent.prototype, "slideInTop", null);
TuiDialogComponent = __decorate([
    Component({
        selector: 'tui-dialog',
        template: "<header\n    *ngIf=\"header\"\n    polymorpheus-outlet\n    class=\"header\"\n    [content]=\"header\"\n    [context]=\"context\"\n></header>\n<div class=\"content\">\n    <h2 class=\"heading tui-text_{{h}}\" [id]=\"context.id\">{{context.label}}</h2>\n    <section\n        polymorpheus-outlet\n        [context]=\"context\"\n        [content]=\"context.content\"\n    ></section>\n</div>\n<div *ngIf=\"context.closeable\" class=\"wrapper\">\n    <button\n        tuiIconButton\n        tuiPreventDefault=\"mousedown\"\n        automation-id=\"tui-dialog__close\"\n        class=\"close\"\n        size=\"s\"\n        appearance=\"\"\n        icon=\"tuiIconCloseLarge\"\n        shape=\"rounded\"\n        [title]=\"closeWord$ | async\"\n        (click)=\"close()\"\n    ></button>\n</div>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        providers: TUI_DIALOG_PROVIDERS,
        animations: [tuiSlideInTop, tuiFadeIn],
        host: {
            '[@tuiFadeIn]': 'true',
        },
        styles: [":host{font:var(--tui-font-text-m);position:relative;display:flex;flex-direction:column;box-sizing:border-box;margin:auto;border-radius:16px;border:40px solid transparent}:host:after{position:absolute;top:0;left:0;width:100%;height:100%;box-shadow:0 18px 30px rgba(51,51,51,.52);content:'';border-radius:inherit;pointer-events:none}:host[data-size='s']{width:480px}:host[data-size='s'] .content{padding:24px}:host[data-size='s'] .heading{margin-bottom:8px}:host[data-size='m']{width:680px}:host[data-size='m'] .heading{margin-bottom:12px}:host[data-size='l']{width:880px}:host[data-size='l'] .heading{margin-bottom:16px}:host[data-size=fullscreen],:host[data-size=page]{width:100vw;min-height:100vh;border-radius:0;border:none;background:var(--tui-base-01)}:host[data-size=fullscreen] .content,:host[data-size=page] .content{padding:48px calc(50vw - 720px / 2)}:host[data-size=fullscreen] .heading,:host[data-size=page] .heading{margin-bottom:16px}:host[data-size=page] .content{padding:0}:host._centered{text-align:center}@media screen and (max-width:599px){:host[data-size]{min-width:100vw;width:100vw;max-width:100vw;border-radius:0;border:none;margin:auto 0 0}:host[data-size] .content{padding:32px 24px}:host[data-size] .heading{margin-bottom:8px}:host[data-size=fullscreen] .header{flex:1}}.heading{margin:0;word-wrap:break-word}.heading:empty{display:none}.header{display:flex;border-top-left-radius:inherit;border-top-right-radius:inherit;overflow:hidden}.content{border-radius:inherit;padding:32px;background:var(--tui-base-01)}.content:not(:first-child){border-top-left-radius:0;border-top-right-radius:0}.wrapper{position:-webkit-sticky;position:sticky;top:0;order:-1}.close{transition-property:background;transition-duration:.3s;transition-timing-function:ease-in-out;position:absolute;top:0;right:0;color:var(--tui-base-01)}@media screen and (max-width:599px){.close{background:0 0;color:var(--tui-base-06)}.close:hover{color:var(--tui-base-07)}}@media screen and (min-width:600px){.close{position:fixed;top:24px;right:24px;background:rgba(104,104,104,.96)}.close:hover{background:rgba(159,159,159,.86)}:host:not([data-size=fullscreen]) .close{-webkit-animation:.3s tuiFadeIn;animation:.3s tuiFadeIn}:host:not([data-size=fullscreen]).ng-animating .close{display:none}}"]
    }),
    __param(0, Inject(TUI_IS_MOBILE)),
    __param(1, Inject(POLYMORPHEUS_CONTEXT)),
    __param(2, Inject(TUI_DIALOG_CLOSE_STREAM)),
    __param(3, Inject(TUI_CLOSE_WORD))
], TuiDialogComponent);
export { TuiDialogComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jb3JlL2NvbXBvbmVudHMvZGlhbG9nLyIsInNvdXJjZXMiOlsiZGlhbG9nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3RGLE9BQU8sRUFBQyxhQUFhLEVBQVksTUFBTSxlQUFlLENBQUM7QUFDdkQsT0FBTyxFQUFDLFNBQVMsRUFBRSxhQUFhLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUVuRSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFckQsT0FBTyxFQUFDLG9CQUFvQixFQUFzQixNQUFNLDBCQUEwQixDQUFDO0FBQ25GLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDaEMsT0FBTyxFQUFDLHVCQUF1QixFQUFFLG9CQUFvQixFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFFakYsTUFBTSx1QkFBdUIsR0FBRyxFQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBQyxFQUFDLENBQUM7QUFDckUsTUFBTSw0QkFBNEIsR0FBRyxFQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUMsS0FBSyxFQUFFLE9BQU8sRUFBQyxFQUFDLENBQUM7QUFDM0UsTUFBTSxjQUFjLEdBQUcsSUFBSSxLQUFLLENBQUMsK0JBQStCLENBQUMsQ0FBQztBQUVsRSxXQUFXO0FBWVgsSUFBYSxrQkFBa0IsR0FBL0IsTUFBYSxrQkFBa0I7SUFDM0IsWUFDNEMsUUFBaUIsRUFFaEQsT0FBMEMsRUFFbkQsTUFBMkIsRUFDTSxVQUE4QjtRQUx2QixhQUFRLEdBQVIsUUFBUSxDQUFTO1FBRWhELFlBQU8sR0FBUCxPQUFPLENBQW1DO1FBR2xCLGVBQVUsR0FBVixVQUFVLENBQW9CO1FBRS9ELE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFO1lBQ2xCLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNqQixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFHRCxJQUFJLElBQUk7UUFDSixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO0lBQzdCLENBQUM7SUFHRCxJQUFJLE1BQU07UUFDTixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO0lBQy9CLENBQUM7SUFFRCxJQUFJLENBQUM7UUFDRCxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDZixPQUFPLElBQUksQ0FBQztTQUNmO1FBRUQsUUFBUSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2YsS0FBSyxHQUFHO2dCQUNKLE9BQU8sSUFBSSxDQUFDO1lBQ2hCLEtBQUssR0FBRztnQkFDSixPQUFPLElBQUksQ0FBQztZQUNoQjtnQkFDSSxPQUFPLElBQUksQ0FBQztTQUNuQjtJQUNMLENBQUM7SUFHRCxJQUFJLFVBQVU7UUFDVixPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssWUFBWSxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssTUFBTSxJQUFJLElBQUksQ0FBQyxRQUFRO1lBQ3RFLENBQUMsQ0FBQyw0QkFBNEI7WUFDOUIsQ0FBQyxDQUFDLHVCQUF1QixDQUFDO0lBQ2xDLENBQUM7SUFFRCxLQUFLO1FBQ0QsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRTtZQUN2QixJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDaEQ7YUFBTTtZQUNILElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ3JDO0lBQ0wsQ0FBQztDQUNKLENBQUE7OzBDQW5EUSxNQUFNLFNBQUMsYUFBYTs0Q0FDcEIsTUFBTSxTQUFDLG9CQUFvQjtZQUdwQixVQUFVLHVCQURqQixNQUFNLFNBQUMsdUJBQXVCO1lBRWMsVUFBVSx1QkFBdEQsTUFBTSxTQUFDLGNBQWM7O0FBUTFCO0lBREMsV0FBVyxDQUFDLGdCQUFnQixDQUFDOzhDQUc3QjtBQUdEO0lBREMsV0FBVyxDQUFDLGlCQUFpQixDQUFDO2dEQUc5QjtBQWtCRDtJQURDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQztvREFLN0I7QUE1Q1Esa0JBQWtCO0lBWDlCLFNBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxZQUFZO1FBQ3RCLG95QkFBcUM7UUFFckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07UUFDL0MsU0FBUyxFQUFFLG9CQUFvQjtRQUMvQixVQUFVLEVBQUUsQ0FBQyxhQUFhLEVBQUUsU0FBUyxDQUFDO1FBQ3RDLElBQUksRUFBRTtZQUNGLGNBQWMsRUFBRSxNQUFNO1NBQ3pCOztLQUNKLENBQUM7SUFHTyxXQUFBLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQTtJQUNyQixXQUFBLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFBO0lBRTVCLFdBQUEsTUFBTSxDQUFDLHVCQUF1QixDQUFDLENBQUE7SUFFL0IsV0FBQSxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUE7R0FQbEIsa0JBQWtCLENBcUQ5QjtTQXJEWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBJbmplY3R9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUVUlfSVNfTU9CSUxFLCBUdWlEaWFsb2d9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHt0dWlGYWRlSW4sIHR1aVNsaWRlSW5Ub3B9IGZyb20gJ0B0YWlnYS11aS9jb3JlL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHtUdWlBbmltYXRpb25PcHRpb25zLCBUdWlEaWFsb2dPcHRpb25zfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9pbnRlcmZhY2VzJztcbmltcG9ydCB7VFVJX0NMT1NFX1dPUkR9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Rva2Vucyc7XG5pbXBvcnQge1R1aVNpemVMLCBUdWlTaXplU30gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHtQT0xZTU9SUEhFVVNfQ09OVEVYVCwgUG9seW1vcnBoZXVzQ29udGVudH0gZnJvbSAnQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge1RVSV9ESUFMT0dfQ0xPU0VfU1RSRUFNLCBUVUlfRElBTE9HX1BST1ZJREVSU30gZnJvbSAnLi9kaWFsb2cucHJvdmlkZXJzJztcblxuY29uc3QgU01BTExfRElBTE9HU19BTklNQVRJT04gPSB7dmFsdWU6ICcnLCBwYXJhbXM6IHtzdGFydDogJzQwcHgnfX07XG5jb25zdCBGVUxMU0NSRUVOX0RJQUxPR1NfQU5JTUFUSU9OID0ge3ZhbHVlOiAnJywgcGFyYW1zOiB7c3RhcnQ6ICcxMDB2aCd9fTtcbmNvbnN0IFJFUVVJUkVEX0VSUk9SID0gbmV3IEVycm9yKCdSZXF1aXJlZCBkaWFsb2cgd2FzIGRpc21pc3NlZCcpO1xuXG4vLyBAZHluYW1pY1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktZGlhbG9nJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vZGlhbG9nLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2RpYWxvZy5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgcHJvdmlkZXJzOiBUVUlfRElBTE9HX1BST1ZJREVSUyxcbiAgICBhbmltYXRpb25zOiBbdHVpU2xpZGVJblRvcCwgdHVpRmFkZUluXSxcbiAgICBob3N0OiB7XG4gICAgICAgICdbQHR1aUZhZGVJbl0nOiAndHJ1ZScsXG4gICAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpRGlhbG9nQ29tcG9uZW50PE8sIEk+IHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUVUlfSVNfTU9CSUxFKSBwcml2YXRlIHJlYWRvbmx5IGlzTW9iaWxlOiBib29sZWFuLFxuICAgICAgICBASW5qZWN0KFBPTFlNT1JQSEVVU19DT05URVhUKVxuICAgICAgICByZWFkb25seSBjb250ZXh0OiBUdWlEaWFsb2c8VHVpRGlhbG9nT3B0aW9uczxJPiwgTz4sXG4gICAgICAgIEBJbmplY3QoVFVJX0RJQUxPR19DTE9TRV9TVFJFQU0pXG4gICAgICAgIGNsb3NlJDogT2JzZXJ2YWJsZTx1bmtub3duPixcbiAgICAgICAgQEluamVjdChUVUlfQ0xPU0VfV09SRCkgcmVhZG9ubHkgY2xvc2VXb3JkJDogT2JzZXJ2YWJsZTxzdHJpbmc+LFxuICAgICkge1xuICAgICAgICBjbG9zZSQuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtc2l6ZScpXG4gICAgZ2V0IHNpemUoKTogVHVpU2l6ZVMgfCBUdWlTaXplTCB8ICdmdWxsc2NyZWVuJyB8ICdwYWdlJyB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHQuc2l6ZTtcbiAgICB9XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLl9jZW50ZXJlZCcpXG4gICAgZ2V0IGhlYWRlcigpOiBQb2x5bW9ycGhldXNDb250ZW50IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGV4dC5oZWFkZXI7XG4gICAgfVxuXG4gICAgZ2V0IGgoKTogJ2gzJyB8ICdoNCcgfCAnaDUnIHtcbiAgICAgICAgaWYgKHRoaXMuaXNNb2JpbGUpIHtcbiAgICAgICAgICAgIHJldHVybiAnaDUnO1xuICAgICAgICB9XG5cbiAgICAgICAgc3dpdGNoICh0aGlzLnNpemUpIHtcbiAgICAgICAgICAgIGNhc2UgJ3MnOlxuICAgICAgICAgICAgICAgIHJldHVybiAnaDUnO1xuICAgICAgICAgICAgY2FzZSAnbSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuICdoNCc7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiAnaDMnO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdAdHVpU2xpZGVJblRvcCcpXG4gICAgZ2V0IHNsaWRlSW5Ub3AoKTogVHVpQW5pbWF0aW9uT3B0aW9ucyB7XG4gICAgICAgIHJldHVybiB0aGlzLnNpemUgPT09ICdmdWxsc2NyZWVuJyB8fCB0aGlzLnNpemUgPT09ICdwYWdlJyB8fCB0aGlzLmlzTW9iaWxlXG4gICAgICAgICAgICA/IEZVTExTQ1JFRU5fRElBTE9HU19BTklNQVRJT05cbiAgICAgICAgICAgIDogU01BTExfRElBTE9HU19BTklNQVRJT047XG4gICAgfVxuXG4gICAgY2xvc2UoKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbnRleHQucmVxdWlyZWQpIHtcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC4kaW1wbGljaXQuZXJyb3IoUkVRVUlSRURfRVJST1IpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5jb250ZXh0LiRpbXBsaWNpdC5jb21wbGV0ZSgpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19