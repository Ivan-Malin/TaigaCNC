import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, } from '@angular/core';
import { TuiDestroyService } from '@taiga-ui/cdk';
import { tuiFadeIn } from '@taiga-ui/core/animations';
import { TuiHintDirective } from '@taiga-ui/core/directives/hint';
import { TuiHintService } from '@taiga-ui/core/services';
import { Observable } from 'rxjs';
import { skip, takeUntil } from 'rxjs/operators';
let TuiHintsHostComponent = class TuiHintsHostComponent {
    constructor(elementRef, hints$, changeDetectorRef, destroy$) {
        this.elementRef = elementRef;
        this.changeDetectorRef = changeDetectorRef;
        /**
         * @awful TODO: remove hints variable
         * and use hints$ after resolving issue with Change Detection
         */
        this.hints = [];
        hints$.pipe(skip(1), takeUntil(destroy$)).subscribe(hints => {
            this.hints = hints;
            this.changeDetectorRef.detectChanges();
        });
    }
    get clientRect() {
        return this.elementRef.nativeElement.getBoundingClientRect();
    }
    onHovered(hovered, directive) {
        if (directive instanceof TuiHintDirective) {
            directive.componentHovered$.next(hovered);
        }
    }
};
TuiHintsHostComponent.ctorParameters = () => [
    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
    { type: TuiHintService, decorators: [{ type: Inject, args: [TuiHintService,] }] },
    { type: ChangeDetectorRef, decorators: [{ type: Inject, args: [ChangeDetectorRef,] }] },
    { type: Observable, decorators: [{ type: Inject, args: [TuiDestroyService,] }] }
];
TuiHintsHostComponent = __decorate([
    Component({
        selector: 'tui-hints-host',
        template: "<tui-hint-box\n    *ngFor=\"let hint of hints\"\n    role=\"tooltip\"\n    [attr.id]=\"hint.id\"\n    [@tuiFadeIn]\n    [mode]=\"hint.mode\"\n    [direction]=\"hint.direction\"\n    [hint]=\"hint\"\n    (tuiHoveredChange)=\"onHovered($event, hint)\"\n>\n    <div polymorpheus-outlet [content]=\"hint.content\">\n        <ng-template let-text>\n            <span class=\"text\">{{text}}</span>\n        </ng-template>\n    </div>\n</tui-hint-box>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        animations: [tuiFadeIn],
        providers: [TuiDestroyService],
        host: {
            'aria-live': 'polite',
        },
        styles: [":host{position:fixed;bottom:0;left:0;width:100%;height:0}.text{white-space:pre-wrap}"]
    }),
    __param(0, Inject(ElementRef)),
    __param(1, Inject(TuiHintService)),
    __param(2, Inject(ChangeDetectorRef)),
    __param(3, Inject(TuiDestroyService))
], TuiHintsHostComponent);
export { TuiHintsHostComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGludHMtaG9zdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS9jb21wb25lbnRzL2hpbnRzLWhvc3QvIiwic291cmNlcyI6WyJoaW50cy1ob3N0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixpQkFBaUIsRUFDakIsU0FBUyxFQUNULFVBQVUsRUFDVixNQUFNLEdBQ1QsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWhELE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUNwRCxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNoRSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUNoQyxPQUFPLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBYS9DLElBQWEscUJBQXFCLEdBQWxDLE1BQWEscUJBQXFCO0lBTzlCLFlBQ3lDLFVBQW1DLEVBQ2hELE1BQXNCLEVBQ0YsaUJBQW9DLEVBQ3JELFFBQTBCO1FBSGhCLGVBQVUsR0FBVixVQUFVLENBQXlCO1FBRTVCLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFUcEY7OztXQUdHO1FBQ0gsVUFBSyxHQUFtQyxFQUFFLENBQUM7UUFRdkMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3hELElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1lBQ25CLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUMzQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxJQUFJLFVBQVU7UUFDVixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLHFCQUFxQixFQUFFLENBQUM7SUFDakUsQ0FBQztJQUVELFNBQVMsQ0FBQyxPQUFnQixFQUFFLFNBQTBCO1FBQ2xELElBQUksU0FBUyxZQUFZLGdCQUFnQixFQUFFO1lBQ3ZDLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDN0M7SUFDTCxDQUFDO0NBQ0osQ0FBQTs7WUFwQndELFVBQVUsdUJBQTFELE1BQU0sU0FBQyxVQUFVO1lBQ2MsY0FBYyx1QkFBN0MsTUFBTSxTQUFDLGNBQWM7WUFDeUMsaUJBQWlCLHVCQUEvRSxNQUFNLFNBQUMsaUJBQWlCO1lBQ1ksVUFBVSx1QkFBOUMsTUFBTSxTQUFDLGlCQUFpQjs7QUFYcEIscUJBQXFCO0lBWGpDLFNBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxnQkFBZ0I7UUFDMUIsMmNBQXlDO1FBRXpDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1FBQy9DLFVBQVUsRUFBRSxDQUFDLFNBQVMsQ0FBQztRQUN2QixTQUFTLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztRQUM5QixJQUFJLEVBQUU7WUFDRixXQUFXLEVBQUUsUUFBUTtTQUN4Qjs7S0FDSixDQUFDO0lBU08sV0FBQSxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUE7SUFDbEIsV0FBQSxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUE7SUFDdEIsV0FBQSxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQTtJQUN6QixXQUFBLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO0dBWHJCLHFCQUFxQixDQTRCakM7U0E1QlkscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICBDb21wb25lbnQsXG4gICAgRWxlbWVudFJlZixcbiAgICBJbmplY3QsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlEZXN0cm95U2VydmljZX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge0Fic3RyYWN0VHVpSGludH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvYWJzdHJhY3QnO1xuaW1wb3J0IHt0dWlGYWRlSW59IGZyb20gJ0B0YWlnYS11aS9jb3JlL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHtUdWlIaW50RGlyZWN0aXZlfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9kaXJlY3RpdmVzL2hpbnQnO1xuaW1wb3J0IHtUdWlIaW50U2VydmljZX0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvc2VydmljZXMnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7c2tpcCwgdGFrZVVudGlsfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLWhpbnRzLWhvc3QnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9oaW50cy1ob3N0LnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2hpbnRzLWhvc3Quc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIGFuaW1hdGlvbnM6IFt0dWlGYWRlSW5dLFxuICAgIHByb3ZpZGVyczogW1R1aURlc3Ryb3lTZXJ2aWNlXSxcbiAgICBob3N0OiB7XG4gICAgICAgICdhcmlhLWxpdmUnOiAncG9saXRlJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBUdWlIaW50c0hvc3RDb21wb25lbnQge1xuICAgIC8qKlxuICAgICAqIEBhd2Z1bCBUT0RPOiByZW1vdmUgaGludHMgdmFyaWFibGVcbiAgICAgKiBhbmQgdXNlIGhpbnRzJCBhZnRlciByZXNvbHZpbmcgaXNzdWUgd2l0aCBDaGFuZ2UgRGV0ZWN0aW9uXG4gICAgICovXG4gICAgaGludHM6IFJlYWRvbmx5QXJyYXk8QWJzdHJhY3RUdWlIaW50PiA9IFtdO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoRWxlbWVudFJlZikgcHJpdmF0ZSByZWFkb25seSBlbGVtZW50UmVmOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcbiAgICAgICAgQEluamVjdChUdWlIaW50U2VydmljZSkgaGludHMkOiBUdWlIaW50U2VydmljZSxcbiAgICAgICAgQEluamVjdChDaGFuZ2VEZXRlY3RvclJlZikgcHJpdmF0ZSByZWFkb25seSBjaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgICAgIEBJbmplY3QoVHVpRGVzdHJveVNlcnZpY2UpIGRlc3Ryb3kkOiBPYnNlcnZhYmxlPHZvaWQ+LFxuICAgICkge1xuICAgICAgICBoaW50cyQucGlwZShza2lwKDEpLCB0YWtlVW50aWwoZGVzdHJveSQpKS5zdWJzY3JpYmUoaGludHMgPT4ge1xuICAgICAgICAgICAgdGhpcy5oaW50cyA9IGhpbnRzO1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VEZXRlY3RvclJlZi5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGdldCBjbGllbnRSZWN0KCk6IENsaWVudFJlY3Qge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgfVxuXG4gICAgb25Ib3ZlcmVkKGhvdmVyZWQ6IGJvb2xlYW4sIGRpcmVjdGl2ZTogQWJzdHJhY3RUdWlIaW50KSB7XG4gICAgICAgIGlmIChkaXJlY3RpdmUgaW5zdGFuY2VvZiBUdWlIaW50RGlyZWN0aXZlKSB7XG4gICAgICAgICAgICBkaXJlY3RpdmUuY29tcG9uZW50SG92ZXJlZCQubmV4dChob3ZlcmVkKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==