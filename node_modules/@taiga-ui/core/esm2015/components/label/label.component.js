import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, ContentChild, HostBinding, Inject, Input, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { tuiDefaultProp } from '@taiga-ui/cdk';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_MODE } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
let TuiLabelComponent = class TuiLabelComponent {
    constructor(mode$) {
        this.mode$ = mode$;
        this.label = '';
        this.context = {
            $implicit: null,
        };
    }
};
TuiLabelComponent.ctorParameters = () => [
    { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] }
];
__decorate([
    Input(),
    tuiDefaultProp()
], TuiLabelComponent.prototype, "label", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiLabelComponent.prototype, "context", void 0);
__decorate([
    ContentChild(NgControl),
    HostBinding('class._control')
], TuiLabelComponent.prototype, "control", void 0);
TuiLabelComponent = __decorate([
    Component({
        selector: 'label[tuiLabel]',
        template: "<span polymorpheus-outlet class=\"label\" [content]=\"label\" [context]=\"context\">\n    <ng-template let-text>\n        <span class=\"text\">{{text}}</span>\n    </ng-template>\n</span>\n<span class=\"content\"><ng-content></ng-content></span>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        providers: [MODE_PROVIDER],
        host: {
            '($.data-mode.attr)': 'mode$',
        },
        styles: [":host{display:flex;min-height:44px;justify-content:space-between;flex-direction:column;pointer-events:none}.label{font:var(--tui-font-text-s);max-width:100%;-ms-grid-row-align:inherit;align-self:inherit;overflow:inherit;pointer-events:auto}.text{display:block;overflow:inherit;text-overflow:ellipsis}:host:not(._control) .text{color:var(--tui-text-02)}:host([data-mode=onDark]) .text{color:var(--tui-text-02-night)}.content{line-height:24px;overflow:inherit;text-overflow:ellipsis;pointer-events:auto}"]
    }),
    __param(0, Inject(TUI_MODE))
], TuiLabelComponent);
export { TuiLabelComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvY29tcG9uZW50cy9sYWJlbC8iLCJzb3VyY2VzIjpbImxhYmVsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsWUFBWSxFQUNaLFdBQVcsRUFDWCxNQUFNLEVBQ04sS0FBSyxHQUNSLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUN6QyxPQUFPLEVBQXlCLGNBQWMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNyRSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRy9DLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFZaEMsSUFBYSxpQkFBaUIsR0FBOUIsTUFBYSxpQkFBaUI7SUFlMUIsWUFBdUMsS0FBdUM7UUFBdkMsVUFBSyxHQUFMLEtBQUssQ0FBa0M7UUFaOUUsVUFBSyxHQUF3QixFQUFFLENBQUM7UUFJaEMsWUFBTyxHQUFxQztZQUN4QyxTQUFTLEVBQUUsSUFBSTtTQUNsQixDQUFDO0lBTStFLENBQUM7Q0FDckYsQ0FBQTs7WUFEaUQsVUFBVSx1QkFBM0MsTUFBTSxTQUFDLFFBQVE7O0FBWjVCO0lBRkMsS0FBSyxFQUFFO0lBQ1AsY0FBYyxFQUFFO2dEQUNlO0FBSWhDO0lBRkMsS0FBSyxFQUFFO0lBQ1AsY0FBYyxFQUFFO2tEQUdmO0FBSUY7SUFGQyxZQUFZLENBQUMsU0FBUyxDQUFDO0lBQ3ZCLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQztrREFDRDtBQWJwQixpQkFBaUI7SUFWN0IsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLGlCQUFpQjtRQUMzQixtUUFBb0M7UUFFcEMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07UUFDL0MsU0FBUyxFQUFFLENBQUMsYUFBYSxDQUFDO1FBQzFCLElBQUksRUFBRTtZQUNGLG9CQUFvQixFQUFFLE9BQU87U0FDaEM7O0tBQ0osQ0FBQztJQWdCZSxXQUFBLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQTtHQWZwQixpQkFBaUIsQ0FnQjdCO1NBaEJZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIENvbnRlbnRDaGlsZCxcbiAgICBIb3N0QmluZGluZyxcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtOZ0NvbnRyb2x9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7VHVpQ29udGV4dFdpdGhJbXBsaWNpdCwgdHVpRGVmYXVsdFByb3B9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtNT0RFX1BST1ZJREVSfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9wcm92aWRlcnMnO1xuaW1wb3J0IHtUVUlfTU9ERX0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdG9rZW5zJztcbmltcG9ydCB7VHVpQnJpZ2h0bmVzc30gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHtQb2x5bW9ycGhldXNDb250ZW50fSBmcm9tICdAdGlua29mZi9uZy1wb2x5bW9ycGhldXMnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdsYWJlbFt0dWlMYWJlbF0nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9sYWJlbC50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9sYWJlbC5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgcHJvdmlkZXJzOiBbTU9ERV9QUk9WSURFUl0sXG4gICAgaG9zdDoge1xuICAgICAgICAnKCQuZGF0YS1tb2RlLmF0dHIpJzogJ21vZGUkJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBUdWlMYWJlbENvbXBvbmVudDxUPiB7XG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGxhYmVsOiBQb2x5bW9ycGhldXNDb250ZW50ID0gJyc7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgY29udGV4dDogVHVpQ29udGV4dFdpdGhJbXBsaWNpdDxUIHwgbnVsbD4gPSB7XG4gICAgICAgICRpbXBsaWNpdDogbnVsbCxcbiAgICB9O1xuXG4gICAgQENvbnRlbnRDaGlsZChOZ0NvbnRyb2wpXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5fY29udHJvbCcpXG4gICAgcmVhZG9ubHkgY29udHJvbD86IE5nQ29udHJvbDtcblxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoVFVJX01PREUpIHJlYWRvbmx5IG1vZGUkOiBPYnNlcnZhYmxlPFR1aUJyaWdodG5lc3MgfCBudWxsPikge31cbn1cbiJdfQ==