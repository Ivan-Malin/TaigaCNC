import { __decorate, __param } from "tslib";
import { Directive, ElementRef, Inject, NgZone } from '@angular/core';
import { ANIMATION_FRAME, USER_AGENT } from '@ng-web-apis/common';
import { isEdgeOlderThan, isIE, TuiDestroyService, tuiZonefree } from '@taiga-ui/cdk';
import { Observable } from 'rxjs';
import { pairwise, takeUntil } from 'rxjs/operators';
const PERIMETER = 314;
const COEFFICIENT = 1.5;
let TuiLoaderDirective = class TuiLoaderDirective {
    constructor(animationFrame$, ngZone, destroy$, elementRef, userAgent) {
        this.elementRef = elementRef;
        this.strokeDasharray = PERIMETER;
        this.strokeDashoffset = 0;
        if (!isEdgeOlderThan(17, userAgent) && !isIE(userAgent)) {
            return;
        }
        animationFrame$
            .pipe(tuiZonefree(ngZone), pairwise(), takeUntil(destroy$))
            .subscribe(([cur, prev]) => {
            this.animate(prev - cur);
        });
    }
    animate(delta) {
        if (this.strokeDasharray < 0) {
            this.strokeDasharray = PERIMETER * 2;
            this.strokeDashoffset = 0;
        }
        const strokeDasharray = Math.abs(this.strokeDasharray - PERIMETER);
        const fps = 1000 / delta;
        const offsetStep = 1 + Math.floor(this.strokeDasharray / PERIMETER);
        const { style } = this.elementRef.nativeElement;
        style.strokeDashoffset = this.strokeDashoffset.toString();
        style.strokeDasharray = PERIMETER - strokeDasharray + ' ' + strokeDasharray;
        this.strokeDasharray -= PERIMETER / COEFFICIENT / fps;
        this.strokeDashoffset += (offsetStep * PERIMETER) / COEFFICIENT / fps;
        // this.elementRef.nativeElement.parentElement!.style.animation = 'none';
    }
};
TuiLoaderDirective.ctorParameters = () => [
    { type: Observable, decorators: [{ type: Inject, args: [ANIMATION_FRAME,] }] },
    { type: NgZone, decorators: [{ type: Inject, args: [NgZone,] }] },
    { type: Observable, decorators: [{ type: Inject, args: [TuiDestroyService,] }] },
    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
    { type: String, decorators: [{ type: Inject, args: [USER_AGENT,] }] }
];
TuiLoaderDirective = __decorate([
    Directive({
        selector: 'circle',
        providers: [TuiDestroyService],
    }),
    __param(0, Inject(ANIMATION_FRAME)),
    __param(1, Inject(NgZone)),
    __param(2, Inject(TuiDestroyService)),
    __param(3, Inject(ElementRef)),
    __param(4, Inject(USER_AGENT))
], TuiLoaderDirective);
export { TuiLoaderDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jb3JlL2NvbXBvbmVudHMvbG9hZGVyLyIsInNvdXJjZXMiOlsibG9hZGVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUMsZUFBZSxFQUFFLFVBQVUsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ2hFLE9BQU8sRUFBQyxlQUFlLEVBQUUsSUFBSSxFQUFFLGlCQUFpQixFQUFFLFdBQVcsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNwRixPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBQ2hDLE9BQU8sRUFBQyxRQUFRLEVBQUUsU0FBUyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkQsTUFBTSxTQUFTLEdBQUcsR0FBRyxDQUFDO0FBQ3RCLE1BQU0sV0FBVyxHQUFHLEdBQUcsQ0FBQztBQU14QixJQUFhLGtCQUFrQixHQUEvQixNQUFhLGtCQUFrQjtJQUszQixZQUM2QixlQUFtQyxFQUM1QyxNQUFjLEVBQ0gsUUFBMEIsRUFDaEIsVUFBd0MsRUFDekQsU0FBaUI7UUFEQSxlQUFVLEdBQVYsVUFBVSxDQUE4QjtRQVJ6RSxvQkFBZSxHQUFHLFNBQVMsQ0FBQztRQUU1QixxQkFBZ0IsR0FBRyxDQUFDLENBQUM7UUFTekIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxFQUFFLEVBQUUsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUU7WUFDckQsT0FBTztTQUNWO1FBRUQsZUFBZTthQUNWLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUUsUUFBUSxFQUFFLEVBQUUsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQzFELFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUU7WUFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDN0IsQ0FBQyxDQUFDLENBQUM7SUFDWCxDQUFDO0lBRU8sT0FBTyxDQUFDLEtBQWE7UUFDekIsSUFBSSxJQUFJLENBQUMsZUFBZSxHQUFHLENBQUMsRUFBRTtZQUMxQixJQUFJLENBQUMsZUFBZSxHQUFHLFNBQVMsR0FBRyxDQUFDLENBQUM7WUFDckMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLENBQUMsQ0FBQztTQUM3QjtRQUVELE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGVBQWUsR0FBRyxTQUFTLENBQUMsQ0FBQztRQUNuRSxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsS0FBSyxDQUFDO1FBQ3pCLE1BQU0sVUFBVSxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxlQUFlLEdBQUcsU0FBUyxDQUFDLENBQUM7UUFDcEUsTUFBTSxFQUFDLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDO1FBRTlDLEtBQUssQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDMUQsS0FBSyxDQUFDLGVBQWUsR0FBRyxTQUFTLEdBQUcsZUFBZSxHQUFHLEdBQUcsR0FBRyxlQUFlLENBQUM7UUFFNUUsSUFBSSxDQUFDLGVBQWUsSUFBSSxTQUFTLEdBQUcsV0FBVyxHQUFHLEdBQUcsQ0FBQztRQUN0RCxJQUFJLENBQUMsZ0JBQWdCLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDLEdBQUcsV0FBVyxHQUFHLEdBQUcsQ0FBQztRQUN0RSx5RUFBeUU7SUFDN0UsQ0FBQztDQUNKLENBQUE7O1lBbkNpRCxVQUFVLHVCQUFuRCxNQUFNLFNBQUMsZUFBZTtZQUNDLE1BQU0sdUJBQTdCLE1BQU0sU0FBQyxNQUFNO1lBQ3VCLFVBQVUsdUJBQTlDLE1BQU0sU0FBQyxpQkFBaUI7WUFDd0IsVUFBVSx1QkFBMUQsTUFBTSxTQUFDLFVBQVU7eUNBQ2pCLE1BQU0sU0FBQyxVQUFVOztBQVZiLGtCQUFrQjtJQUo5QixTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsUUFBUTtRQUNsQixTQUFTLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztLQUNqQyxDQUFDO0lBT08sV0FBQSxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUE7SUFDdkIsV0FBQSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUE7SUFDZCxXQUFBLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO0lBQ3pCLFdBQUEsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFBO0lBQ2xCLFdBQUEsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFBO0dBVmQsa0JBQWtCLENBeUM5QjtTQXpDWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5qZWN0LCBOZ1pvbmV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtBTklNQVRJT05fRlJBTUUsIFVTRVJfQUdFTlR9IGZyb20gJ0BuZy13ZWItYXBpcy9jb21tb24nO1xuaW1wb3J0IHtpc0VkZ2VPbGRlclRoYW4sIGlzSUUsIFR1aURlc3Ryb3lTZXJ2aWNlLCB0dWlab25lZnJlZX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtwYWlyd2lzZSwgdGFrZVVudGlsfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmNvbnN0IFBFUklNRVRFUiA9IDMxNDtcbmNvbnN0IENPRUZGSUNJRU5UID0gMS41O1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ2NpcmNsZScsXG4gICAgcHJvdmlkZXJzOiBbVHVpRGVzdHJveVNlcnZpY2VdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlMb2FkZXJEaXJlY3RpdmUge1xuICAgIHByaXZhdGUgc3Ryb2tlRGFzaGFycmF5ID0gUEVSSU1FVEVSO1xuXG4gICAgcHJpdmF0ZSBzdHJva2VEYXNob2Zmc2V0ID0gMDtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KEFOSU1BVElPTl9GUkFNRSkgYW5pbWF0aW9uRnJhbWUkOiBPYnNlcnZhYmxlPG51bWJlcj4sXG4gICAgICAgIEBJbmplY3QoTmdab25lKSBuZ1pvbmU6IE5nWm9uZSxcbiAgICAgICAgQEluamVjdChUdWlEZXN0cm95U2VydmljZSkgZGVzdHJveSQ6IE9ic2VydmFibGU8dm9pZD4sXG4gICAgICAgIEBJbmplY3QoRWxlbWVudFJlZikgcHJpdmF0ZSByZWFkb25seSBlbGVtZW50UmVmOiBFbGVtZW50UmVmPFNWR0NpcmNsZUVsZW1lbnQ+LFxuICAgICAgICBASW5qZWN0KFVTRVJfQUdFTlQpIHVzZXJBZ2VudDogc3RyaW5nLFxuICAgICkge1xuICAgICAgICBpZiAoIWlzRWRnZU9sZGVyVGhhbigxNywgdXNlckFnZW50KSAmJiAhaXNJRSh1c2VyQWdlbnQpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBhbmltYXRpb25GcmFtZSRcbiAgICAgICAgICAgIC5waXBlKHR1aVpvbmVmcmVlKG5nWm9uZSksIHBhaXJ3aXNlKCksIHRha2VVbnRpbChkZXN0cm95JCkpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKChbY3VyLCBwcmV2XSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuYW5pbWF0ZShwcmV2IC0gY3VyKTtcbiAgICAgICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgYW5pbWF0ZShkZWx0YTogbnVtYmVyKSB7XG4gICAgICAgIGlmICh0aGlzLnN0cm9rZURhc2hhcnJheSA8IDApIHtcbiAgICAgICAgICAgIHRoaXMuc3Ryb2tlRGFzaGFycmF5ID0gUEVSSU1FVEVSICogMjtcbiAgICAgICAgICAgIHRoaXMuc3Ryb2tlRGFzaG9mZnNldCA9IDA7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBzdHJva2VEYXNoYXJyYXkgPSBNYXRoLmFicyh0aGlzLnN0cm9rZURhc2hhcnJheSAtIFBFUklNRVRFUik7XG4gICAgICAgIGNvbnN0IGZwcyA9IDEwMDAgLyBkZWx0YTtcbiAgICAgICAgY29uc3Qgb2Zmc2V0U3RlcCA9IDEgKyBNYXRoLmZsb29yKHRoaXMuc3Ryb2tlRGFzaGFycmF5IC8gUEVSSU1FVEVSKTtcbiAgICAgICAgY29uc3Qge3N0eWxlfSA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuXG4gICAgICAgIHN0eWxlLnN0cm9rZURhc2hvZmZzZXQgPSB0aGlzLnN0cm9rZURhc2hvZmZzZXQudG9TdHJpbmcoKTtcbiAgICAgICAgc3R5bGUuc3Ryb2tlRGFzaGFycmF5ID0gUEVSSU1FVEVSIC0gc3Ryb2tlRGFzaGFycmF5ICsgJyAnICsgc3Ryb2tlRGFzaGFycmF5O1xuXG4gICAgICAgIHRoaXMuc3Ryb2tlRGFzaGFycmF5IC09IFBFUklNRVRFUiAvIENPRUZGSUNJRU5UIC8gZnBzO1xuICAgICAgICB0aGlzLnN0cm9rZURhc2hvZmZzZXQgKz0gKG9mZnNldFN0ZXAgKiBQRVJJTUVURVIpIC8gQ09FRkZJQ0lFTlQgLyBmcHM7XG4gICAgICAgIC8vIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnBhcmVudEVsZW1lbnQhLnN0eWxlLmFuaW1hdGlvbiA9ICdub25lJztcbiAgICB9XG59XG4iXX0=