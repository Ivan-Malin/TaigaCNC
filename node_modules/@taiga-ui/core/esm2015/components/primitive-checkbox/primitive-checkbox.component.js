import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, Inject, Input, } from '@angular/core';
import { tuiDefaultProp, tuiPure } from '@taiga-ui/cdk';
import { TUI_CHECKBOX_OPTIONS } from './checkbox-options';
// @dynamic
let TuiPrimitiveCheckboxComponent = class TuiPrimitiveCheckboxComponent {
    constructor(options) {
        this.options = options;
        this.size = this.options.size;
        this.disabled = false;
        this.focused = false;
        this.hovered = false;
        this.pressed = false;
        this.invalid = false;
        this.value = false;
    }
    get appearance() {
        switch (this.value) {
            case false:
                return this.options.appearances.unchecked;
            case true:
                return this.options.appearances.checked;
            default:
                return this.options.appearances.indeterminate;
        }
    }
    get empty() {
        return this.value === false;
    }
    get icon() {
        return this.value === null
            ? this.options.icons.indeterminate
            : this.options.icons.checked;
    }
    get context() {
        return this.getContext(this.size);
    }
    getContext($implicit) {
        return { $implicit };
    }
};
TuiPrimitiveCheckboxComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [TUI_CHECKBOX_OPTIONS,] }] }
];
__decorate([
    Input(),
    HostBinding('attr.data-tui-host-size'),
    tuiDefaultProp()
], TuiPrimitiveCheckboxComponent.prototype, "size", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveCheckboxComponent.prototype, "disabled", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveCheckboxComponent.prototype, "focused", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveCheckboxComponent.prototype, "hovered", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveCheckboxComponent.prototype, "pressed", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveCheckboxComponent.prototype, "invalid", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveCheckboxComponent.prototype, "value", void 0);
__decorate([
    tuiPure
], TuiPrimitiveCheckboxComponent.prototype, "getContext", null);
TuiPrimitiveCheckboxComponent = __decorate([
    Component({
        selector: 'tui-primitive-checkbox',
        template: "<tui-wrapper\n    [appearance]=\"appearance\"\n    [disabled]=\"disabled\"\n    [focused]=\"focused\"\n    [hovered]=\"hovered\"\n    [pressed]=\"pressed\"\n    [invalid]=\"invalid\"\n>\n    <span polymorpheus-outlet [content]=\"icon\" [context]=\"context\">\n        <ng-template let-icon>\n            <tui-svg\n                class=\"mark\"\n                [class.mark_on]=\"!empty\"\n                [src]=\"icon\"\n            ></tui-svg>\n        </ng-template>\n    </span>\n</tui-wrapper>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: [":host{display:block;font-size:0}:host[data-tui-host-size='m']{width:16px;height:16px;border-radius:var(--tui-radius-xs)}:host[data-tui-host-size='l']{width:24px;height:24px;border-radius:var(--tui-radius-s)}.mark{transition-property:transform;transition-duration:.3s;transition-timing-function:ease-in-out;display:block;width:100%;height:100%;transform:scale(0)}.mark_on{transform:scale(1)}"]
    }),
    __param(0, Inject(TUI_CHECKBOX_OPTIONS))
], TuiPrimitiveCheckboxComponent);
export { TuiPrimitiveCheckboxComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpbWl0aXZlLWNoZWNrYm94LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jb3JlL2NvbXBvbmVudHMvcHJpbWl0aXZlLWNoZWNrYm94LyIsInNvdXJjZXMiOlsicHJpbWl0aXZlLWNoZWNrYm94LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsV0FBVyxFQUNYLE1BQU0sRUFDTixLQUFLLEdBQ1IsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUF5QixjQUFjLEVBQUUsT0FBTyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRzlFLE9BQU8sRUFBa0Isb0JBQW9CLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUV6RSxXQUFXO0FBT1gsSUFBYSw2QkFBNkIsR0FBMUMsTUFBYSw2QkFBNkI7SUE4QnRDLFlBQ21ELE9BQXdCO1FBQXhCLFlBQU8sR0FBUCxPQUFPLENBQWlCO1FBM0IzRSxTQUFJLEdBQWEsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7UUFJbkMsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUlqQixZQUFPLEdBQUcsS0FBSyxDQUFDO1FBSWhCLFlBQU8sR0FBRyxLQUFLLENBQUM7UUFJaEIsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUloQixZQUFPLEdBQUcsS0FBSyxDQUFDO1FBSWhCLFVBQUssR0FBbUIsS0FBSyxDQUFDO0lBSTNCLENBQUM7SUFFSixJQUFJLFVBQVU7UUFDVixRQUFRLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDaEIsS0FBSyxLQUFLO2dCQUNOLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDO1lBQzlDLEtBQUssSUFBSTtnQkFDTCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQztZQUM1QztnQkFDSSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQztTQUNyRDtJQUNMLENBQUM7SUFFRCxJQUFJLEtBQUs7UUFDTCxPQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssS0FBSyxDQUFDO0lBQ2hDLENBQUM7SUFFRCxJQUFJLElBQUk7UUFDSixPQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssSUFBSTtZQUN0QixDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsYUFBYTtZQUNsQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxJQUFJLE9BQU87UUFDUCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFHTyxVQUFVLENBQUMsU0FBbUI7UUFDbEMsT0FBTyxFQUFDLFNBQVMsRUFBQyxDQUFDO0lBQ3ZCLENBQUM7Q0FDSixDQUFBOzs0Q0FoQ1EsTUFBTSxTQUFDLG9CQUFvQjs7QUEzQmhDO0lBSEMsS0FBSyxFQUFFO0lBQ1AsV0FBVyxDQUFDLHlCQUF5QixDQUFDO0lBQ3RDLGNBQWMsRUFBRTsyREFDa0I7QUFJbkM7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7K0RBQ0E7QUFJakI7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7OERBQ0Q7QUFJaEI7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7OERBQ0Q7QUFJaEI7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7OERBQ0Q7QUFJaEI7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7OERBQ0Q7QUFJaEI7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7NERBQ2E7QUFnQzlCO0lBREMsT0FBTzsrREFHUDtBQTlEUSw2QkFBNkI7SUFOekMsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLHdCQUF3QjtRQUNsQyxnZ0JBQWlEO1FBRWpELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztLQUNsRCxDQUFDO0lBZ0NPLFdBQUEsTUFBTSxDQUFDLG9CQUFvQixDQUFDLENBQUE7R0EvQnhCLDZCQUE2QixDQStEekM7U0EvRFksNkJBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpQ29udGV4dFdpdGhJbXBsaWNpdCwgdHVpRGVmYXVsdFByb3AsIHR1aVB1cmV9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlTaXplTH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHtQb2x5bW9ycGhldXNDb250ZW50fSBmcm9tICdAdGlua29mZi9uZy1wb2x5bW9ycGhldXMnO1xuaW1wb3J0IHtDaGVja2JveE9wdGlvbnMsIFRVSV9DSEVDS0JPWF9PUFRJT05TfSBmcm9tICcuL2NoZWNrYm94LW9wdGlvbnMnO1xuXG4vLyBAZHluYW1pY1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktcHJpbWl0aXZlLWNoZWNrYm94JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vcHJpbWl0aXZlLWNoZWNrYm94LnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3ByaW1pdGl2ZS1jaGVja2JveC5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFR1aVByaW1pdGl2ZUNoZWNrYm94Q29tcG9uZW50IHtcbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnYXR0ci5kYXRhLXR1aS1ob3N0LXNpemUnKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgc2l6ZTogVHVpU2l6ZUwgPSB0aGlzLm9wdGlvbnMuc2l6ZTtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBkaXNhYmxlZCA9IGZhbHNlO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGZvY3VzZWQgPSBmYWxzZTtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBob3ZlcmVkID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKVxuICAgIEB0dWlEZWZhdWx0UHJvcCgpXG4gICAgcHJlc3NlZCA9IGZhbHNlO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGludmFsaWQgPSBmYWxzZTtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICB2YWx1ZTogYm9vbGVhbiB8IG51bGwgPSBmYWxzZTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFRVSV9DSEVDS0JPWF9PUFRJT05TKSBwcml2YXRlIHJlYWRvbmx5IG9wdGlvbnM6IENoZWNrYm94T3B0aW9ucyxcbiAgICApIHt9XG5cbiAgICBnZXQgYXBwZWFyYW5jZSgpOiBzdHJpbmcge1xuICAgICAgICBzd2l0Y2ggKHRoaXMudmFsdWUpIHtcbiAgICAgICAgICAgIGNhc2UgZmFsc2U6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5hcHBlYXJhbmNlcy51bmNoZWNrZWQ7XG4gICAgICAgICAgICBjYXNlIHRydWU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5hcHBlYXJhbmNlcy5jaGVja2VkO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25zLmFwcGVhcmFuY2VzLmluZGV0ZXJtaW5hdGU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXQgZW1wdHkoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlID09PSBmYWxzZTtcbiAgICB9XG5cbiAgICBnZXQgaWNvbigpOiBQb2x5bW9ycGhldXNDb250ZW50PFR1aUNvbnRleHRXaXRoSW1wbGljaXQ8VHVpU2l6ZUw+PiB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlID09PSBudWxsXG4gICAgICAgICAgICA/IHRoaXMub3B0aW9ucy5pY29ucy5pbmRldGVybWluYXRlXG4gICAgICAgICAgICA6IHRoaXMub3B0aW9ucy5pY29ucy5jaGVja2VkO1xuICAgIH1cblxuICAgIGdldCBjb250ZXh0KCk6IFR1aUNvbnRleHRXaXRoSW1wbGljaXQ8VHVpU2l6ZUw+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0Q29udGV4dCh0aGlzLnNpemUpO1xuICAgIH1cblxuICAgIEB0dWlQdXJlXG4gICAgcHJpdmF0ZSBnZXRDb250ZXh0KCRpbXBsaWNpdDogVHVpU2l6ZUwpOiBUdWlDb250ZXh0V2l0aEltcGxpY2l0PFR1aVNpemVMPiB7XG4gICAgICAgIHJldHVybiB7JGltcGxpY2l0fTtcbiAgICB9XG59XG4iXX0=