import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, Inject, Optional, } from '@angular/core';
import { EVENT_MANAGER_PLUGINS } from '@angular/platform-browser';
import { TUI_DIALOGS, TUI_IS_MOBILE, tuiAssert } from '@taiga-ui/cdk';
import { tuiFadeIn } from '@taiga-ui/core/animations';
import { VERSION } from '@taiga-ui/core/constants';
import { TuiNotificationsHostComponent } from '@taiga-ui/core/modules/notifications';
import { TUI_ASSERT_ENABLED } from '@taiga-ui/core/tokens';
import { SilentEventPlugin } from '@tinkoff/ng-event-plugins';
import { merge, of } from 'rxjs';
import { map } from 'rxjs/operators';
// @dynamic
let TuiRootComponent = class TuiRootComponent {
    constructor(elementRef, dialogs, notificationsHost, isMobile, plugins, enabled) {
        this.elementRef = elementRef;
        this.dialogs = dialogs;
        this.notificationsHost = notificationsHost;
        this.isMobile = isMobile;
        this.scrollbars$ = this.dialogs && !this.isMobile
            ? merge(...this.dialogs).pipe(map(({ length }) => !length))
            : of(!this.isMobile);
        tuiAssert.enabled = enabled;
        tuiAssert.assert(!(plugins[0] instanceof SilentEventPlugin), 'PlatformBrowser or PlatformServer modules must come before TuiRootModule in your main module');
    }
};
TuiRootComponent.ctorParameters = () => [
    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TUI_DIALOGS,] }] },
    { type: TuiNotificationsHostComponent, decorators: [{ type: Optional }, { type: Inject, args: [TuiNotificationsHostComponent,] }] },
    { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_MOBILE,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [EVENT_MANAGER_PLUGINS,] }] },
    { type: Boolean, decorators: [{ type: Inject, args: [TUI_ASSERT_ENABLED,] }] }
];
TuiRootComponent = __decorate([
    Component({
        selector: 'tui-root',
        template: "<tui-scroll-controls\n    *ngIf=\"scrollbars$ | async\"\n    class=\"scrollbar\"\n></tui-scroll-controls>\n<tui-svg-defs-host></tui-svg-defs-host>\n<tui-portal-host>\n    <div class=\"content\">\n        <ng-content></ng-content>\n    </div>\n    <tui-dialog-host *ngIf=\"dialogs && dialogs.length\"></tui-dialog-host>\n    <ng-content select=\"tuiOverDialogs\"></ng-content>\n    <ng-container\n        *ngIf=\"notificationsHost\"\n        [ngComponentOutlet]=\"notificationsHost\"\n    ></ng-container>\n    <ng-content select=\"tuiOverNotifications\"></ng-content>\n</tui-portal-host>\n<ng-content select=\"tuiOverPortals\"></ng-content>\n<tui-hints-host></tui-hints-host>\n<ng-content select=\"tuiOverHints\"></ng-content>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        host: {
            'data-tui-version': VERSION,
        },
        animations: [tuiFadeIn],
        styles: [":host{position:relative;display:block;flex:1}.scrollbar{position:fixed;top:0;left:0;bottom:0;right:0;margin:0}.content{position:relative;z-index:0;height:100%}"]
    }),
    __param(0, Inject(ElementRef)),
    __param(1, Optional()),
    __param(1, Inject(TUI_DIALOGS)),
    __param(2, Optional()),
    __param(2, Inject(TuiNotificationsHostComponent)),
    __param(3, Inject(TUI_IS_MOBILE)),
    __param(4, Inject(EVENT_MANAGER_PLUGINS)),
    __param(5, Inject(TUI_ASSERT_ENABLED))
], TuiRootComponent);
export { TuiRootComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm9vdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS9jb21wb25lbnRzL3Jvb3QvIiwic291cmNlcyI6WyJyb290LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsVUFBVSxFQUNWLE1BQU0sRUFDTixRQUFRLEdBQ1gsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDaEUsT0FBTyxFQUFDLFdBQVcsRUFBRSxhQUFhLEVBQUUsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUNwRCxPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDakQsT0FBTyxFQUFDLDZCQUE2QixFQUFDLE1BQU0sc0NBQXNDLENBQUM7QUFDbkYsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDekQsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDNUQsT0FBTyxFQUFDLEtBQUssRUFBYyxFQUFFLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDM0MsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRW5DLFdBQVc7QUFXWCxJQUFhLGdCQUFnQixHQUE3QixNQUFhLGdCQUFnQjtJQU16QixZQUNpQyxVQUFtQyxFQUd2RCxPQUF5RCxFQUd6RCxpQkFBZ0QsRUFDakIsUUFBaUIsRUFDMUIsT0FBMkIsRUFDOUIsT0FBZ0I7UUFUZixlQUFVLEdBQVYsVUFBVSxDQUF5QjtRQUd2RCxZQUFPLEdBQVAsT0FBTyxDQUFrRDtRQUd6RCxzQkFBaUIsR0FBakIsaUJBQWlCLENBQStCO1FBQ2pCLGFBQVEsR0FBUixRQUFRLENBQVM7UUFicEQsZ0JBQVcsR0FDaEIsSUFBSSxDQUFDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRO1lBQzFCLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUMsTUFBTSxFQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDekQsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQWN6QixTQUFTLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUM1QixTQUFTLENBQUMsTUFBTSxDQUNaLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFlBQVksaUJBQWlCLENBQUMsRUFDMUMsOEZBQThGLENBQ2pHLENBQUM7SUFDTixDQUFDO0NBQ0osQ0FBQTs7WUFqQmdELFVBQVUsdUJBQWxELE1BQU0sU0FBQyxVQUFVOzRDQUNqQixRQUFRLFlBQ1IsTUFBTSxTQUFDLFdBQVc7WUFJUyw2QkFBNkIsdUJBRnhELFFBQVEsWUFDUixNQUFNLFNBQUMsNkJBQTZCOzBDQUVwQyxNQUFNLFNBQUMsYUFBYTs0Q0FDcEIsTUFBTSxTQUFDLHFCQUFxQjswQ0FDNUIsTUFBTSxTQUFDLGtCQUFrQjs7QUFoQnJCLGdCQUFnQjtJQVY1QixTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsVUFBVTtRQUNwQixvdUJBQWlDO1FBRWpDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1FBQy9DLElBQUksRUFBRTtZQUNGLGtCQUFrQixFQUFFLE9BQU87U0FDOUI7UUFDRCxVQUFVLEVBQUUsQ0FBQyxTQUFTLENBQUM7O0tBQzFCLENBQUM7SUFRTyxXQUFBLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQTtJQUNsQixXQUFBLFFBQVEsRUFBRSxDQUFBO0lBQ1YsV0FBQSxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUE7SUFFbkIsV0FBQSxRQUFRLEVBQUUsQ0FBQTtJQUNWLFdBQUEsTUFBTSxDQUFDLDZCQUE2QixDQUFDLENBQUE7SUFFckMsV0FBQSxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUE7SUFDckIsV0FBQSxNQUFNLENBQUMscUJBQXFCLENBQUMsQ0FBQTtJQUM3QixXQUFBLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFBO0dBaEJ0QixnQkFBZ0IsQ0F3QjVCO1NBeEJZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEVsZW1lbnRSZWYsXG4gICAgSW5qZWN0LFxuICAgIE9wdGlvbmFsLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RVZFTlRfTUFOQUdFUl9QTFVHSU5TfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7VFVJX0RJQUxPR1MsIFRVSV9JU19NT0JJTEUsIHR1aUFzc2VydH0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge3R1aUZhZGVJbn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvYW5pbWF0aW9ucyc7XG5pbXBvcnQge1ZFUlNJT059IGZyb20gJ0B0YWlnYS11aS9jb3JlL2NvbnN0YW50cyc7XG5pbXBvcnQge1R1aU5vdGlmaWNhdGlvbnNIb3N0Q29tcG9uZW50fSBmcm9tICdAdGFpZ2EtdWkvY29yZS9tb2R1bGVzL25vdGlmaWNhdGlvbnMnO1xuaW1wb3J0IHtUVUlfQVNTRVJUX0VOQUJMRUR9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Rva2Vucyc7XG5pbXBvcnQge1NpbGVudEV2ZW50UGx1Z2lufSBmcm9tICdAdGlua29mZi9uZy1ldmVudC1wbHVnaW5zJztcbmltcG9ydCB7bWVyZ2UsIE9ic2VydmFibGUsIG9mfSBmcm9tICdyeGpzJztcbmltcG9ydCB7bWFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbi8vIEBkeW5hbWljXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1yb290JyxcbiAgICB0ZW1wbGF0ZVVybDogJ3Jvb3QudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vcm9vdC5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgaG9zdDoge1xuICAgICAgICAnZGF0YS10dWktdmVyc2lvbic6IFZFUlNJT04sXG4gICAgfSxcbiAgICBhbmltYXRpb25zOiBbdHVpRmFkZUluXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpUm9vdENvbXBvbmVudCB7XG4gICAgcmVhZG9ubHkgc2Nyb2xsYmFycyQgPVxuICAgICAgICB0aGlzLmRpYWxvZ3MgJiYgIXRoaXMuaXNNb2JpbGVcbiAgICAgICAgICAgID8gbWVyZ2UoLi4udGhpcy5kaWFsb2dzKS5waXBlKG1hcCgoe2xlbmd0aH0pID0+ICFsZW5ndGgpKVxuICAgICAgICAgICAgOiBvZighdGhpcy5pc01vYmlsZSk7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChFbGVtZW50UmVmKSByZWFkb25seSBlbGVtZW50UmVmOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcbiAgICAgICAgQE9wdGlvbmFsKClcbiAgICAgICAgQEluamVjdChUVUlfRElBTE9HUylcbiAgICAgICAgcmVhZG9ubHkgZGlhbG9nczogcmVhZG9ubHkgT2JzZXJ2YWJsZTxyZWFkb25seSB1bmtub3duW10+W10gfCBudWxsLFxuICAgICAgICBAT3B0aW9uYWwoKVxuICAgICAgICBASW5qZWN0KFR1aU5vdGlmaWNhdGlvbnNIb3N0Q29tcG9uZW50KVxuICAgICAgICByZWFkb25seSBub3RpZmljYXRpb25zSG9zdDogVHVpTm90aWZpY2F0aW9uc0hvc3RDb21wb25lbnQsXG4gICAgICAgIEBJbmplY3QoVFVJX0lTX01PQklMRSkgcHJpdmF0ZSByZWFkb25seSBpc01vYmlsZTogYm9vbGVhbixcbiAgICAgICAgQEluamVjdChFVkVOVF9NQU5BR0VSX1BMVUdJTlMpIHBsdWdpbnM6IHJlYWRvbmx5IHVua25vd25bXSxcbiAgICAgICAgQEluamVjdChUVUlfQVNTRVJUX0VOQUJMRUQpIGVuYWJsZWQ6IGJvb2xlYW4sXG4gICAgKSB7XG4gICAgICAgIHR1aUFzc2VydC5lbmFibGVkID0gZW5hYmxlZDtcbiAgICAgICAgdHVpQXNzZXJ0LmFzc2VydChcbiAgICAgICAgICAgICEocGx1Z2luc1swXSBpbnN0YW5jZW9mIFNpbGVudEV2ZW50UGx1Z2luKSxcbiAgICAgICAgICAgICdQbGF0Zm9ybUJyb3dzZXIgb3IgUGxhdGZvcm1TZXJ2ZXIgbW9kdWxlcyBtdXN0IGNvbWUgYmVmb3JlIFR1aVJvb3RNb2R1bGUgaW4geW91ciBtYWluIG1vZHVsZScsXG4gICAgICAgICk7XG4gICAgfVxufVxuIl19