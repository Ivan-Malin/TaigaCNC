import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, Inject, Input, } from '@angular/core';
import { TUI_IS_MOBILE } from '@taiga-ui/cdk';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_MODE } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
let TuiWrapperComponent = class TuiWrapperComponent {
    constructor(isMobile, mode$) {
        this.isMobile = isMobile;
        this.mode$ = mode$;
        this.disabled = false;
        this.readOnly = false;
        this.hovered = false;
        this.pressed = false;
        this.focused = false;
        this.invalid = false;
        this.appearance = '';
    }
    get computedInvalid() {
        return !this.disabled && !this.readOnly && this.invalid;
    }
    get computedFocused() {
        return this.focused && !this.disabled;
    }
    get interactiveState() {
        if (this.disabled) {
            return "disabled" /* Disabled */;
        }
        if (this.readOnly) {
            return "readonly" /* Readonly */;
        }
        if (this.pressed && !this.isMobile) {
            return "pressed" /* Pressed */;
        }
        if (this.hovered && !this.isMobile) {
            return "hovered" /* Hovered */;
        }
        return null;
    }
};
TuiWrapperComponent.ctorParameters = () => [
    { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_MOBILE,] }] },
    { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] }
];
__decorate([
    Input()
], TuiWrapperComponent.prototype, "disabled", void 0);
__decorate([
    Input()
], TuiWrapperComponent.prototype, "readOnly", void 0);
__decorate([
    Input()
], TuiWrapperComponent.prototype, "hovered", void 0);
__decorate([
    Input()
], TuiWrapperComponent.prototype, "pressed", void 0);
__decorate([
    Input()
], TuiWrapperComponent.prototype, "focused", void 0);
__decorate([
    Input()
], TuiWrapperComponent.prototype, "invalid", void 0);
__decorate([
    Input(),
    HostBinding('attr.data-appearance')
], TuiWrapperComponent.prototype, "appearance", void 0);
__decorate([
    HostBinding('class._invalid')
], TuiWrapperComponent.prototype, "computedInvalid", null);
__decorate([
    HostBinding('class._focused')
], TuiWrapperComponent.prototype, "computedFocused", null);
__decorate([
    HostBinding('attr.data-state')
], TuiWrapperComponent.prototype, "interactiveState", null);
TuiWrapperComponent = __decorate([
    Component({
        selector: 'tui-wrapper',
        template: '<ng-content></ng-content>',
        changeDetection: ChangeDetectionStrategy.OnPush,
        providers: [MODE_PROVIDER],
        host: {
            '($.data-mode.attr)': 'mode$',
        },
        styles: [":host{transition-property:color,background;transition-duration:.3s;transition-timing-function:ease-in-out;position:relative;display:block;height:100%;width:100%;text-align:left;border-radius:inherit}:host:after{transition-property:box-shadow;transition-duration:.3s;transition-timing-function:ease-in-out;content:'';position:absolute;top:0;left:0;right:0;bottom:0;border-radius:inherit;border:1px solid currentColor;pointer-events:none;color:transparent}:host._focused:after{border-width:2px;color:var(--tui-focus)}:host[data-state=disabled]{pointer-events:none}"]
    }),
    __param(0, Inject(TUI_IS_MOBILE)),
    __param(1, Inject(TUI_MODE))
], TuiWrapperComponent);
export { TuiWrapperComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JhcHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS9jb21wb25lbnRzL3dyYXBwZXIvIiwic291cmNlcyI6WyJ3cmFwcGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsV0FBVyxFQUNYLE1BQU0sRUFDTixLQUFLLEdBQ1IsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUU1QyxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRS9DLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFZaEMsSUFBYSxtQkFBbUIsR0FBaEMsTUFBYSxtQkFBbUI7SUF1QjVCLFlBQzRDLFFBQWlCLEVBQzlCLEtBQXVDO1FBRDFCLGFBQVEsR0FBUixRQUFRLENBQVM7UUFDOUIsVUFBSyxHQUFMLEtBQUssQ0FBa0M7UUF2QnRFLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFHakIsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUdqQixZQUFPLEdBQUcsS0FBSyxDQUFDO1FBR2hCLFlBQU8sR0FBRyxLQUFLLENBQUM7UUFHaEIsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUdoQixZQUFPLEdBQUcsS0FBSyxDQUFDO1FBSWhCLGVBQVUsR0FBRyxFQUFFLENBQUM7SUFLYixDQUFDO0lBR0osSUFBSSxlQUFlO1FBQ2YsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDNUQsQ0FBQztJQUdELElBQUksZUFBZTtRQUNmLE9BQU8sSUFBSSxDQUFDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDMUMsQ0FBQztJQUdELElBQUksZ0JBQWdCO1FBQ2hCLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNmLGlDQUFvQztTQUN2QztRQUVELElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNmLGlDQUFvQztTQUN2QztRQUVELElBQUksSUFBSSxDQUFDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDaEMsK0JBQW1DO1NBQ3RDO1FBRUQsSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNoQywrQkFBbUM7U0FDdEM7UUFFRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0NBQ0osQ0FBQTs7MENBbENRLE1BQU0sU0FBQyxhQUFhO1lBQ2EsVUFBVSx1QkFBM0MsTUFBTSxTQUFDLFFBQVE7O0FBdkJwQjtJQURDLEtBQUssRUFBRTtxREFDUztBQUdqQjtJQURDLEtBQUssRUFBRTtxREFDUztBQUdqQjtJQURDLEtBQUssRUFBRTtvREFDUTtBQUdoQjtJQURDLEtBQUssRUFBRTtvREFDUTtBQUdoQjtJQURDLEtBQUssRUFBRTtvREFDUTtBQUdoQjtJQURDLEtBQUssRUFBRTtvREFDUTtBQUloQjtJQUZDLEtBQUssRUFBRTtJQUNQLFdBQVcsQ0FBQyxzQkFBc0IsQ0FBQzt1REFDcEI7QUFRaEI7SUFEQyxXQUFXLENBQUMsZ0JBQWdCLENBQUM7MERBRzdCO0FBR0Q7SUFEQyxXQUFXLENBQUMsZ0JBQWdCLENBQUM7MERBRzdCO0FBR0Q7SUFEQyxXQUFXLENBQUMsaUJBQWlCLENBQUM7MkRBbUI5QjtBQXpEUSxtQkFBbUI7SUFWL0IsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLGFBQWE7UUFDdkIsUUFBUSxFQUFFLDJCQUEyQjtRQUVyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtRQUMvQyxTQUFTLEVBQUUsQ0FBQyxhQUFhLENBQUM7UUFDMUIsSUFBSSxFQUFFO1lBQ0Ysb0JBQW9CLEVBQUUsT0FBTztTQUNoQzs7S0FDSixDQUFDO0lBeUJPLFdBQUEsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFBO0lBQ3JCLFdBQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO0dBekJaLG1CQUFtQixDQTBEL0I7U0ExRFksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VFVJX0lTX01PQklMRX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1R1aUludGVyYWN0aXZlU3RhdGV9IGZyb20gJ0B0YWlnYS11aS9jb3JlL2VudW1zJztcbmltcG9ydCB7TU9ERV9QUk9WSURFUn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvcHJvdmlkZXJzJztcbmltcG9ydCB7VFVJX01PREV9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Rva2Vucyc7XG5pbXBvcnQge1R1aUJyaWdodG5lc3N9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3R5cGVzJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLXdyYXBwZXInLFxuICAgIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXG4gICAgc3R5bGVVcmxzOiBbJy4vd3JhcHBlci5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgcHJvdmlkZXJzOiBbTU9ERV9QUk9WSURFUl0sXG4gICAgaG9zdDoge1xuICAgICAgICAnKCQuZGF0YS1tb2RlLmF0dHIpJzogJ21vZGUkJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBUdWlXcmFwcGVyQ29tcG9uZW50IHtcbiAgICBASW5wdXQoKVxuICAgIGRpc2FibGVkID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKVxuICAgIHJlYWRPbmx5ID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKVxuICAgIGhvdmVyZWQgPSBmYWxzZTtcblxuICAgIEBJbnB1dCgpXG4gICAgcHJlc3NlZCA9IGZhbHNlO1xuXG4gICAgQElucHV0KClcbiAgICBmb2N1c2VkID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKVxuICAgIGludmFsaWQgPSBmYWxzZTtcblxuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtYXBwZWFyYW5jZScpXG4gICAgYXBwZWFyYW5jZSA9ICcnO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVFVJX0lTX01PQklMRSkgcHJpdmF0ZSByZWFkb25seSBpc01vYmlsZTogYm9vbGVhbixcbiAgICAgICAgQEluamVjdChUVUlfTU9ERSkgcmVhZG9ubHkgbW9kZSQ6IE9ic2VydmFibGU8VHVpQnJpZ2h0bmVzcyB8IG51bGw+LFxuICAgICkge31cblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuX2ludmFsaWQnKVxuICAgIGdldCBjb21wdXRlZEludmFsaWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAhdGhpcy5kaXNhYmxlZCAmJiAhdGhpcy5yZWFkT25seSAmJiB0aGlzLmludmFsaWQ7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5fZm9jdXNlZCcpXG4gICAgZ2V0IGNvbXB1dGVkRm9jdXNlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZm9jdXNlZCAmJiAhdGhpcy5kaXNhYmxlZDtcbiAgICB9XG5cbiAgICBASG9zdEJpbmRpbmcoJ2F0dHIuZGF0YS1zdGF0ZScpXG4gICAgZ2V0IGludGVyYWN0aXZlU3RhdGUoKTogVHVpSW50ZXJhY3RpdmVTdGF0ZSB8IG51bGwge1xuICAgICAgICBpZiAodGhpcy5kaXNhYmxlZCkge1xuICAgICAgICAgICAgcmV0dXJuIFR1aUludGVyYWN0aXZlU3RhdGUuRGlzYWJsZWQ7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5yZWFkT25seSkge1xuICAgICAgICAgICAgcmV0dXJuIFR1aUludGVyYWN0aXZlU3RhdGUuUmVhZG9ubHk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5wcmVzc2VkICYmICF0aGlzLmlzTW9iaWxlKSB7XG4gICAgICAgICAgICByZXR1cm4gVHVpSW50ZXJhY3RpdmVTdGF0ZS5QcmVzc2VkO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuaG92ZXJlZCAmJiAhdGhpcy5pc01vYmlsZSkge1xuICAgICAgICAgICAgcmV0dXJuIFR1aUludGVyYWN0aXZlU3RhdGUuSG92ZXJlZDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbiJdfQ==