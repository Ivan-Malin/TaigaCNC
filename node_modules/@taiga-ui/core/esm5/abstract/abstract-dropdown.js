import { __decorate } from "tslib";
import { AfterViewChecked, ComponentFactoryResolver, ComponentRef, Directive, ElementRef, Injector, Input, OnDestroy, } from '@angular/core';
import { TuiActiveZoneDirective, tuiDefaultProp, TuiPortalService, tuiPure, } from '@taiga-ui/cdk';
import { TuiDropdownBoxComponent } from '@taiga-ui/core/components/dropdown-box';
import { DEFAULT_MAX_HEIGHT, DEFAULT_MIN_HEIGHT } from '@taiga-ui/core/constants';
import { checkFixedPosition } from '@taiga-ui/core/utils/dom';
// @bad TODO: Possibly refactor to make more abstract
var AbstractTuiDropdown = /** @class */ (function () {
    function AbstractTuiDropdown(componentFactoryResolver, injector, portalService, elementRef, activeZone) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.injector = injector;
        this.portalService = portalService;
        this.elementRef = elementRef;
        this.activeZone = activeZone;
        this.content = '';
        this.tuiDropdownHost = null;
        this.minHeight = DEFAULT_MIN_HEIGHT;
        this.maxHeight = DEFAULT_MAX_HEIGHT;
        this.align = 'left';
        this.direction = null;
        this.sided = false;
        this.limitMinWidth = "min" /* Min */;
        this.dropdownBoxRef = null;
    }
    AbstractTuiDropdown.prototype.ngOnDestroy = function () {
        this.closeDropdownBox();
    };
    AbstractTuiDropdown.prototype.ngAfterViewChecked = function () {
        // @awful TODO: This is probably wrong to call both but in TuiHostedDropdown some changes do not propagate otherwise
        if (this.dropdownBoxRef !== null) {
            this.dropdownBoxRef.changeDetectorRef.detectChanges();
            this.dropdownBoxRef.changeDetectorRef.markForCheck();
        }
    };
    Object.defineProperty(AbstractTuiDropdown.prototype, "clientRect", {
        get: function () {
            return this.elementRef.nativeElement.getBoundingClientRect();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTuiDropdown.prototype, "host", {
        get: function () {
            return this.tuiDropdownHost || this.elementRef.nativeElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTuiDropdown.prototype, "fixed", {
        get: function () {
            return checkFixedPosition(this.elementRef.nativeElement);
        },
        enumerable: true,
        configurable: true
    });
    AbstractTuiDropdown.prototype.openDropdownBox = function () {
        if (this.dropdownBoxRef !== null) {
            return;
        }
        var componentFactory = this.componentFactoryResolver.resolveComponentFactory(TuiDropdownBoxComponent);
        this.dropdownBoxRef = this.portalService.add(componentFactory, this.injector);
        this.dropdownBoxRef.changeDetectorRef.detectChanges();
    };
    AbstractTuiDropdown.prototype.closeDropdownBox = function () {
        if (this.dropdownBoxRef === null) {
            return;
        }
        this.portalService.remove(this.dropdownBoxRef);
        this.dropdownBoxRef = null;
    };
    AbstractTuiDropdown.ctorParameters = function () { return [
        { type: ComponentFactoryResolver },
        { type: Injector },
        { type: TuiPortalService },
        { type: ElementRef },
        { type: TuiActiveZoneDirective }
    ]; };
    __decorate([
        Input('tuiDropdownContent'),
        tuiDefaultProp()
    ], AbstractTuiDropdown.prototype, "content", void 0);
    __decorate([
        Input('tuiDropdownHost'),
        tuiDefaultProp()
    ], AbstractTuiDropdown.prototype, "tuiDropdownHost", void 0);
    __decorate([
        Input('tuiDropdownMinHeight'),
        tuiDefaultProp()
    ], AbstractTuiDropdown.prototype, "minHeight", void 0);
    __decorate([
        Input('tuiDropdownMaxHeight'),
        tuiDefaultProp()
    ], AbstractTuiDropdown.prototype, "maxHeight", void 0);
    __decorate([
        Input('tuiDropdownAlign'),
        tuiDefaultProp()
    ], AbstractTuiDropdown.prototype, "align", void 0);
    __decorate([
        Input('tuiDropdownDirection'),
        tuiDefaultProp()
    ], AbstractTuiDropdown.prototype, "direction", void 0);
    __decorate([
        Input('tuiDropdownSided'),
        tuiDefaultProp()
    ], AbstractTuiDropdown.prototype, "sided", void 0);
    __decorate([
        Input('tuiDropdownLimitWidth'),
        tuiDefaultProp()
    ], AbstractTuiDropdown.prototype, "limitMinWidth", void 0);
    __decorate([
        tuiPure
    ], AbstractTuiDropdown.prototype, "fixed", null);
    AbstractTuiDropdown = __decorate([
        Directive()
    ], AbstractTuiDropdown);
    return AbstractTuiDropdown;
}());
export { AbstractTuiDropdown };
//# sourceMappingURL=data:application/json;base64,