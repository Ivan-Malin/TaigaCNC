import { animate, query, stagger, style, transition, trigger, } from '@angular/animations';
import { TUI_ANIMATION_DURATION } from '@taiga-ui/core/constants';
var TRANSITION = TUI_ANIMATION_DURATION + ' ease-in-out';
// @bad TODO: Break into files
export var tuiHeightCollapse = trigger('tuiHeightCollapse', [
    transition(':enter', [style({ height: 0 }), animate(TRANSITION, style({ height: '*' }))]),
    transition(':leave', [style({ height: '*' }), animate(TRANSITION, style({ height: 0 }))]),
]);
export var tuiHeightCollapseList = trigger('tuiHeightCollapseList', [
    transition('* => *', [
        query(':enter', [
            style({ height: 0 }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ height: '*' })),
            ]),
        ], {
            optional: true,
        }),
        query(':leave', [
            style({ height: '*' }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ height: 0 })),
            ]),
        ], {
            optional: true,
        }),
    ]),
]);
export var tuiWidthCollapse = trigger('tuiWidthCollapse', [
    transition(':enter', [style({ width: 0 }), animate(TRANSITION, style({ width: '*' }))]),
    transition(':leave', [style({ width: '*' }), animate(TRANSITION, style({ width: 0 }))]),
]);
export var tuiWidthCollapseList = trigger('tuiWidthCollapseList', [
    transition('* => *', [
        query(':enter', [
            style({ width: 0 }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ width: '*' })),
            ]),
        ], {
            optional: true,
        }),
        query(':leave', [
            style({ width: '*' }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ width: 0 })),
            ]),
        ], {
            optional: true,
        }),
    ]),
]);
export var tuiFadeIn = trigger('tuiFadeIn', [
    transition(':enter', [style({ opacity: 0 }), animate(TRANSITION, style({ opacity: 1 }))]),
    transition(':leave', [style({ opacity: 1 }), animate(TRANSITION, style({ opacity: 0 }))]),
]);
export var tuiFadeInList = trigger('tuiFadeInList', [
    transition('* => *', [
        query(':enter', [
            style({ opacity: 0 }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ opacity: 1 })),
            ]),
        ], {
            optional: true,
        }),
        query(':leave', [
            style({ opacity: 1 }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ opacity: 0 })),
            ]),
        ], {
            optional: true,
        }),
    ]),
]);
export var tuiFadeInTop = trigger('tuiFadeInTop', [
    transition(':enter', [
        style({ transform: 'translateY(-10px)', opacity: 0 }),
        animate(TRANSITION, style({ transform: 'translateY(0)', opacity: 1 })),
    ]),
    transition(':leave', [
        style({ transform: 'translateY(0)', opacity: 1 }),
        animate(TRANSITION, style({ transform: 'translateY(-10px)', opacity: 0 })),
    ]),
]);
export var tuiFadeInBottom = trigger('tuiFadeInBottom', [
    transition(':enter', [
        style({ transform: 'translateY(10px)', opacity: 0 }),
        animate(TRANSITION, style({ transform: 'translateY(0)', opacity: 1 })),
    ]),
    transition(':leave', [
        style({ transform: 'translateY(0)', opacity: 1 }),
        animate(TRANSITION, style({ transform: 'translateY(10px)', opacity: 0 })),
    ]),
]);
export var tuiDropdownAnimation = trigger('tuiDropdownAnimation', [
    transition("* => " + "fadeInTop" /* FadeInTop */, [
        style({ transform: 'translateY(-10px)', opacity: 0 }),
        animate(TRANSITION, style({ transform: 'translateY(0)', opacity: 1 })),
    ]),
    transition("* => " + "fadeInBottom" /* FadeInBottom */, [
        style({ transform: 'translateY(10px)', opacity: 0 }),
        animate(TRANSITION, style({ transform: 'translateY(0)', opacity: 1 })),
    ]),
    transition("fadeInBottom" /* FadeInBottom */ + " => *", [
        style({ transform: 'translateY(0)', opacity: 1 }),
        animate(TRANSITION, style({ transform: 'translateY(10px)', opacity: 0 })),
    ]),
    transition("fadeInTop" /* FadeInTop */ + " => *", [
        style({ transform: 'translateY(0)', opacity: 1 }),
        animate(TRANSITION, style({ transform: 'translateY(-10px)', opacity: 0 })),
    ]),
]);
export var tuiScaleIn = trigger('tuiScaleIn', [
    transition(':enter', [
        style({ transform: 'scale(0)' }),
        animate(TRANSITION, style({ transform: 'scale(1)' })),
    ]),
    transition(':leave', [
        style({ transform: 'scale(1)' }),
        animate(TRANSITION, style({ transform: 'scale(0)' })),
    ]),
]);
export var tuiScaleInList = trigger('tuiScaleInList', [
    transition('* => *', [
        query(':enter', [
            style({ transform: 'scale(0)' }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ transform: 'scale(1)' })),
            ]),
        ], { optional: true }),
        query(':leave', [
            style({ transform: 'scale(1)' }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ transform: 'scale(0)' })),
            ]),
        ], { optional: true }),
    ]),
]);
export var tuiSlideIn = trigger('tuiSlideIn', [
    transition("* => left", [
        style({ transform: 'translateX(-100%)' }),
        animate(TRANSITION, style({ transform: 'translateX(0)' })),
    ]),
    transition('left => *', [
        style({ transform: 'translateX(0)' }),
        animate(TRANSITION, style({ transform: 'translateX(-100%)' })),
    ]),
    transition('* => right', [
        style({ transform: 'translateX(100%)' }),
        animate(TRANSITION, style({ transform: 'translateX(0)' })),
    ]),
    transition('right => *', [
        style({ transform: 'translateX(0)' }),
        animate(TRANSITION, style({ transform: 'translateX(100%)' })),
    ]),
]);
export var tuiSlideInLeft = trigger('tuiSlideInLeft', [
    transition(':enter', [
        style({ transform: 'translateX(-100%)' }),
        animate(TRANSITION, style({ transform: 'translateX(0)' })),
    ]),
    transition(':leave', [
        style({ transform: 'translateX(0)' }),
        animate(TRANSITION, style({ transform: 'translateX(-100%)' })),
    ]),
]);
export var tuiSlideInLeftList = trigger('tuiSlideInLeftList', [
    transition('* => *', [
        query(':enter', [
            style({ transform: 'translateX(-100%)' }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ transform: 'translateX(0)' })),
            ]),
        ], { optional: true }),
        query(':leave', [
            style({ transform: 'translateX(0)' }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ transform: 'translateX(-100%)' })),
            ]),
        ], { optional: true }),
    ]),
]);
export var tuiSlideInRight = trigger('tuiSlideInRight', [
    transition(':enter', [
        style({ transform: 'translateX(100%)' }),
        animate(TRANSITION, style({ transform: 'translateX(0)' })),
    ]),
    transition(':leave', [
        style({ transform: 'translateX(0)' }),
        animate(TRANSITION, style({ transform: 'translateX(100%)' })),
    ]),
]);
export var tuiSlideInRightList = trigger('tuiSlideInRightList', [
    transition('* => *', [
        query(':enter', [
            style({ transform: 'translateX(100%)' }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ transform: 'translateX(0)' })),
            ]),
        ], { optional: true }),
        query(':leave', [
            style({ transform: 'translateX(0)' }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ transform: 'translateX(100%)' })),
            ]),
        ], { optional: true }),
    ]),
]);
export var tuiSlideInTop = trigger('tuiSlideInTop', [
    transition(':enter', [
        style({ transform: 'translate3d(0,{{start}},0)' }),
        animate(TRANSITION, style({ transform: 'translate3d(0,{{end}},0)' })),
    ], { params: { end: 0, start: '100%' } }),
    transition(':leave', [
        style({ transform: 'translate3d(0,{{end}},0)' }),
        animate(TRANSITION, style({ transform: 'translate3d(0,{{start}},0)' })),
    ], { params: { end: 0, start: '100%' } }),
]);
export var tuiSlideInTopList = trigger('tuiSlideInTopList', [
    transition('* => *', [
        query(':enter', [
            style({ transform: 'translateY(100%)' }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ transform: 'translateY(0)' })),
            ]),
        ], { optional: true }),
        query(':leave', [
            style({ transform: 'translateY(0)' }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ transform: 'translateY(100%)' })),
            ]),
        ], { optional: true }),
    ]),
]);
export var tuiSlideInBottom = trigger('tuiSlideInBottom', [
    transition(':enter', [
        style({ transform: 'translateY(-100%)' }),
        animate(TRANSITION, style({ transform: 'translateY(0)' })),
    ]),
    transition(':leave', [
        style({ transform: 'translateY(0)' }),
        animate(TRANSITION, style({ transform: 'translateY(-100%)' })),
    ]),
]);
export var tuiSlideInBottomList = trigger('tuiSlideInBottomList', [
    transition('* => *', [
        query(':enter', [
            style({ transform: 'translateY(-100%)' }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ transform: 'translateY(0)' })),
            ]),
        ], { optional: true }),
        query(':leave', [
            style({ transform: 'translateY(0)' }),
            stagger(TUI_ANIMATION_DURATION, [
                animate(TRANSITION, style({ transform: 'translateY(-100%)' })),
            ]),
        ], { optional: true }),
    ]),
]);
//# sourceMappingURL=data:application/json;base64,