import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, } from '@angular/core';
import { ALWAYS_FALSE_HANDLER, nullableSame, TUI_FIRST_DAY, TUI_LAST_DAY, tuiDefaultProp, TuiMonth, } from '@taiga-ui/cdk';
import { TUI_DEFAULT_MARKER_HANDLER } from '@taiga-ui/core/constants';
// @dynamic
var TuiCalendarComponent = /** @class */ (function () {
    function TuiCalendarComponent() {
        this.month = TuiMonth.currentLocal();
        this.value = null;
        this.disabledItemHandler = ALWAYS_FALSE_HANDLER;
        this.min = TUI_FIRST_DAY;
        this.max = TUI_LAST_DAY;
        this.minViewedMonth = TUI_FIRST_DAY;
        this.maxViewedMonth = TUI_LAST_DAY;
        this.hoveredItem = null;
        this.showAdjacent = true;
        this.markerHandler = TUI_DEFAULT_MARKER_HANDLER;
        this.dayClick = new EventEmitter();
        this.monthChange = new EventEmitter();
        this.hoveredItemChange = new EventEmitter();
        this.year = null;
        this.disabledItemHandlerMapper = function (disabledItemHandler, min, max) { return function (item) {
            return item.dayBefore(min) || item.dayAfter(max) || disabledItemHandler(item);
        }; };
    }
    Object.defineProperty(TuiCalendarComponent.prototype, "computedMonth", {
        get: function () {
            var _a = this, month = _a.month, computedMinViewedMonth = _a.computedMinViewedMonth, computedMaxViewedMonth = _a.computedMaxViewedMonth;
            if (month.monthBefore(computedMinViewedMonth)) {
                return computedMinViewedMonth;
            }
            if (month.monthAfter(computedMaxViewedMonth)) {
                return computedMaxViewedMonth;
            }
            return month;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiCalendarComponent.prototype, "computedMinViewedMonth", {
        get: function () {
            return this.minViewedMonth.monthSameOrAfter(this.min)
                ? this.minViewedMonth
                : this.min;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiCalendarComponent.prototype, "computedMaxViewedMonth", {
        get: function () {
            return this.maxViewedMonth.monthSameOrBefore(this.max)
                ? this.maxViewedMonth
                : this.max;
        },
        enumerable: true,
        configurable: true
    });
    TuiCalendarComponent.prototype.onPaginationYearClick = function (year) {
        this.year = year;
    };
    TuiCalendarComponent.prototype.onPickerYearClick = function (_a) {
        var year = _a.year;
        this.year = null;
        this.updateViewedMonth(new TuiMonth(year, this.computedMonth.month));
    };
    TuiCalendarComponent.prototype.onPaginationValueChange = function (month) {
        this.updateViewedMonth(month);
    };
    TuiCalendarComponent.prototype.onDayClick = function (day) {
        this.dayClick.emit(day);
    };
    TuiCalendarComponent.prototype.onHoveredItemChange = function (day) {
        this.updateHoveredDay(day);
    };
    TuiCalendarComponent.prototype.updateViewedMonth = function (month) {
        if (this.month.monthSame(month)) {
            return;
        }
        this.month = month;
        this.monthChange.emit(month);
    };
    TuiCalendarComponent.prototype.updateHoveredDay = function (day) {
        if (nullableSame(this.hoveredItem, day, function (a, b) { return a.daySame(b); })) {
            return;
        }
        this.hoveredItem = day;
        this.hoveredItemChange.emit(day);
    };
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiCalendarComponent.prototype, "month", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiCalendarComponent.prototype, "value", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiCalendarComponent.prototype, "disabledItemHandler", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiCalendarComponent.prototype, "min", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiCalendarComponent.prototype, "max", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiCalendarComponent.prototype, "minViewedMonth", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiCalendarComponent.prototype, "maxViewedMonth", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiCalendarComponent.prototype, "hoveredItem", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiCalendarComponent.prototype, "showAdjacent", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiCalendarComponent.prototype, "markerHandler", void 0);
    __decorate([
        Output()
    ], TuiCalendarComponent.prototype, "dayClick", void 0);
    __decorate([
        Output()
    ], TuiCalendarComponent.prototype, "monthChange", void 0);
    __decorate([
        Output()
    ], TuiCalendarComponent.prototype, "hoveredItemChange", void 0);
    TuiCalendarComponent = __decorate([
        Component({
            selector: 'tui-calendar',
            template: "<tui-scrollbar\n    *ngIf=\"year; else calendar\"\n    class=\"scrollbar\"\n    automation-id=\"tui-calendar__scrollbar\"\n>\n    <tui-primitive-year-picker\n        automation-id=\"tui-calendar__year\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [initialItem]=\"year\"\n        [value]=\"value\"\n        (yearClick)=\"onPickerYearClick($event)\"\n    ></tui-primitive-year-picker>\n</tui-scrollbar>\n<ng-template #calendar>\n    <tui-primitive-year-month-pagination\n        class=\"pagination\"\n        automation-id=\"tui-calendar__pagination\"\n        [min]=\"computedMinViewedMonth\"\n        [max]=\"computedMaxViewedMonth\"\n        [value]=\"computedMonth\"\n        (valueChange)=\"onPaginationValueChange($event)\"\n        (yearClick)=\"onPaginationYearClick($event)\"\n    ></tui-primitive-year-month-pagination>\n    <tui-primitive-calendar\n        automation-id=\"tui-calendar__calendar\"\n        [showAdjacent]=\"showAdjacent\"\n        [value]=\"value\"\n        [month]=\"computedMonth\"\n        [disabledItemHandler]=\"disabledItemHandler | tuiMapper : disabledItemHandlerMapper : min : max\"\n        [markerHandler]=\"markerHandler\"\n        [hoveredItem]=\"hoveredItem\"\n        (hoveredItemChange)=\"onHoveredItemChange($event)\"\n        (dayClick)=\"onDayClick($event)\"\n    ></tui-primitive-calendar>\n</ng-template>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [":host{display:block;height:292px;width:252px;padding:16px 18px;box-sizing:content-box}.scrollbar{height:292px;width:270px}.pagination{margin-bottom:16px}"]
        })
    ], TuiCalendarComponent);
    return TuiCalendarComponent;
}());
export { TuiCalendarComponent };
//# sourceMappingURL=data:application/json;base64,