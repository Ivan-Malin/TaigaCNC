import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, } from '@angular/core';
import { TuiDestroyService } from '@taiga-ui/cdk';
import { tuiFadeIn } from '@taiga-ui/core/animations';
import { TuiHintDirective } from '@taiga-ui/core/directives/hint';
import { TuiHintService } from '@taiga-ui/core/services';
import { Observable } from 'rxjs';
import { skip, takeUntil } from 'rxjs/operators';
var TuiHintsHostComponent = /** @class */ (function () {
    function TuiHintsHostComponent(elementRef, hints$, changeDetectorRef, destroy$) {
        var _this = this;
        this.elementRef = elementRef;
        this.changeDetectorRef = changeDetectorRef;
        /**
         * @awful TODO: remove hints variable
         * and use hints$ after resolving issue with Change Detection
         */
        this.hints = [];
        hints$.pipe(skip(1), takeUntil(destroy$)).subscribe(function (hints) {
            _this.hints = hints;
            _this.changeDetectorRef.detectChanges();
        });
    }
    Object.defineProperty(TuiHintsHostComponent.prototype, "clientRect", {
        get: function () {
            return this.elementRef.nativeElement.getBoundingClientRect();
        },
        enumerable: true,
        configurable: true
    });
    TuiHintsHostComponent.prototype.onHovered = function (hovered, directive) {
        if (directive instanceof TuiHintDirective) {
            directive.componentHovered$.next(hovered);
        }
    };
    TuiHintsHostComponent.ctorParameters = function () { return [
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
        { type: TuiHintService, decorators: [{ type: Inject, args: [TuiHintService,] }] },
        { type: ChangeDetectorRef, decorators: [{ type: Inject, args: [ChangeDetectorRef,] }] },
        { type: Observable, decorators: [{ type: Inject, args: [TuiDestroyService,] }] }
    ]; };
    TuiHintsHostComponent = __decorate([
        Component({
            selector: 'tui-hints-host',
            template: "<tui-hint-box\n    *ngFor=\"let hint of hints\"\n    role=\"tooltip\"\n    [attr.id]=\"hint.id\"\n    [@tuiFadeIn]\n    [mode]=\"hint.mode\"\n    [direction]=\"hint.direction\"\n    [hint]=\"hint\"\n    (tuiHoveredChange)=\"onHovered($event, hint)\"\n>\n    <div polymorpheus-outlet [content]=\"hint.content\">\n        <ng-template let-text>\n            <span class=\"text\">{{text}}</span>\n        </ng-template>\n    </div>\n</tui-hint-box>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            animations: [tuiFadeIn],
            providers: [TuiDestroyService],
            host: {
                'aria-live': 'polite',
            },
            styles: [":host{position:fixed;bottom:0;left:0;width:100%;height:0}.text{white-space:pre-wrap}"]
        }),
        __param(0, Inject(ElementRef)),
        __param(1, Inject(TuiHintService)),
        __param(2, Inject(ChangeDetectorRef)),
        __param(3, Inject(TuiDestroyService))
    ], TuiHintsHostComponent);
    return TuiHintsHostComponent;
}());
export { TuiHintsHostComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGludHMtaG9zdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS9jb21wb25lbnRzL2hpbnRzLWhvc3QvIiwic291cmNlcyI6WyJoaW50cy1ob3N0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixpQkFBaUIsRUFDakIsU0FBUyxFQUNULFVBQVUsRUFDVixNQUFNLEdBQ1QsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWhELE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUNwRCxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNoRSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUNoQyxPQUFPLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBYS9DO0lBT0ksK0JBQ3lDLFVBQW1DLEVBQ2hELE1BQXNCLEVBQ0YsaUJBQW9DLEVBQ3JELFFBQTBCO1FBSnpELGlCQVVDO1FBVHdDLGVBQVUsR0FBVixVQUFVLENBQXlCO1FBRTVCLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFUcEY7OztXQUdHO1FBQ0gsVUFBSyxHQUFtQyxFQUFFLENBQUM7UUFRdkMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFVBQUEsS0FBSztZQUNyRCxLQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztZQUNuQixLQUFJLENBQUMsaUJBQWlCLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDM0MsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsc0JBQUksNkNBQVU7YUFBZDtZQUNJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMscUJBQXFCLEVBQUUsQ0FBQztRQUNqRSxDQUFDOzs7T0FBQTtJQUVELHlDQUFTLEdBQVQsVUFBVSxPQUFnQixFQUFFLFNBQTBCO1FBQ2xELElBQUksU0FBUyxZQUFZLGdCQUFnQixFQUFFO1lBQ3ZDLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDN0M7SUFDTCxDQUFDOztnQkFuQm9ELFVBQVUsdUJBQTFELE1BQU0sU0FBQyxVQUFVO2dCQUNjLGNBQWMsdUJBQTdDLE1BQU0sU0FBQyxjQUFjO2dCQUN5QyxpQkFBaUIsdUJBQS9FLE1BQU0sU0FBQyxpQkFBaUI7Z0JBQ1ksVUFBVSx1QkFBOUMsTUFBTSxTQUFDLGlCQUFpQjs7SUFYcEIscUJBQXFCO1FBWGpDLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxnQkFBZ0I7WUFDMUIsMmNBQXlDO1lBRXpDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1lBQy9DLFVBQVUsRUFBRSxDQUFDLFNBQVMsQ0FBQztZQUN2QixTQUFTLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztZQUM5QixJQUFJLEVBQUU7Z0JBQ0YsV0FBVyxFQUFFLFFBQVE7YUFDeEI7O1NBQ0osQ0FBQztRQVNPLFdBQUEsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFBO1FBQ2xCLFdBQUEsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFBO1FBQ3RCLFdBQUEsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUE7UUFDekIsV0FBQSxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQTtPQVhyQixxQkFBcUIsQ0E0QmpDO0lBQUQsNEJBQUM7Q0FBQSxBQTVCRCxJQTRCQztTQTVCWSxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENoYW5nZURldGVjdG9yUmVmLFxuICAgIENvbXBvbmVudCxcbiAgICBFbGVtZW50UmVmLFxuICAgIEluamVjdCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aURlc3Ryb3lTZXJ2aWNlfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7QWJzdHJhY3RUdWlIaW50fSBmcm9tICdAdGFpZ2EtdWkvY29yZS9hYnN0cmFjdCc7XG5pbXBvcnQge3R1aUZhZGVJbn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvYW5pbWF0aW9ucyc7XG5pbXBvcnQge1R1aUhpbnREaXJlY3RpdmV9IGZyb20gJ0B0YWlnYS11aS9jb3JlL2RpcmVjdGl2ZXMvaGludCc7XG5pbXBvcnQge1R1aUhpbnRTZXJ2aWNlfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9zZXJ2aWNlcyc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtza2lwLCB0YWtlVW50aWx9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktaGludHMtaG9zdCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2hpbnRzLWhvc3QudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vaGludHMtaG9zdC5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgYW5pbWF0aW9uczogW3R1aUZhZGVJbl0sXG4gICAgcHJvdmlkZXJzOiBbVHVpRGVzdHJveVNlcnZpY2VdLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ2FyaWEtbGl2ZSc6ICdwb2xpdGUnLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aUhpbnRzSG9zdENvbXBvbmVudCB7XG4gICAgLyoqXG4gICAgICogQGF3ZnVsIFRPRE86IHJlbW92ZSBoaW50cyB2YXJpYWJsZVxuICAgICAqIGFuZCB1c2UgaGludHMkIGFmdGVyIHJlc29sdmluZyBpc3N1ZSB3aXRoIENoYW5nZSBEZXRlY3Rpb25cbiAgICAgKi9cbiAgICBoaW50czogUmVhZG9ubHlBcnJheTxBYnN0cmFjdFR1aUhpbnQ+ID0gW107XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChFbGVtZW50UmVmKSBwcml2YXRlIHJlYWRvbmx5IGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgICAgICBASW5qZWN0KFR1aUhpbnRTZXJ2aWNlKSBoaW50cyQ6IFR1aUhpbnRTZXJ2aWNlLFxuICAgICAgICBASW5qZWN0KENoYW5nZURldGVjdG9yUmVmKSBwcml2YXRlIHJlYWRvbmx5IGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICAgICAgQEluamVjdChUdWlEZXN0cm95U2VydmljZSkgZGVzdHJveSQ6IE9ic2VydmFibGU8dm9pZD4sXG4gICAgKSB7XG4gICAgICAgIGhpbnRzJC5waXBlKHNraXAoMSksIHRha2VVbnRpbChkZXN0cm95JCkpLnN1YnNjcmliZShoaW50cyA9PiB7XG4gICAgICAgICAgICB0aGlzLmhpbnRzID0gaGludHM7XG4gICAgICAgICAgICB0aGlzLmNoYW5nZURldGVjdG9yUmVmLmRldGVjdENoYW5nZXMoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZ2V0IGNsaWVudFJlY3QoKTogQ2xpZW50UmVjdCB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICB9XG5cbiAgICBvbkhvdmVyZWQoaG92ZXJlZDogYm9vbGVhbiwgZGlyZWN0aXZlOiBBYnN0cmFjdFR1aUhpbnQpIHtcbiAgICAgICAgaWYgKGRpcmVjdGl2ZSBpbnN0YW5jZW9mIFR1aUhpbnREaXJlY3RpdmUpIHtcbiAgICAgICAgICAgIGRpcmVjdGl2ZS5jb21wb25lbnRIb3ZlcmVkJC5uZXh0KGhvdmVyZWQpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19