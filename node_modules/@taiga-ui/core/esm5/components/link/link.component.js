import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, forwardRef, HostBinding, Inject, Input, Optional, } from '@angular/core';
import { RouterLinkActive } from '@angular/router';
import { isNativeFocused, TUI_FOCUSABLE_ITEM_ACCESSOR, tuiDefaultProp, TuiDestroyService, TuiFocusableElementAccessor, TuiFocusVisibleService, TuiNativeFocusableElement, } from '@taiga-ui/cdk';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_MODE } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
// @bad TODO: Think about extending Interactive
var TuiLinkComponent = /** @class */ (function () {
    function TuiLinkComponent(elementRef, mode$, routerLinkActive, focusVisible$) {
        var _this = this;
        this.elementRef = elementRef;
        this.mode$ = mode$;
        this.routerLinkActive = routerLinkActive;
        this.pseudo = false;
        this.icon = null;
        this.iconAlign = 'right';
        this.iconRotated = false;
        this.mode = null;
        this.focusVisible = false;
        focusVisible$.subscribe(function (visible) {
            _this.focusVisible = visible;
        });
    }
    TuiLinkComponent_1 = TuiLinkComponent;
    Object.defineProperty(TuiLinkComponent.prototype, "nativeFocusableElement", {
        get: function () {
            return this.elementRef.nativeElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiLinkComponent.prototype, "focused", {
        get: function () {
            return isNativeFocused(this.nativeFocusableElement);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiLinkComponent.prototype, "active", {
        get: function () {
            return !!this.routerLinkActive && this.routerLinkActive.isActive;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiLinkComponent.prototype, "hasIcon", {
        get: function () {
            return this.icon !== null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiLinkComponent.prototype, "iconAlignLeft", {
        get: function () {
            return this.hasIcon && this.iconAlign === 'left';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiLinkComponent.prototype, "iconAlignRight", {
        get: function () {
            return this.hasIcon && this.iconAlign === 'right';
        },
        enumerable: true,
        configurable: true
    });
    var TuiLinkComponent_1;
    TuiLinkComponent.ctorParameters = function () { return [
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
        { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] },
        { type: RouterLinkActive, decorators: [{ type: Optional }, { type: Inject, args: [RouterLinkActive,] }] },
        { type: TuiFocusVisibleService, decorators: [{ type: Inject, args: [TuiFocusVisibleService,] }] }
    ]; };
    __decorate([
        Input(),
        HostBinding('class._pseudo'),
        tuiDefaultProp()
    ], TuiLinkComponent.prototype, "pseudo", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiLinkComponent.prototype, "icon", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiLinkComponent.prototype, "iconAlign", void 0);
    __decorate([
        Input(),
        HostBinding('class._icon-rotated'),
        tuiDefaultProp()
    ], TuiLinkComponent.prototype, "iconRotated", void 0);
    __decorate([
        Input(),
        HostBinding('attr.data-mode'),
        tuiDefaultProp()
    ], TuiLinkComponent.prototype, "mode", void 0);
    __decorate([
        HostBinding('class._focus-visible')
    ], TuiLinkComponent.prototype, "focusVisible", void 0);
    __decorate([
        HostBinding('class._active')
    ], TuiLinkComponent.prototype, "active", null);
    TuiLinkComponent = TuiLinkComponent_1 = __decorate([
        Component({
            selector: 'a[tuiLink], button[tuiLink]',
            template: "<tui-svg *ngIf=\"iconAlignLeft\" class=\"icon icon_left\" [src]=\"icon\"></tui-svg>\n<span class=\"content\">\n    <ng-content></ng-content>\n</span>\n<tui-svg *ngIf=\"iconAlignRight\" class=\"icon icon_right\" [src]=\"icon\"></tui-svg>\n",
            providers: [
                {
                    provide: TUI_FOCUSABLE_ITEM_ACCESSOR,
                    useExisting: forwardRef(function () { return TuiLinkComponent_1; }),
                },
                TuiFocusVisibleService,
                TuiDestroyService,
                MODE_PROVIDER,
            ],
            changeDetection: ChangeDetectionStrategy.OnPush,
            exportAs: 'tuiLink',
            host: {
                '($.data-mode.attr)': 'mode$',
            },
            styles: [":host{-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:0 0;font-size:inherit;line-height:inherit;transition-property:color;transition-duration:.3s;transition-timing-function:ease-in-out;color:var(--tui-link);text-decoration:none;text-align:left;text-transform:inherit;font-weight:inherit;cursor:pointer;outline:0}:host:hover{color:var(--tui-link-hover)}:host[data-mode=onLight]{color:var(--tui-text-03)}:host[data-mode=onLight]._active,:host[data-mode=onLight]:hover{color:var(--tui-text-01)}:host[data-mode=onLight]._pseudo{color:var(--tui-text-01)}:host[data-mode=onLight]._pseudo._active,:host[data-mode=onLight]._pseudo:hover{color:var(--tui-text-03)}:host[data-mode=onLight][data-mode=negative]{color:var(--tui-negative-night)}:host[data-mode=onLight][data-mode=negative]._active,:host[data-mode=onLight][data-mode=negative]:active,:host[data-mode=onLight][data-mode=negative]:hover{color:var(--tui-negative-night-hover)}:host[data-mode=onDark]{color:var(--tui-text-03-night)}:host[data-mode=onDark]._active,:host[data-mode=onDark]:active,:host[data-mode=onDark]:hover{color:var(--tui-text-01-night)}:host[data-mode=onDark]._pseudo{color:var(--tui-text-01-night)}:host[data-mode=onDark]._pseudo._active,:host[data-mode=onDark]._pseudo:active,:host[data-mode=onDark]._pseudo:hover{color:var(--tui-text-03-night)}:host[data-mode=onDark][data-mode=positive]{color:var(--tui-positive-night)}:host[data-mode=onDark][data-mode=positive]._active,:host[data-mode=onDark][data-mode=positive]:active,:host[data-mode=onDark][data-mode=positive]:hover{color:var(--tui-positive-night-hover)}:host[data-mode=negative]{color:var(--tui-negative)}:host[data-mode=negative]:hover{color:var(--tui-negative-hover)}:host[data-mode=positive]{color:var(--tui-positive)}:host[data-mode=positive]:hover{color:var(--tui-positive-hover)}.content{display:inline-block}:host._focus-visible .content{background:var(--tui-selection)}:host[data-mode=onLight]._focus-visible .content{background:var(--tui-text-01);color:var(--tui-base-01)}:host[data-mode=onDark]._focus-visible .content{background:var(--tui-base-01);color:var(--tui-text-01)}:host[data-mode=positive]._focus-visible .content{background:var(--tui-success-bg)}:host[data-mode=negative]._focus-visible .content{background:var(--tui-error-bg)}:host._pseudo .content{padding-bottom:.15em;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}.icon{transition-property:transform;transition-duration:.3s;transition-timing-function:ease-in-out;margin-top:-2px;opacity:.8}.icon_left{margin-right:4px}.icon_right{margin-left:4px}:host._hovered .icon{opacity:1}:host._icon-rotated .icon{transform:rotate(180deg)}"]
        }),
        __param(0, Inject(ElementRef)),
        __param(1, Inject(TUI_MODE)),
        __param(2, Optional()),
        __param(2, Inject(RouterLinkActive)),
        __param(3, Inject(TuiFocusVisibleService))
    ], TuiLinkComponent);
    return TuiLinkComponent;
}());
export { TuiLinkComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGluay5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS9jb21wb25lbnRzL2xpbmsvIiwic291cmNlcyI6WyJsaW5rLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsVUFBVSxFQUNWLFVBQVUsRUFDVixXQUFXLEVBQ1gsTUFBTSxFQUNOLEtBQUssRUFDTCxRQUFRLEdBQ1gsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDakQsT0FBTyxFQUNILGVBQWUsRUFDZiwyQkFBMkIsRUFDM0IsY0FBYyxFQUNkLGlCQUFpQixFQUNqQiwyQkFBMkIsRUFDM0Isc0JBQXNCLEVBQ3RCLHlCQUF5QixHQUM1QixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRS9DLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFFaEMsK0NBQStDO0FBb0IvQztJQTJCSSwwQkFFcUIsVUFBaUQsRUFDdkMsS0FBdUMsRUFHakQsZ0JBQXlDLEVBRTFELGFBQXFDO1FBUnpDLGlCQWFDO1FBWG9CLGVBQVUsR0FBVixVQUFVLENBQXVDO1FBQ3ZDLFVBQUssR0FBTCxLQUFLLENBQWtDO1FBR2pELHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBeUI7UUE3QjlELFdBQU0sR0FBRyxLQUFLLENBQUM7UUFJZixTQUFJLEdBQWtCLElBQUksQ0FBQztRQUkzQixjQUFTLEdBQTJCLE9BQU8sQ0FBQztRQUs1QyxnQkFBVyxHQUFHLEtBQUssQ0FBQztRQUtwQixTQUFJLEdBQXVCLElBQUksQ0FBQztRQUdoQyxpQkFBWSxHQUFHLEtBQUssQ0FBQztRQVlqQixhQUFhLENBQUMs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bmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEVsZW1lbnRSZWYsXG4gICAgZm9yd2FyZFJlZixcbiAgICBIb3N0QmluZGluZyxcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG4gICAgT3B0aW9uYWwsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtSb3V0ZXJMaW5rQWN0aXZlfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHtcbiAgICBpc05hdGl2ZUZvY3VzZWQsXG4gICAgVFVJX0ZPQ1VTQUJMRV9JVEVNX0FDQ0VTU09SLFxuICAgIHR1aURlZmF1bHRQcm9wLFxuICAgIFR1aURlc3Ryb3lTZXJ2aWNlLFxuICAgIFR1aUZvY3VzYWJsZUVsZW1lbnRBY2Nlc3NvcixcbiAgICBUdWlGb2N1c1Zpc2libGVTZXJ2aWNlLFxuICAgIFR1aU5hdGl2ZUZvY3VzYWJsZUVsZW1lbnQsXG59IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlMaW5rTW9kZX0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvZW51bXMnO1xuaW1wb3J0IHtNT0RFX1BST1ZJREVSfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9wcm92aWRlcnMnO1xuaW1wb3J0IHtUVUlfTU9ERX0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdG9rZW5zJztcbmltcG9ydCB7VHVpQnJpZ2h0bmVzcywgVHVpSG9yaXpvbnRhbERpcmVjdGlvbn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcblxuLy8gQGJhZCBUT0RPOiBUaGluayBhYm91dCBleHRlbmRpbmcgSW50ZXJhY3RpdmVcbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYVt0dWlMaW5rXSwgYnV0dG9uW3R1aUxpbmtdJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbGluay50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9saW5rLnN0eWxlLmxlc3MnXSxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogVFVJX0ZPQ1VTQUJMRV9JVEVNX0FDQ0VTU09SLFxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVHVpTGlua0NvbXBvbmVudCksXG4gICAgICAgIH0sXG4gICAgICAgIFR1aUZvY3VzVmlzaWJsZVNlcnZpY2UsXG4gICAgICAgIFR1aURlc3Ryb3lTZXJ2aWNlLFxuICAgICAgICBNT0RFX1BST1ZJREVSLFxuICAgIF0sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgZXhwb3J0QXM6ICd0dWlMaW5rJyxcbiAgICBob3N0OiB7XG4gICAgICAgICcoJC5kYXRhLW1vZGUuYXR0ciknOiAnbW9kZSQnLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aUxpbmtDb21wb25lbnQgaW1wbGVtZW50cyBUdWlGb2N1c2FibGVFbGVtZW50QWNjZXNzb3Ige1xuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5fcHNldWRvJylcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIHBzZXVkbyA9IGZhbHNlO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGljb246IHN0cmluZyB8IG51bGwgPSBudWxsO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGljb25BbGlnbjogVHVpSG9yaXpvbnRhbERpcmVjdGlvbiA9ICdyaWdodCc7XG5cbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuX2ljb24tcm90YXRlZCcpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBpY29uUm90YXRlZCA9IGZhbHNlO1xuXG4gICAgQElucHV0KClcbiAgICBASG9zdEJpbmRpbmcoJ2F0dHIuZGF0YS1tb2RlJylcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIG1vZGU6IFR1aUxpbmtNb2RlIHwgbnVsbCA9IG51bGw7XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLl9mb2N1cy12aXNpYmxlJylcbiAgICBmb2N1c1Zpc2libGUgPSBmYWxzZTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KEVsZW1lbnRSZWYpXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgZWxlbWVudFJlZjogRWxlbWVudFJlZjxUdWlOYXRpdmVGb2N1c2FibGVFbGVtZW50PixcbiAgICAgICAgQEluamVjdChUVUlfTU9ERSkgcmVhZG9ubHkgbW9kZSQ6IE9ic2VydmFibGU8VHVpQnJpZ2h0bmVzcyB8IG51bGw+LFxuICAgICAgICBAT3B0aW9uYWwoKVxuICAgICAgICBASW5qZWN0KFJvdXRlckxpbmtBY3RpdmUpXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgcm91dGVyTGlua0FjdGl2ZTogUm91dGVyTGlua0FjdGl2ZSB8IG51bGwsXG4gICAgICAgIEBJbmplY3QoVHVpRm9jdXNWaXNpYmxlU2VydmljZSlcbiAgICAgICAgZm9jdXNWaXNpYmxlJDogVHVpRm9jdXNWaXNpYmxlU2VydmljZSxcbiAgICApIHtcbiAgICAgICAgZm9jdXNWaXNpYmxlJC5zdWJzY3JpYmUodmlzaWJsZSA9PiB7XG4gICAgICAgICAgICB0aGlzLmZvY3VzVmlzaWJsZSA9IHZpc2libGU7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGdldCBuYXRpdmVGb2N1c2FibGVFbGVtZW50KCk6IFR1aU5hdGl2ZUZvY3VzYWJsZUVsZW1lbnQge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgfVxuXG4gICAgZ2V0IGZvY3VzZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiBpc05hdGl2ZUZvY3VzZWQodGhpcy5uYXRpdmVGb2N1c2FibGVFbGVtZW50KTtcbiAgICB9XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLl9hY3RpdmUnKVxuICAgIGdldCBhY3RpdmUoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAhIXRoaXMucm91dGVyTGlua0FjdGl2ZSAmJiB0aGlzLnJvdXRlckxpbmtBY3RpdmUuaXNBY3RpdmU7XG4gICAgfVxuXG4gICAgZ2V0IGhhc0ljb24oKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmljb24gIT09IG51bGw7XG4gICAgfVxuXG4gICAgZ2V0IGljb25BbGlnbkxlZnQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmhhc0ljb24gJiYgdGhpcy5pY29uQWxpZ24gPT09ICdsZWZ0JztcbiAgICB9XG5cbiAgICBnZXQgaWNvbkFsaWduUmlnaHQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmhhc0ljb24gJiYgdGhpcy5pY29uQWxpZ24gPT09ICdyaWdodCc7XG4gICAgfVxufVxuIl19