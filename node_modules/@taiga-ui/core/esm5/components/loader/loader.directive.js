import { __decorate, __param, __read } from "tslib";
import { Directive, ElementRef, Inject, NgZone } from '@angular/core';
import { ANIMATION_FRAME, USER_AGENT } from '@ng-web-apis/common';
import { isEdgeOlderThan, isIE, TuiDestroyService, tuiZonefree } from '@taiga-ui/cdk';
import { Observable } from 'rxjs';
import { pairwise, takeUntil } from 'rxjs/operators';
var PERIMETER = 314;
var COEFFICIENT = 1.5;
var TuiLoaderDirective = /** @class */ (function () {
    function TuiLoaderDirective(animationFrame$, ngZone, destroy$, elementRef, userAgent) {
        var _this = this;
        this.elementRef = elementRef;
        this.strokeDasharray = PERIMETER;
        this.strokeDashoffset = 0;
        if (!isEdgeOlderThan(17, userAgent) && !isIE(userAgent)) {
            return;
        }
        animationFrame$
            .pipe(tuiZonefree(ngZone), pairwise(), takeUntil(destroy$))
            .subscribe(function (_a) {
            var _b = __read(_a, 2), cur = _b[0], prev = _b[1];
            _this.animate(prev - cur);
        });
    }
    TuiLoaderDirective.prototype.animate = function (delta) {
        if (this.strokeDasharray < 0) {
            this.strokeDasharray = PERIMETER * 2;
            this.strokeDashoffset = 0;
        }
        var strokeDasharray = Math.abs(this.strokeDasharray - PERIMETER);
        var fps = 1000 / delta;
        var offsetStep = 1 + Math.floor(this.strokeDasharray / PERIMETER);
        var style = this.elementRef.nativeElement.style;
        style.strokeDashoffset = this.strokeDashoffset.toString();
        style.strokeDasharray = PERIMETER - strokeDasharray + ' ' + strokeDasharray;
        this.strokeDasharray -= PERIMETER / COEFFICIENT / fps;
        this.strokeDashoffset += (offsetStep * PERIMETER) / COEFFICIENT / fps;
        // this.elementRef.nativeElement.parentElement!.style.animation = 'none';
    };
    TuiLoaderDirective.ctorParameters = function () { return [
        { type: Observable, decorators: [{ type: Inject, args: [ANIMATION_FRAME,] }] },
        { type: NgZone, decorators: [{ type: Inject, args: [NgZone,] }] },
        { type: Observable, decorators: [{ type: Inject, args: [TuiDestroyService,] }] },
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
        { type: String, decorators: [{ type: Inject, args: [USER_AGENT,] }] }
    ]; };
    TuiLoaderDirective = __decorate([
        Directive({
            selector: 'circle',
            providers: [TuiDestroyService],
        }),
        __param(0, Inject(ANIMATION_FRAME)),
        __param(1, Inject(NgZone)),
        __param(2, Inject(TuiDestroyService)),
        __param(3, Inject(ElementRef)),
        __param(4, Inject(USER_AGENT))
    ], TuiLoaderDirective);
    return TuiLoaderDirective;
}());
export { TuiLoaderDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jb3JlL2NvbXBvbmVudHMvbG9hZGVyLyIsInNvdXJjZXMiOlsibG9hZGVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUMsZUFBZSxFQUFFLFVBQVUsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ2hFLE9BQU8sRUFBQyxlQUFlLEVBQUUsSUFBSSxFQUFFLGlCQUFpQixFQUFFLFdBQVcsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNwRixPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBQ2hDLE9BQU8sRUFBQyxRQUFRLEVBQUUsU0FBUyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkQsSUFBTSxTQUFTLEdBQUcsR0FBRyxDQUFDO0FBQ3RCLElBQU0sV0FBVyxHQUFHLEdBQUcsQ0FBQztBQU14QjtJQUtJLDRCQUM2QixlQUFtQyxFQUM1QyxNQUFjLEVBQ0gsUUFBMEIsRUFDaEIsVUFBd0MsRUFDekQsU0FBaUI7UUFMekMsaUJBZ0JDO1FBWndDLGVBQVUsR0FBVixVQUFVLENBQThCO1FBUnpFLG9CQUFlLEdBQUcsU0FBUyxDQUFDO1FBRTVCLHFCQUFnQixHQUFHLENBQUMsQ0FBQztRQVN6QixJQUFJLENBQUMsZUFBZSxDQUFDLEVBQUUsRUFBRSxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRTtZQUNyRCxPQUFPO1NBQ1Y7UUFFRCxlQUFlO2FBQ1YsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRSxRQUFRLEVBQUUsRUFBRSxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUM7YUFDMUQsU0FBUyxDQUFDLFVBQUMsRUFBVztnQkFBWCxrQkFBVyxFQUFWLFdBQUcsRUFBRSxZQUFJO1lBQ2xCLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQzdCLENBQUMsQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUVPLG9DQUFPLEdBQWYsVUFBZ0IsS0FBYTtRQUN6QixJQUFJLElBQUksQ0FBQyxlQUFlLEdBQUcsQ0FBQyxFQUFFO1lBQzFCLElBQUksQ0FBQyxlQUFlLEdBQUcsU0FBUyxHQUFHLENBQUMsQ0FBQztZQUNyQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsQ0FBQyxDQUFDO1NBQzdCO1FBRUQsSUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsZUFBZSxHQUFHLFNBQVMsQ0FBQyxDQUFDO1FBQ25FLElBQU0sR0FBRyxHQUFHLElBQUksR0FBRyxLQUFLLENBQUM7UUFDekIsSUFBTSxVQUFVLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGVBQWUsR0FBRyxTQUFTLENBQUMsQ0FBQztRQUM3RCxJQUFBLDJDQUFLLENBQWtDO1FBRTlDLEtBQUssQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDMUQsS0FBSyxDQUFDLGVBQWUsR0FBRyxTQUFTLEdBQUcsZUFBZSxHQUFHLEdBQUcsR0FBRyxlQUFlLENBQUM7UUFFNUUsSUFBSSxDQUFDLGVBQWUsSUFBSSxTQUFTLEdBQUcsV0FBVyxHQUFHLEdBQUcsQ0FBQztRQUN0RCxJQUFJLENBQUMsZ0JBQWdCLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDLEdBQUcsV0FBVyxHQUFHLEdBQUcsQ0FBQztRQUN0RSx5RUFBeUU7SUFDN0UsQ0FBQzs7Z0JBbEM2QyxVQUFVLHVCQUFuRCxNQUFNLFNBQUMsZUFBZTtnQkFDQyxNQUFNLHVCQUE3QixNQUFNLFNBQUMsTUFBTTtnQkFDdUIsVUFBVSx1QkFBOUMsTUFBTSxTQUFDLGlCQUFpQjtnQkFDd0IsVUFBVSx1QkFBMUQsTUFBTSxTQUFDLFVBQVU7NkNBQ2pCLE1BQU0sU0FBQyxVQUFVOztJQVZiLGtCQUFrQjtRQUo5QixTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsUUFBUTtZQUNsQixTQUFTLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztTQUNqQyxDQUFDO1FBT08sV0FBQSxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUE7UUFDdkIsV0FBQSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUE7UUFDZCxXQUFBLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO1FBQ3pCLFdBQUEsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFBO1FBQ2xCLFdBQUEsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFBO09BVmQsa0JBQWtCLENBeUM5QjtJQUFELHlCQUFDO0NBQUEsQUF6Q0QsSUF5Q0M7U0F6Q1ksa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEluamVjdCwgTmdab25lfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7QU5JTUFUSU9OX0ZSQU1FLCBVU0VSX0FHRU5UfSBmcm9tICdAbmctd2ViLWFwaXMvY29tbW9uJztcbmltcG9ydCB7aXNFZGdlT2xkZXJUaGFuLCBpc0lFLCBUdWlEZXN0cm95U2VydmljZSwgdHVpWm9uZWZyZWV9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7cGFpcndpc2UsIHRha2VVbnRpbH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5jb25zdCBQRVJJTUVURVIgPSAzMTQ7XG5jb25zdCBDT0VGRklDSUVOVCA9IDEuNTtcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdjaXJjbGUnLFxuICAgIHByb3ZpZGVyczogW1R1aURlc3Ryb3lTZXJ2aWNlXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpTG9hZGVyRGlyZWN0aXZlIHtcbiAgICBwcml2YXRlIHN0cm9rZURhc2hhcnJheSA9IFBFUklNRVRFUjtcblxuICAgIHByaXZhdGUgc3Ryb2tlRGFzaG9mZnNldCA9IDA7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChBTklNQVRJT05fRlJBTUUpIGFuaW1hdGlvbkZyYW1lJDogT2JzZXJ2YWJsZTxudW1iZXI+LFxuICAgICAgICBASW5qZWN0KE5nWm9uZSkgbmdab25lOiBOZ1pvbmUsXG4gICAgICAgIEBJbmplY3QoVHVpRGVzdHJveVNlcnZpY2UpIGRlc3Ryb3kkOiBPYnNlcnZhYmxlPHZvaWQ+LFxuICAgICAgICBASW5qZWN0KEVsZW1lbnRSZWYpIHByaXZhdGUgcmVhZG9ubHkgZWxlbWVudFJlZjogRWxlbWVudFJlZjxTVkdDaXJjbGVFbGVtZW50PixcbiAgICAgICAgQEluamVjdChVU0VSX0FHRU5UKSB1c2VyQWdlbnQ6IHN0cmluZyxcbiAgICApIHtcbiAgICAgICAgaWYgKCFpc0VkZ2VPbGRlclRoYW4oMTcsIHVzZXJBZ2VudCkgJiYgIWlzSUUodXNlckFnZW50KSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgYW5pbWF0aW9uRnJhbWUkXG4gICAgICAgICAgICAucGlwZSh0dWlab25lZnJlZShuZ1pvbmUpLCBwYWlyd2lzZSgpLCB0YWtlVW50aWwoZGVzdHJveSQpKVxuICAgICAgICAgICAgLnN1YnNjcmliZSgoW2N1ciwgcHJldl0pID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmFuaW1hdGUocHJldiAtIGN1cik7XG4gICAgICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGFuaW1hdGUoZGVsdGE6IG51bWJlcikge1xuICAgICAgICBpZiAodGhpcy5zdHJva2VEYXNoYXJyYXkgPCAwKSB7XG4gICAgICAgICAgICB0aGlzLnN0cm9rZURhc2hhcnJheSA9IFBFUklNRVRFUiAqIDI7XG4gICAgICAgICAgICB0aGlzLnN0cm9rZURhc2hvZmZzZXQgPSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3Qgc3Ryb2tlRGFzaGFycmF5ID0gTWF0aC5hYnModGhpcy5zdHJva2VEYXNoYXJyYXkgLSBQRVJJTUVURVIpO1xuICAgICAgICBjb25zdCBmcHMgPSAxMDAwIC8gZGVsdGE7XG4gICAgICAgIGNvbnN0IG9mZnNldFN0ZXAgPSAxICsgTWF0aC5mbG9vcih0aGlzLnN0cm9rZURhc2hhcnJheSAvIFBFUklNRVRFUik7XG4gICAgICAgIGNvbnN0IHtzdHlsZX0gPSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcblxuICAgICAgICBzdHlsZS5zdHJva2VEYXNob2Zmc2V0ID0gdGhpcy5zdHJva2VEYXNob2Zmc2V0LnRvU3RyaW5nKCk7XG4gICAgICAgIHN0eWxlLnN0cm9rZURhc2hhcnJheSA9IFBFUklNRVRFUiAtIHN0cm9rZURhc2hhcnJheSArICcgJyArIHN0cm9rZURhc2hhcnJheTtcblxuICAgICAgICB0aGlzLnN0cm9rZURhc2hhcnJheSAtPSBQRVJJTUVURVIgLyBDT0VGRklDSUVOVCAvIGZwcztcbiAgICAgICAgdGhpcy5zdHJva2VEYXNob2Zmc2V0ICs9IChvZmZzZXRTdGVwICogUEVSSU1FVEVSKSAvIENPRUZGSUNJRU5UIC8gZnBzO1xuICAgICAgICAvLyB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5wYXJlbnRFbGVtZW50IS5zdHlsZS5hbmltYXRpb24gPSAnbm9uZSc7XG4gICAgfVxufVxuIl19