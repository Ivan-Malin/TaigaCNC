import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, Input, Output, } from '@angular/core';
import { ALWAYS_FALSE_HANDLER, DAYS_IN_WEEK, nullableSame, TuiDay, TuiDayRange, tuiDefaultProp, tuiRequiredSetter, } from '@taiga-ui/cdk';
import { TUI_DEFAULT_MARKER_HANDLER } from '@taiga-ui/core/constants';
import { TUI_SHORT_WEEK_DAYS } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
var ROWS_COUNT = 6;
// @dynamic
var TuiPrimitiveCalendarComponent = /** @class */ (function () {
    function TuiPrimitiveCalendarComponent(weekDays$) {
        var _this = this;
        this.weekDays$ = weekDays$;
        this.disabledItemHandler = ALWAYS_FALSE_HANDLER;
        this.markerHandler = TUI_DEFAULT_MARKER_HANDLER;
        this.value = null;
        this.hoveredItem = null;
        this.showAdjacent = true;
        this.hoveredItemChange = new EventEmitter();
        this.dayClick = new EventEmitter();
        this.sheet = [];
        this.pressedItem = null;
        this.currentMonth = null;
        this.today = TuiDay.currentLocal();
        this.toMarkers = function (day, today, inRange) {
            if (today || inRange) {
                return null;
            }
            var markers = _this.markerHandler(day);
            return markers.length === 0 ? null : markers;
        };
    }
    Object.defineProperty(TuiPrimitiveCalendarComponent.prototype, "month", {
        set: function (month) {
            if (this.currentMonth !== null && this.currentMonth.monthSame(month)) {
                return;
            }
            var sheet = [];
            for (var rowIndex = 0; rowIndex < ROWS_COUNT; rowIndex++) {
                var row = [];
                for (var colIndex = 0; colIndex < DAYS_IN_WEEK; colIndex++) {
                    row.push(TuiDay.getDayFromMonthRowCol(month, rowIndex, colIndex));
                }
                sheet.push(row);
            }
            this.sheet = sheet;
            this.currentMonth = month;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveCalendarComponent.prototype, "isSingle", {
        get: function () {
            return (this.value !== null &&
                (this.value instanceof TuiDay || this.value.isSingleDay));
        },
        enumerable: true,
        configurable: true
    });
    TuiPrimitiveCalendarComponent.prototype.getItemState = function (item) {
        var _a = this, disabledItemHandler = _a.disabledItemHandler, pressedItem = _a.pressedItem, hoveredItem = _a.hoveredItem;
        if (disabledItemHandler(item)) {
            return "disabled" /* Disabled */;
        }
        if (pressedItem !== null && pressedItem.daySame(item)) {
            return "pressed" /* Pressed */;
        }
        if (hoveredItem !== null && hoveredItem.daySame(item)) {
            return "hovered" /* Hovered */;
        }
        return null;
    };
    TuiPrimitiveCalendarComponent.prototype.getItemRange = function (item) {
        var _a = this, value = _a.value, hoveredItem = _a.hoveredItem;
        if (value === null) {
            return null;
        }
        if (value instanceof TuiDay) {
            return value.daySame(item) ? "single" /* Single */ : null;
        }
        if ((value.from.daySame(item) && !value.isSingleDay) ||
            (hoveredItem !== null &&
                hoveredItem.dayAfter(value.from) &&
                value.from.daySame(item) &&
                value.isSingleDay) ||
            (hoveredItem !== null &&
                hoveredItem.daySame(item) &&
                hoveredItem.dayBefore(value.from) &&
                value.isSingleDay)) {
            return "start" /* Start */;
        }
        if ((value.to.daySame(item) && !value.isSingleDay) ||
            (hoveredItem !== null &&
                hoveredItem.dayBefore(value.from) &&
                value.from.daySame(item) &&
                value.isSingleDay) ||
            (hoveredItem !== null &&
                hoveredItem.daySame(item) &&
                hoveredItem.dayAfter(value.from) &&
                value.isSingleDay)) {
            return "end" /* End */;
        }
        return value.isSingleDay && value.from.daySame(item)
            ? "single" /* Single */
            : null;
    };
    TuiPrimitiveCalendarComponent.prototype.itemIsDisabled = function (day) {
        var disabledItemHandler = this.disabledItemHandler;
        return disabledItemHandler(day);
    };
    TuiPrimitiveCalendarComponent.prototype.itemIsToday = function (item) {
        return this.today.daySame(item);
    };
    TuiPrimitiveCalendarComponent.prototype.itemIsUnavailable = function (item) {
        return this.currentMonth === null || !this.currentMonth.monthSame(item);
    };
    TuiPrimitiveCalendarComponent.prototype.itemIsInterval = function (day) {
        var _a = this, value = _a.value, hoveredItem = _a.hoveredItem;
        if (value === null || value instanceof TuiDay) {
            return false;
        }
        if (!value.isSingleDay) {
            return value.from.daySameOrBefore(day) && value.to.dayAfter(day);
        }
        if (hoveredItem === null) {
            return false;
        }
        var range = TuiDayRange.sort(value.from, hoveredItem);
        return range.from.daySameOrBefore(day) && range.to.dayAfter(day);
    };
    TuiPrimitiveCalendarComponent.prototype.onItemHovered = function (hovered, item) {
        this.updateHoveredItem(hovered ? item : null);
    };
    TuiPrimitiveCalendarComponent.prototype.onItemPressed = function (pressed, item) {
        this.updatePressedItem(pressed, item);
    };
    TuiPrimitiveCalendarComponent.prototype.onItemClick = function (event, item) {
        if (this.disabledItemHandler(item)) {
            return;
        }
        event.preventDefault();
        this.dayClick.emit(item);
    };
    TuiPrimitiveCalendarComponent.prototype.updateHoveredItem = function (day) {
        if (nullableSame(this.hoveredItem, day, function (a, b) { return a.daySame(b); })) {
            return;
        }
        this.hoveredItem = day;
        this.hoveredItemChange.emit(day);
    };
    TuiPrimitiveCalendarComponent.prototype.updatePressedItem = function (pressed, item) {
        this.pressedItem = pressed ? item : null;
    };
    TuiPrimitiveCalendarComponent.ctorParameters = function () { return [
        { type: Observable, decorators: [{ type: Inject, args: [TUI_SHORT_WEEK_DAYS,] }] }
    ]; };
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveCalendarComponent.prototype, "disabledItemHandler", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveCalendarComponent.prototype, "markerHandler", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveCalendarComponent.prototype, "value", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveCalendarComponent.prototype, "hoveredItem", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveCalendarComponent.prototype, "showAdjacent", void 0);
    __decorate([
        Input(),
        tuiRequiredSetter()
    ], TuiPrimitiveCalendarComponent.prototype, "month", null);
    __decorate([
        Output()
    ], TuiPrimitiveCalendarComponent.prototype, "hoveredItemChange", void 0);
    __decorate([
        Output()
    ], TuiPrimitiveCalendarComponent.prototype, "dayClick", void 0);
    __decorate([
        HostBinding('class._single')
    ], TuiPrimitiveCalendarComponent.prototype, "isSingle", null);
    TuiPrimitiveCalendarComponent = __decorate([
        Component({
            selector: 'tui-primitive-calendar',
            template: "<div class=\"row row_weekday\">\n    <div *ngFor=\"let day of (weekDays$ | async)\" class=\"cell\">{{day}}</div>\n</div>\n<div>\n    <div\n        *tuiRepeatTimes=\"let rowIndex of sheet.length\"\n        automation-id=\"tui-primitive-calendar__row\"\n        class=\"row\"\n    >\n        <ng-container *tuiRepeatTimes=\"let colIndex of sheet[rowIndex].length\">\n            <ng-container *tuiLet=\"sheet[rowIndex][colIndex] as item\">\n                <div\n                    *ngIf=\"!itemIsUnavailable(item) || showAdjacent\"\n                    automation-id=\"tui-primitive-calendar__cell\"\n                    class=\"cell\"\n                    [class.cell_today]=\"itemIsToday(item)\"\n                    [class.cell_interval]=\"itemIsInterval(item)\"\n                    [attr.data-tui-element-range]=\"getItemRange(item)\"\n                    [attr.data-tui-element-state]=\"getItemState(item)\"\n                    (tuiHoveredChange)=\"onItemHovered($event, item)\"\n                    (tuiPressedChange)=\"onItemPressed($event, item)\"\n                    (click)=\"onItemClick($event, item)\"\n                >\n                    <div\n                        automation-id=\"tui-primitive-calendar__item\"\n                        class=\"item\"\n                        [class.item_weekend]=\"colIndex > 4\"\n                        [class.item_unavailable]=\"itemIsUnavailable(item)\"\n                    >\n                        {{item.day}}\n                        <div\n                            *ngIf=\"item | tuiMapper : toMarkers : itemIsToday(item) : !!getItemRange(item) as markers\"\n                            class=\"dots\"\n                        >\n                            <div class=\"dot\" [tuiBackground]=\"markers[0]\"></div>\n                            <div\n                                *ngIf=\"markers.length > 1\"\n                                class=\"dot\"\n                                [tuiBackground]=\"markers[1]\"\n                            ></div>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [":host{font:var(--tui-font-text-m);display:block}.row{position:relative;z-index:0;display:flex;justify-content:space-between;height:36px}.item{position:relative;flex:1;line-height:32px;border-radius:var(--tui-radius-m)}.item:after,.item:before{content:'';position:absolute;top:0;left:0;right:0;bottom:0;z-index:-1;border-radius:var(--tui-radius-m)}.cell{position:relative;display:flex;align-items:center;justify-content:center;width:36px;text-align:center;outline:0;cursor:pointer;background-clip:content-box;box-sizing:border-box;border:2px solid transparent}.cell:before{content:'';position:absolute;top:0;left:0;right:0;bottom:0;z-index:-1;border-radius:var(--tui-radius-m)}.cell_today:after{position:absolute;left:50%;transform:translate(-50%,0);content:'';bottom:5px;height:2px;width:12px;border-radius:6px;background-color:var(--tui-text-02)}.cell_interval:before{background:var(--tui-base-02)}:host._single .cell_interval:before{background:var(--tui-secondary-hover)}.cell_interval:not(:last-child):before{right:-36px}.cell_interval:last-child:first-child:before{right:0}.cell_interval:first-child>.item{border-top-left-radius:var(--tui-radius-m);border-bottom-left-radius:var(--tui-radius-m)}.cell_interval:last-child>.item{border-top-right-radius:var(--tui-radius-m);border-bottom-right-radius:var(--tui-radius-m)}.cell_interval>.item{border-radius:0}.cell[data-tui-element-range]:after{background-color:var(--tui-primary-text)}.cell[data-tui-element-range]>.item{color:var(--tui-primary-text)}.cell[data-tui-element-range]>.item:after,.cell[data-tui-element-range]>.item:before{background-color:var(--tui-primary)}.cell[data-tui-element-range][data-tui-element-state=hovered]>.item:after,.cell[data-tui-element-range][data-tui-element-state=hovered]>.item:before{background-color:var(--tui-primary-hover)}.cell[data-tui-element-range][data-tui-element-state=pressed]>.item:after,.cell[data-tui-element-range][data-tui-element-state=pressed]>.item:before{background-color:var(--tui-primary-active)}.cell[data-tui-element-range=end]>.item:before{left:4px}.cell[data-tui-element-range=end]>.item:after{left:-32px;right:100%;transform:translateX(23px) scaleY(.6) scaleX(.4) rotate(45deg)}.cell[data-tui-element-range=start]>.item:before{right:4px}.cell[data-tui-element-range=start]>.item:after{left:100%;right:-32px;transform:translateX(-23px) scaleY(.6) scaleX(.4) rotate(45deg)}.cell[data-tui-element-state=disabled]{pointer-events:none}.cell[data-tui-element-state=disabled]>.item{opacity:.36}.cell[data-tui-element-state=hovered]:hover:not([data-tui-element-range])>.item{background-color:var(--tui-secondary-hover)}.cell[data-tui-element-state=pressed]:hover:not([data-tui-element-range])>.item{background-color:var(--tui-secondary-active)}:host{width:252px}.row{justify-content:flex-start}.row:first-child{justify-content:flex-end}.row_weekday{font:var(--tui-font-text-s);color:var(--tui-text-02);pointer-events:none}.item{display:flex;flex-direction:column}.item_weekend{color:var(--tui-negative)}.item_unavailable{opacity:var(--tui-disabled-opacity)}.dots{display:flex;justify-content:center;margin-top:-8px;padding-bottom:4px}.dot{display:inline-block;width:4px;height:4px;border-radius:100%;margin:0 1px}"]
        }),
        __param(0, Inject(TUI_SHORT_WEEK_DAYS))
    ], TuiPrimitiveCalendarComponent);
    return TuiPrimitiveCalendarComponent;
}());
export { TuiPrimitiveCalendarComponent };
//# sourceMappingURL=data:application/json;base64,