import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, Inject, Input, } from '@angular/core';
import { tuiDefaultProp, TuiDestroyService } from '@taiga-ui/cdk';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_MODE } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
var TuiTooltipComponent = /** @class */ (function () {
    function TuiTooltipComponent(destroy$, mode$) {
        var _this = this;
        this.content = '';
        this.mode = null;
        this.direction = 'bottom-left';
        this.describeId = '';
        this.globalMode = null;
        mode$.pipe(takeUntil(destroy$)).subscribe(function (mode) {
            _this.globalMode = mode;
        });
    }
    Object.defineProperty(TuiTooltipComponent.prototype, "computedMode", {
        // TODO: Simplify
        get: function () {
            return this.mode || (this.globalMode ? this.globalMode : null);
        },
        enumerable: true,
        configurable: true
    });
    TuiTooltipComponent.ctorParameters = function () { return [
        { type: Observable, decorators: [{ type: Inject, args: [TuiDestroyService,] }] },
        { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] }
    ]; };
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiTooltipComponent.prototype, "content", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiTooltipComponent.prototype, "mode", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiTooltipComponent.prototype, "direction", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiTooltipComponent.prototype, "describeId", void 0);
    __decorate([
        HostBinding('attr.data-mode')
    ], TuiTooltipComponent.prototype, "computedMode", null);
    TuiTooltipComponent = __decorate([
        Component({
            selector: 'tui-tooltip',
            template: "<tui-svg\n    class=\"icon\"\n    src=\"tuiIconTooltipLarge\"\n    automation-id=\"tui-tooltip__icon\"\n    [tuiHintId]=\"describeId\"\n    [tuiHint]=\"content\"\n    [tuiHintDirection]=\"direction\"\n    [tuiHintMode]=\"computedMode\"\n></tui-svg>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            providers: [TuiDestroyService, MODE_PROVIDER],
            styles: [":host{transition-property:color;transition-duration:.3s;transition-timing-function:ease-in-out;position:relative;display:inline-block;width:24px;height:24px;vertical-align:middle;font-size:0;line-height:0;cursor:pointer;color:var(--tui-text-03)}:host:hover{color:var(--tui-text-02)}:host[data-mode=onDark]{color:var(--tui-text-01-night)}:host[data-mode=onLight]{color:var(--tui-text-01)}:host[data-mode=error]{color:var(--tui-error-fill)}.icon{transition-property:opacity,color;transition-duration:.3s;transition-timing-function:ease-in-out;width:100%;height:100%}:host:not([data-mode]) .icon._hint_hovered{color:var(--tui-text-02)}:host[data-mode=onDark] .icon,:host[data-mode=onLight] .icon{opacity:var(--tui-disabled-opacity)}:host[data-mode=onDark] .icon._hint_hovered,:host[data-mode=onDark] .icon:hover,:host[data-mode=onLight] .icon._hint_hovered,:host[data-mode=onLight] .icon:hover{opacity:1}"]
        }),
        __param(0, Inject(TuiDestroyService)),
        __param(1, Inject(TUI_MODE))
    ], TuiTooltipComponent);
    return TuiTooltipComponent;
}());
export { TuiTooltipComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS9jb21wb25lbnRzL3Rvb2x0aXAvIiwic291cmNlcyI6WyJ0b29sdGlwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsV0FBVyxFQUNYLE1BQU0sRUFDTixLQUFLLEdBQ1IsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLGNBQWMsRUFBRSxpQkFBaUIsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVoRSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRy9DLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDaEMsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBU3pDO0lBbUJJLDZCQUMrQixRQUE2QixFQUN0QyxLQUF1QztRQUY3RCxpQkFPQztRQXZCRCxZQUFPLEdBQXdCLEVBQUUsQ0FBQztRQUlsQyxTQUFJLEdBQXVCLElBQUksQ0FBQztRQUloQyxjQUFTLEdBQWlCLGFBQWEsQ0FBQztRQUl4QyxlQUFVLEdBQUcsRUFBRSxDQUFDO1FBRVIsZUFBVSxHQUF5QixJQUFJLENBQUM7UUFNNUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsVUFBQSxJQUFJO1lBQzFDLEtBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1FBQzNCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUlELHNCQUFJLDZDQUFZO1FBRmhCLGlCQUFpQjthQUVqQjtZQUNJLE9BQU8sSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25FLENBQUM7OztPQUFBOztnQkFad0MsVUFBVSx1QkFBOUMsTUFBTSxTQUFDLGlCQUFpQjtnQkFDQSxVQUFVLHVCQUFsQyxNQUFNLFNBQUMsUUFBUTs7SUFsQnBCO1FBRkMsS0FBSyxFQUFFO1FBQ1AsY0FBYyxFQUFFO3dEQUNpQjtJQUlsQztRQUZDLEtBQUssRUFBRTtRQUNQLGNBQWMsRUFBRTtxREFDZTtJQUloQztRQUZDLEtBQUssRUFBRTtRQUNQLGNBQWMsRUFBRTswREFDdUI7SUFJeEM7UUFGQyxLQUFLLEVBQUU7UUFDUCxjQUFjLEVBQUU7MkRBQ0Q7SUFlaEI7UUFEQyxXQUFXLENBQUMsZ0JBQWdCLENBQUM7MkRBRzdCO0lBaENRLG1CQUFtQjtRQVAvQixTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsYUFBYTtZQUN2QixzUUFBc0M7WUFFdEMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07WUFDL0MsU0FBUyxFQUFFLENBQUMsaUJBQWlCLEVBQUUsYUFBYSxDQUFDOztTQUNoRCxDQUFDO1FBcUJPLFdBQUEsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUE7UUFDekIsV0FBQSxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUE7T0FyQlosbUJBQW1CLENBaUMvQjtJQUFELDBCQUFDO0NBQUEsQUFqQ0QsSUFpQ0M7U0FqQ1ksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpRGVmYXVsdFByb3AsIFR1aURlc3Ryb3lTZXJ2aWNlfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VHVpSGludE1vZGV9IGZyb20gJ0B0YWlnYS11aS9jb3JlL2VudW1zJztcbmltcG9ydCB7TU9ERV9QUk9WSURFUn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvcHJvdmlkZXJzJztcbmltcG9ydCB7VFVJX01PREV9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Rva2Vucyc7XG5pbXBvcnQge1R1aUJyaWdodG5lc3MsIFR1aURpcmVjdGlvbn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHtQb2x5bW9ycGhldXNDb250ZW50fSBmcm9tICdAdGlua29mZi9uZy1wb2x5bW9ycGhldXMnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7dGFrZVVudGlsfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLXRvb2x0aXAnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi90b29sdGlwLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3Rvb2x0aXAuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIHByb3ZpZGVyczogW1R1aURlc3Ryb3lTZXJ2aWNlLCBNT0RFX1BST1ZJREVSXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpVG9vbHRpcENvbXBvbmVudCB7XG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGNvbnRlbnQ6IFBvbHltb3JwaGV1c0NvbnRlbnQgPSAnJztcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBtb2RlOiBUdWlIaW50TW9kZSB8IG51bGwgPSBudWxsO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGRpcmVjdGlvbjogVHVpRGlyZWN0aW9uID0gJ2JvdHRvbS1sZWZ0JztcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBkZXNjcmliZUlkID0gJyc7XG5cbiAgICBwcml2YXRlIGdsb2JhbE1vZGU6IFR1aUJyaWdodG5lc3MgfCBudWxsID0gbnVsbDtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFR1aURlc3Ryb3lTZXJ2aWNlKSBkZXN0cm95JDogT2JzZXJ2YWJsZTx1bmtub3duPixcbiAgICAgICAgQEluamVjdChUVUlfTU9ERSkgbW9kZSQ6IE9ic2VydmFibGU8VHVpQnJpZ2h0bmVzcyB8IG51bGw+LFxuICAgICkge1xuICAgICAgICBtb2RlJC5waXBlKHRha2VVbnRpbChkZXN0cm95JCkpLnN1YnNjcmliZShtb2RlID0+IHtcbiAgICAgICAgICAgIHRoaXMuZ2xvYmFsTW9kZSA9IG1vZGU7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIFRPRE86IFNpbXBsaWZ5XG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtbW9kZScpXG4gICAgZ2V0IGNvbXB1dGVkTW9kZSgpOiBUdWlIaW50TW9kZSB8IFR1aUJyaWdodG5lc3MgfCBudWxsIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubW9kZSB8fCAodGhpcy5nbG9iYWxNb2RlID8gdGhpcy5nbG9iYWxNb2RlIDogbnVsbCk7XG4gICAgfVxufVxuIl19