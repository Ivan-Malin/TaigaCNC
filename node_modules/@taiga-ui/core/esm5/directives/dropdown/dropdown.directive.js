import { __decorate, __extends, __param } from "tslib";
import { AfterViewChecked, ComponentFactoryResolver, Directive, ElementRef, forwardRef, Inject, Injector, Input, OnDestroy, Optional, } from '@angular/core';
import { TuiActiveZoneDirective, TuiParentsScrollService, TuiPortalService, } from '@taiga-ui/cdk';
import { AbstractTuiDropdown } from '@taiga-ui/core/abstract';
import { TUI_DROPDOWN_DIRECTIVE } from '@taiga-ui/core/tokens';
var TuiDropdownDirective = /** @class */ (function (_super) {
    __extends(TuiDropdownDirective, _super);
    function TuiDropdownDirective(componentFactoryResolver, injector, portalService, elementRef, activeZone, refresh$) {
        var _this = _super.call(this, componentFactoryResolver, injector, portalService, elementRef, activeZone) || this;
        _this.refresh$ = refresh$;
        return _this;
    }
    TuiDropdownDirective_1 = TuiDropdownDirective;
    Object.defineProperty(TuiDropdownDirective.prototype, "open", {
        set: function (value) {
            if (value) {
                this.openDropdownBox();
            }
            else {
                this.closeDropdownBox();
            }
        },
        enumerable: true,
        configurable: true
    });
    var TuiDropdownDirective_1;
    TuiDropdownDirective.ctorParameters = function () { return [
        { type: ComponentFactoryResolver, decorators: [{ type: Inject, args: [ComponentFactoryResolver,] }] },
        { type: Injector, decorators: [{ type: Inject, args: [Injector,] }] },
        { type: TuiPortalService, decorators: [{ type: Inject, args: [TuiPortalService,] }] },
        { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
        { type: TuiActiveZoneDirective, decorators: [{ type: Inject, args: [TuiActiveZoneDirective,] }, { type: Optional }] },
        { type: TuiParentsScrollService, decorators: [{ type: Inject, args: [TuiParentsScrollService,] }] }
    ]; };
    __decorate([
        Input('tuiDropdown')
    ], TuiDropdownDirective.prototype, "open", null);
    TuiDropdownDirective = TuiDropdownDirective_1 = __decorate([
        Directive({
            selector: '[tuiDropdown]:not(ng-container)',
            providers: [
                {
                    provide: TUI_DROPDOWN_DIRECTIVE,
                    useExisting: forwardRef(function () { return TuiDropdownDirective_1; }),
                },
                TuiParentsScrollService,
            ],
        }),
        __param(0, Inject(ComponentFactoryResolver)),
        __param(1, Inject(Injector)),
        __param(2, Inject(TuiPortalService)),
        __param(3, Inject(ElementRef)),
        __param(4, Inject(TuiActiveZoneDirective)),
        __param(4, Optional()),
        __param(5, Inject(TuiParentsScrollService))
    ], TuiDropdownDirective);
    return TuiDropdownDirective;
}(AbstractTuiDropdown));
export { TuiDropdownDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvZGlyZWN0aXZlcy9kcm9wZG93bi8iLCJzb3VyY2VzIjpbImRyb3Bkb3duLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILGdCQUFnQixFQUNoQix3QkFBd0IsRUFDeEIsU0FBUyxFQUNULFVBQVUsRUFDVixVQUFVLEVBQ1YsTUFBTSxFQUNOLFFBQVEsRUFDUixLQUFLLEVBQ0wsU0FBUyxFQUNULFFBQVEsR0FDWCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQ0gsc0JBQXNCLEVBQ3RCLHVCQUF1QixFQUN2QixnQkFBZ0IsR0FDbkIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0seUJBQXlCLENBQUM7QUFFNUQsT0FBTyxFQUFDLHNCQUFzQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFZN0Q7SUFDWSx3Q0FBbUI7SUFXM0IsOEJBRUksd0JBQWtELEVBQ2hDLFFBQWtCLEVBRXBDLGFBQStCLEVBQ1gsVUFBbUMsRUFHdkQsVUFBeUMsRUFDQyxRQUFpQztRQVYvRSxZQVlJLGtCQUFNLHdCQUF3QixFQUFFLFFBQVEsRUFBRSxhQUFhLEVBQUUsVUFBVSxFQUFFLFVBQVUsQ0FBQyxTQUNuRjtRQUg2QyxjQUFRLEdBQVIsUUFBUSxDQUF5Qjs7SUFHL0UsQ0FBQzs2QkF6QlEsb0JBQW9CO0lBSTdCLHNCQUFJLHNDQUFJO2FBQVIsVUFBUyxLQUFjO1lBQ25CLElBQUksS0FBSyxFQUFFO2dCQUNQLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQzthQUMxQjtpQkFBTTtnQkFDSCxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQzthQUMzQjtRQUNMLENBQUM7OztPQUFBOzs7Z0JBSTZCLHdCQUF3Qix1QkFEakQsTUFBTSxTQUFDLHdCQUF3QjtnQkFFSixRQUFRLHVCQUFuQyxNQUFNLFNBQUMsUUFBUTtnQkFFRCxnQkFBZ0IsdUJBRDlCLE1BQU0sU0FBQyxnQkFBZ0I7Z0JBRVEsVUFBVSx1QkFBekMsTUFBTSxTQUFDLFVBQVU7Z0JBR04sc0JBQXNCLHVCQUZqQyxNQUFNLFNBQUMsc0JBQXNCLGNBQzdCLFFBQVE7Z0JBRTJDLHVCQUF1Qix1QkFBMUUsTUFBTSxTQUFDLHVCQUF1Qjs7SUFsQm5DO1FBREMsS0FBSyxDQUFDLGFBQWEsQ0FBQztvREFPcEI7SUFWUSxvQkFBb0I7UUFWaEMsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLGlDQUFpQztZQUMzQyxTQUFTLEVBQUU7Z0JBQ1A7b0JBQ0ksT0FBTyxFQUFFLHNCQUFzQjtvQkFDL0IsV0FBVyxFQUFFLFVBQVUsQ0FBQyxjQUFNLE9BQUEsc0JBQW9CLEVBQXBCLENBQW9CLENBQUM7aUJBQ3REO2dCQUNELHVCQUF1QjthQUMxQjtTQUNKLENBQUM7UUFjTyxXQUFBLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFBO1FBRWhDLFdBQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQ2hCLFdBQUEsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUE7UUFFeEIsV0FBQSxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUE7UUFDbEIsV0FBQSxNQUFNLENBQUMsc0JBQXNCLENBQUMsQ0FBQTtRQUM5QixXQUFBLFFBQVEsRUFBRSxDQUFBO1FBRVYsV0FBQSxNQUFNLENBQUMsdUJBQXVCLENBQUMsQ0FBQTtPQXRCM0Isb0JBQW9CLENBMEJoQztJQUFELDJCQUFDO0NBQUEsQUExQkQsQ0FDWSxtQkFBbUIsR0F5QjlCO1NBMUJZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQWZ0ZXJWaWV3Q2hlY2tlZCxcbiAgICBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXG4gICAgRGlyZWN0aXZlLFxuICAgIEVsZW1lbnRSZWYsXG4gICAgZm9yd2FyZFJlZixcbiAgICBJbmplY3QsXG4gICAgSW5qZWN0b3IsXG4gICAgSW5wdXQsXG4gICAgT25EZXN0cm95LFxuICAgIE9wdGlvbmFsLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gICAgVHVpQWN0aXZlWm9uZURpcmVjdGl2ZSxcbiAgICBUdWlQYXJlbnRzU2Nyb2xsU2VydmljZSxcbiAgICBUdWlQb3J0YWxTZXJ2aWNlLFxufSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7QWJzdHJhY3RUdWlEcm9wZG93bn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvYWJzdHJhY3QnO1xuaW1wb3J0IHtUdWlEcm9wZG93bn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvaW50ZXJmYWNlcyc7XG5pbXBvcnQge1RVSV9EUk9QRE9XTl9ESVJFQ1RJVkV9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Rva2Vucyc7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW3R1aURyb3Bkb3duXTpub3QobmctY29udGFpbmVyKScsXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IFRVSV9EUk9QRE9XTl9ESVJFQ1RJVkUsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUdWlEcm9wZG93bkRpcmVjdGl2ZSksXG4gICAgICAgIH0sXG4gICAgICAgIFR1aVBhcmVudHNTY3JvbGxTZXJ2aWNlLFxuICAgIF0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aURyb3Bkb3duRGlyZWN0aXZlXG4gICAgZXh0ZW5kcyBBYnN0cmFjdFR1aURyb3Bkb3duXG4gICAgaW1wbGVtZW50cyBUdWlEcm9wZG93biwgQWZ0ZXJWaWV3Q2hlY2tlZCwgT25EZXN0cm95IHtcbiAgICBASW5wdXQoJ3R1aURyb3Bkb3duJylcbiAgICBzZXQgb3Blbih2YWx1ZTogYm9vbGVhbikge1xuICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMub3BlbkRyb3Bkb3duQm94KCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlRHJvcGRvd25Cb3goKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcilcbiAgICAgICAgY29tcG9uZW50RmFjdG9yeVJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXG4gICAgICAgIEBJbmplY3QoSW5qZWN0b3IpIGluamVjdG9yOiBJbmplY3RvcixcbiAgICAgICAgQEluamVjdChUdWlQb3J0YWxTZXJ2aWNlKVxuICAgICAgICBwb3J0YWxTZXJ2aWNlOiBUdWlQb3J0YWxTZXJ2aWNlLFxuICAgICAgICBASW5qZWN0KEVsZW1lbnRSZWYpIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgICAgICBASW5qZWN0KFR1aUFjdGl2ZVpvbmVEaXJlY3RpdmUpXG4gICAgICAgIEBPcHRpb25hbCgpXG4gICAgICAgIGFjdGl2ZVpvbmU6IFR1aUFjdGl2ZVpvbmVEaXJlY3RpdmUgfCBudWxsLFxuICAgICAgICBASW5qZWN0KFR1aVBhcmVudHNTY3JvbGxTZXJ2aWNlKSByZWFkb25seSByZWZyZXNoJDogVHVpUGFyZW50c1Njcm9sbFNlcnZpY2UsXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKGNvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgaW5qZWN0b3IsIHBvcnRhbFNlcnZpY2UsIGVsZW1lbnRSZWYsIGFjdGl2ZVpvbmUpO1xuICAgIH1cbn1cbiJdfQ==