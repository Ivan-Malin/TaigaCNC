import { __decorate, __extends } from "tslib";
import { Directive, forwardRef, InjectionToken, Input } from '@angular/core';
import { TuiController } from '@taiga-ui/cdk';
export var TUI_TEXTFIELD_AUTOCOMPLETE = new InjectionToken('tuiTextfieldAutocomplete', { factory: autocompleteDirectiveFactory });
var TuiTextfieldAutocompleteDirective = /** @class */ (function (_super) {
    __extends(TuiTextfieldAutocompleteDirective, _super);
    function TuiTextfieldAutocompleteDirective() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.autocomplete = null;
        return _this;
    }
    TuiTextfieldAutocompleteDirective_1 = TuiTextfieldAutocompleteDirective;
    var TuiTextfieldAutocompleteDirective_1;
    __decorate([
        Input('tuiTextfieldAutocomplete')
    ], TuiTextfieldAutocompleteDirective.prototype, "autocomplete", void 0);
    TuiTextfieldAutocompleteDirective = TuiTextfieldAutocompleteDirective_1 = __decorate([
        Directive({
            selector: '[tuiTextfieldAutocomplete]',
            providers: [
                {
                    provide: TUI_TEXTFIELD_AUTOCOMPLETE,
                    useExisting: forwardRef(function () { return TuiTextfieldAutocompleteDirective_1; }),
                },
            ],
        })
    ], TuiTextfieldAutocompleteDirective);
    return TuiTextfieldAutocompleteDirective;
}(TuiController));
export { TuiTextfieldAutocompleteDirective };
export function autocompleteDirectiveFactory() {
    return new TuiTextfieldAutocompleteDirective();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLWF1dG9jb21wbGV0ZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS9kaXJlY3RpdmVzL3RleHRmaWVsZC1jb250cm9sbGVyLyIsInNvdXJjZXMiOlsidGV4dGZpZWxkLWF1dG9jb21wbGV0ZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLGNBQWMsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUF1QixhQUFhLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEUsTUFBTSxDQUFDLElBQU0sMEJBQTBCLEdBQUcsSUFBSSxjQUFjLENBQ3hELDBCQUEwQixFQUMxQixFQUFDLE9BQU8sRUFBRSw0QkFBNEIsRUFBQyxDQUMxQyxDQUFDO0FBV0Y7SUFBdUQscURBQWE7SUFBcEU7UUFBQSxxRUFHQztRQURHLGtCQUFZLEdBQWdDLElBQUksQ0FBQzs7SUFDckQsQ0FBQzswQ0FIWSxpQ0FBaUM7O0lBRTFDO1FBREMsS0FBSyxDQUFDLDBCQUEwQixDQUFDOzJFQUNlO0lBRnhDLGlDQUFpQztRQVQ3QyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsNEJBQTRCO1lBQ3RDLFNBQVMsRUFBRTtnQkFDUDtvQkFDSSxPQUFPLEVBQUUsMEJBQTBCO29CQUNuQyxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxtQ0FBaUMsRUFBakMsQ0FBaUMsQ0FBQztpQkFDbkU7YUFDSjtTQUNKLENBQUM7T0FDVyxpQ0FBaUMsQ0FHN0M7SUFBRCx3Q0FBQztDQUFBLEFBSEQsQ0FBdUQsYUFBYSxHQUduRTtTQUhZLGlDQUFpQztBQUs5QyxNQUFNLFVBQVUsNEJBQTRCO0lBQ3hDLE9BQU8sSUFBSSxpQ0FBaUMsRUFBRSxDQUFDO0FBQ25ELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgZm9yd2FyZFJlZiwgSW5qZWN0aW9uVG9rZW4sIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpQXV0b2ZpbGxGaWVsZE5hbWUsIFR1aUNvbnRyb2xsZXJ9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuXG5leHBvcnQgY29uc3QgVFVJX1RFWFRGSUVMRF9BVVRPQ09NUExFVEUgPSBuZXcgSW5qZWN0aW9uVG9rZW48VHVpVGV4dGZpZWxkQXV0b2NvbXBsZXRlRGlyZWN0aXZlPihcbiAgICAndHVpVGV4dGZpZWxkQXV0b2NvbXBsZXRlJyxcbiAgICB7ZmFjdG9yeTogYXV0b2NvbXBsZXRlRGlyZWN0aXZlRmFjdG9yeX0sXG4pO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1t0dWlUZXh0ZmllbGRBdXRvY29tcGxldGVdJyxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogVFVJX1RFWFRGSUVMRF9BVVRPQ09NUExFVEUsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUdWlUZXh0ZmllbGRBdXRvY29tcGxldGVEaXJlY3RpdmUpLFxuICAgICAgICB9LFxuICAgIF0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVRleHRmaWVsZEF1dG9jb21wbGV0ZURpcmVjdGl2ZSBleHRlbmRzIFR1aUNvbnRyb2xsZXIge1xuICAgIEBJbnB1dCgndHVpVGV4dGZpZWxkQXV0b2NvbXBsZXRlJylcbiAgICBhdXRvY29tcGxldGU6IFR1aUF1dG9maWxsRmllbGROYW1lIHwgbnVsbCA9IG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhdXRvY29tcGxldGVEaXJlY3RpdmVGYWN0b3J5KCk6IFR1aVRleHRmaWVsZEF1dG9jb21wbGV0ZURpcmVjdGl2ZSB7XG4gICAgcmV0dXJuIG5ldyBUdWlUZXh0ZmllbGRBdXRvY29tcGxldGVEaXJlY3RpdmUoKTtcbn1cbiJdfQ==