import { __read, __spread } from "tslib";
import { ChangeDetectorRef, InjectionToken } from '@angular/core';
import { TuiDestroyService, watch } from '@taiga-ui/cdk';
import { merge, NEVER } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { TUI_TEXTFIELD_AUTOCOMPLETE, } from './textfield-autocomplete.directive';
import { TUI_TEXTFIELD_CLEANER, } from './textfield-cleaner.directive';
import { TUI_TEXTFIELD_CUSTOM_CONTENT, } from './textfield-custom-content.directive';
import { TUI_TEXTFIELD_EXAMPLE_TEXT, } from './textfield-example-text.directive';
import { TUI_TEXTFIELD_INPUT_MODE, } from './textfield-input-mode.directive';
import { TUI_TEXTFIELD_LABEL_OUTSIDE, } from './textfield-label-outside.directive';
import { TUI_TEXTFIELD_MAX_LENGTH, } from './textfield-max-length.directive';
import { TUI_TEXTFIELD_SIZE } from './textfield-size.directive';
import { TUI_TEXTFIELD_TYPE } from './textfield-type.directive';
import { TuiTextfieldController } from './textfield.controller';
export var TUI_TEXTIFELD_WATCHED_CONTROLLER = new InjectionToken('watched textfield controller');
export function textfieldWatchedControllerFactory(changeDetectorRef, destroy$) {
    var controllers = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        controllers[_i - 2] = arguments[_i];
    }
    var change$ = merge.apply(void 0, __spread(controllers.map(function (_a) {
        var change$ = _a.change$;
        return change$ || NEVER;
    }))).pipe(watch(changeDetectorRef), takeUntil(destroy$));
    change$.subscribe();
    return new (TuiTextfieldController.bind.apply(TuiTextfieldController, __spread([void 0, change$], controllers)))();
}
export var TEXTFIELD_CONTROLLER_PROVIDER = [
    TuiDestroyService,
    {
        provide: TUI_TEXTIFELD_WATCHED_CONTROLLER,
        deps: [
            ChangeDetectorRef,
            TuiDestroyService,
            TUI_TEXTFIELD_AUTOCOMPLETE,
            TUI_TEXTFIELD_CLEANER,
            TUI_TEXTFIELD_CUSTOM_CONTENT,
            TUI_TEXTFIELD_EXAMPLE_TEXT,
            TUI_TEXTFIELD_INPUT_MODE,
            TUI_TEXTFIELD_LABEL_OUTSIDE,
            TUI_TEXTFIELD_MAX_LENGTH,
            TUI_TEXTFIELD_SIZE,
            TUI_TEXTFIELD_TYPE,
        ],
        useFactory: textfieldWatchedControllerFactory,
    },
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLWNvbnRyb2xsZXIucHJvdmlkZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS9kaXJlY3RpdmVzL3RleHRmaWVsZC1jb250cm9sbGVyLyIsInNvdXJjZXMiOlsidGV4dGZpZWxkLWNvbnRyb2xsZXIucHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxjQUFjLEVBQVcsTUFBTSxlQUFlLENBQUM7QUFDMUUsT0FBTyxFQUFDLGlCQUFpQixFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2RCxPQUFPLEVBQUMsS0FBSyxFQUFFLEtBQUssRUFBYSxNQUFNLE1BQU0sQ0FBQztBQUM5QyxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDekMsT0FBTyxFQUNILDBCQUEwQixHQUU3QixNQUFNLG9DQUFvQyxDQUFDO0FBQzVDLE9BQU8sRUFDSCxxQkFBcUIsR0FFeEIsTUFBTSwrQkFBK0IsQ0FBQztBQUN2QyxPQUFPLEVBQ0gsNEJBQTRCLEdBRS9CLE1BQU0sc0NBQXNDLENBQUM7QUFDOUMsT0FBTyxFQUNILDBCQUEwQixHQUU3QixNQUFNLG9DQUFvQyxDQUFDO0FBQzVDLE9BQU8sRUFDSCx3QkFBd0IsR0FFM0IsTUFBTSxrQ0FBa0MsQ0FBQztBQUMxQyxPQUFPLEVBQ0gsMkJBQTJCLEdBRTlCLE1BQU0scUNBQXFDLENBQUM7QUFDN0MsT0FBTyxFQUNILHdCQUF3QixHQUUzQixNQUFNLGtDQUFrQyxDQUFDO0FBQzFDLE9BQU8sRUFBQyxrQkFBa0IsRUFBNEIsTUFBTSw0QkFBNEIsQ0FBQztBQUN6RixPQUFPLEVBQUMsa0JBQWtCLEVBQTRCLE1BQU0sNEJBQTRCLENBQUM7QUFDekYsT0FBTyxFQUFDLHNCQUFzQixFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFFOUQsTUFBTSxDQUFDLElBQU0sZ0NBQWdDLEdBQUcsSUFBSSxjQUFjLENBQzlELDhCQUE4QixDQUNqQyxDQUFDO0FBRUYsTUFBTSxVQUFVLGlDQUFpQyxDQUM3QyxpQkFBb0MsRUFDcEMsUUFBMEI7SUFDMUIscUJBV0M7U0FYRCxVQVdDLEVBWEQscUJBV0MsRUFYRCxJQVdDO1FBWEQsb0NBV0M7O0lBRUQsSUFBTSxPQUFPLEdBQUcsS0FBSyx3QkFBSSxXQUFXLENBQUMsR0FBRyxDQUFDLFVBQUMsRUFBUztZQUFSLG9CQUFPO1FBQU0sT0FBQSxPQUFPLElBQUksS0FBSztJQUFoQixDQUFnQixDQUFDLEdBQUUsSUFBSSxDQUMzRSxLQUFLLENBQUMsaUJBQWlCLENBQUMsRUFDeEIsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUN0QixDQUFDO0lBRUYsT0FBTyxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBRXBCLFlBQVcsc0JBQXNCLFlBQXRCLHNCQUFzQixvQkFBQyxPQUFPLEdBQUssV0FBVyxNQUFFO0FBQy9ELENBQUM7QUFFRCxNQUFNLENBQUMsSUFBTSw2QkFBNkIsR0FBYTtJQUNuRCxpQkFBaUI7SUFDakI7UUFDSSxPQUFPLEVBQUUsZ0NBQWdDO1FBQ3pDLElBQUksRUFBRTtZQUNGLGlCQUFpQjtZQUNqQixpQkFBaUI7WUFDakIsMEJBQTBCO1lBQzFCLHFCQUFxQjtZQUNyQiw0QkFBNEI7WUFDNUIsMEJBQTBCO1lBQzFCLHdCQUF3QjtZQUN4QiwyQkFBMkI7WUFDM0Isd0JBQXdCO1lBQ3hCLGtCQUFrQjtZQUNsQixrQkFBa0I7U0FDckI7UUFDRCxVQUFVLEVBQUUsaUNBQWlDO0tBQ2hEO0NBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0b3JSZWYsIEluamVjdGlvblRva2VuLCBQcm92aWRlcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aURlc3Ryb3lTZXJ2aWNlLCB3YXRjaH0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge21lcmdlLCBORVZFUiwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge3Rha2VVbnRpbH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHtcbiAgICBUVUlfVEVYVEZJRUxEX0FVVE9DT01QTEVURSxcbiAgICBUdWlUZXh0ZmllbGRBdXRvY29tcGxldGVEaXJlY3RpdmUsXG59IGZyb20gJy4vdGV4dGZpZWxkLWF1dG9jb21wbGV0ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHtcbiAgICBUVUlfVEVYVEZJRUxEX0NMRUFORVIsXG4gICAgVHVpVGV4dGZpZWxkQ2xlYW5lckRpcmVjdGl2ZSxcbn0gZnJvbSAnLi90ZXh0ZmllbGQtY2xlYW5lci5kaXJlY3RpdmUnO1xuaW1wb3J0IHtcbiAgICBUVUlfVEVYVEZJRUxEX0NVU1RPTV9DT05URU5ULFxuICAgIFR1aVRleHRmaWVsZEN1c3RvbUNvbnRlbnREaXJlY3RpdmUsXG59IGZyb20gJy4vdGV4dGZpZWxkLWN1c3RvbS1jb250ZW50LmRpcmVjdGl2ZSc7XG5pbXBvcnQge1xuICAgIFRVSV9URVhURklFTERfRVhBTVBMRV9URVhULFxuICAgIFR1aVRleHRmaWVsZEV4YW1wbGVUZXh0RGlyZWN0aXZlLFxufSBmcm9tICcuL3RleHRmaWVsZC1leGFtcGxlLXRleHQuZGlyZWN0aXZlJztcbmltcG9ydCB7XG4gICAgVFVJX1RFWFRGSUVMRF9JTlBVVF9NT0RFLFxuICAgIFR1aVRleHRmaWVsZElucHV0TW9kZURpcmVjdGl2ZSxcbn0gZnJvbSAnLi90ZXh0ZmllbGQtaW5wdXQtbW9kZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHtcbiAgICBUVUlfVEVYVEZJRUxEX0xBQkVMX09VVFNJREUsXG4gICAgVHVpVGV4dGZpZWxkTGFiZWxPdXRzaWRlRGlyZWN0aXZlLFxufSBmcm9tICcuL3RleHRmaWVsZC1sYWJlbC1vdXRzaWRlLmRpcmVjdGl2ZSc7XG5pbXBvcnQge1xuICAgIFRVSV9URVhURklFTERfTUFYX0xFTkdUSCxcbiAgICBUdWlUZXh0ZmllbGRNYXhMZW5ndGhEaXJlY3RpdmUsXG59IGZyb20gJy4vdGV4dGZpZWxkLW1heC1sZW5ndGguZGlyZWN0aXZlJztcbmltcG9ydCB7VFVJX1RFWFRGSUVMRF9TSVpFLCBUdWlUZXh0ZmllbGRTaXplRGlyZWN0aXZlfSBmcm9tICcuL3RleHRmaWVsZC1zaXplLmRpcmVjdGl2ZSc7XG5pbXBvcnQge1RVSV9URVhURklFTERfVFlQRSwgVHVpVGV4dGZpZWxkVHlwZURpcmVjdGl2ZX0gZnJvbSAnLi90ZXh0ZmllbGQtdHlwZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHtUdWlUZXh0ZmllbGRDb250cm9sbGVyfSBmcm9tICcuL3RleHRmaWVsZC5jb250cm9sbGVyJztcblxuZXhwb3J0IGNvbnN0IFRVSV9URVhUSUZFTERfV0FUQ0hFRF9DT05UUk9MTEVSID0gbmV3IEluamVjdGlvblRva2VuPFR1aVRleHRmaWVsZENvbnRyb2xsZXI+KFxuICAgICd3YXRjaGVkIHRleHRmaWVsZCBjb250cm9sbGVyJyxcbik7XG5cbmV4cG9ydCBmdW5jdGlvbiB0ZXh0ZmllbGRXYXRjaGVkQ29udHJvbGxlckZhY3RvcnkoXG4gICAgY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmLFxuICAgIGRlc3Ryb3kkOiBPYnNlcnZhYmxlPHZvaWQ+LFxuICAgIC4uLmNvbnRyb2xsZXJzOiBbXG4gICAgICAgIFR1aVRleHRmaWVsZEF1dG9jb21wbGV0ZURpcmVjdGl2ZSxcbiAgICAgICAgVHVpVGV4dGZpZWxkQ2xlYW5lckRpcmVjdGl2ZSxcbiAgICAgICAgVHVpVGV4dGZpZWxkQ3VzdG9tQ29udGVudERpcmVjdGl2ZSxcbiAgICAgICAgVHVpVGV4dGZpZWxkRXhhbXBsZVRleHREaXJlY3RpdmUsXG4gICAgICAgIFR1aVRleHRmaWVsZElucHV0TW9kZURpcmVjdGl2ZSxcbiAgICAgICAgVHVpVGV4dGZpZWxkTGFiZWxPdXRzaWRlRGlyZWN0aXZlLFxuICAgICAgICBUdWlUZXh0ZmllbGRNYXhMZW5ndGhEaXJlY3RpdmUsXG4gICAgICAgIFR1aVRleHRmaWVsZFNpemVEaXJlY3RpdmUsXG4gICAgICAgIC8vIEB0cy1pZ25vcmUgcmVtb3ZlIGFmdGVyIFRTIHVwZGF0ZVxuICAgICAgICBUdWlUZXh0ZmllbGRUeXBlRGlyZWN0aXZlLFxuICAgIF1cbik6IFR1aVRleHRmaWVsZENvbnRyb2xsZXIge1xuICAgIGNvbnN0IGNoYW5nZSQgPSBtZXJnZSguLi5jb250cm9sbGVycy5tYXAoKHtjaGFuZ2UkfSkgPT4gY2hhbmdlJCB8fCBORVZFUikpLnBpcGUoXG4gICAgICAgIHdhdGNoKGNoYW5nZURldGVjdG9yUmVmKSxcbiAgICAgICAgdGFrZVVudGlsKGRlc3Ryb3kkKSxcbiAgICApO1xuXG4gICAgY2hhbmdlJC5zdWJzY3JpYmUoKTtcblxuICAgIHJldHVybiBuZXcgVHVpVGV4dGZpZWxkQ29udHJvbGxlcihjaGFuZ2UkLCAuLi5jb250cm9sbGVycyk7XG59XG5cbmV4cG9ydCBjb25zdCBURVhURklFTERfQ09OVFJPTExFUl9QUk9WSURFUjogUHJvdmlkZXIgPSBbXG4gICAgVHVpRGVzdHJveVNlcnZpY2UsXG4gICAge1xuICAgICAgICBwcm92aWRlOiBUVUlfVEVYVElGRUxEX1dBVENIRURfQ09OVFJPTExFUixcbiAgICAgICAgZGVwczogW1xuICAgICAgICAgICAgQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgICAgICAgICBUdWlEZXN0cm95U2VydmljZSxcbiAgICAgICAgICAgIFRVSV9URVhURklFTERfQVVUT0NPTVBMRVRFLFxuICAgICAgICAgICAgVFVJX1RFWFRGSUVMRF9DTEVBTkVSLFxuICAgICAgICAgICAgVFVJX1RFWFRGSUVMRF9DVVNUT01fQ09OVEVOVCxcbiAgICAgICAgICAgIFRVSV9URVhURklFTERfRVhBTVBMRV9URVhULFxuICAgICAgICAgICAgVFVJX1RFWFRGSUVMRF9JTlBVVF9NT0RFLFxuICAgICAgICAgICAgVFVJX1RFWFRGSUVMRF9MQUJFTF9PVVRTSURFLFxuICAgICAgICAgICAgVFVJX1RFWFRGSUVMRF9NQVhfTEVOR1RILFxuICAgICAgICAgICAgVFVJX1RFWFRGSUVMRF9TSVpFLFxuICAgICAgICAgICAgVFVJX1RFWFRGSUVMRF9UWVBFLFxuICAgICAgICBdLFxuICAgICAgICB1c2VGYWN0b3J5OiB0ZXh0ZmllbGRXYXRjaGVkQ29udHJvbGxlckZhY3RvcnksXG4gICAgfSxcbl07XG4iXX0=