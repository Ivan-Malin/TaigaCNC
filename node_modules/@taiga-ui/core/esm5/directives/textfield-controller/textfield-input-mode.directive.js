import { __decorate, __extends } from "tslib";
import { Directive, forwardRef, InjectionToken, Input } from '@angular/core';
import { TuiController } from '@taiga-ui/cdk';
export var TUI_TEXTFIELD_INPUT_MODE = new InjectionToken('tuiTextfieldInputMode', { factory: inputModeDirectiveFactory });
var TuiTextfieldInputModeDirective = /** @class */ (function (_super) {
    __extends(TuiTextfieldInputModeDirective, _super);
    function TuiTextfieldInputModeDirective() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.inputMode = "text" /* Text */;
        return _this;
    }
    TuiTextfieldInputModeDirective_1 = TuiTextfieldInputModeDirective;
    var TuiTextfieldInputModeDirective_1;
    __decorate([
        Input('tuiTextfieldInputMode')
    ], TuiTextfieldInputModeDirective.prototype, "inputMode", void 0);
    TuiTextfieldInputModeDirective = TuiTextfieldInputModeDirective_1 = __decorate([
        Directive({
            selector: '[tuiTextfieldInputMode]',
            providers: [
                {
                    provide: TUI_TEXTFIELD_INPUT_MODE,
                    useExisting: forwardRef(function () { return TuiTextfieldInputModeDirective_1; }),
                },
            ],
        })
    ], TuiTextfieldInputModeDirective);
    return TuiTextfieldInputModeDirective;
}(TuiController));
export { TuiTextfieldInputModeDirective };
export function inputModeDirectiveFactory() {
    return new TuiTextfieldInputModeDirective();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLWlucHV0LW1vZGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvZGlyZWN0aXZlcy90ZXh0ZmllbGQtY29udHJvbGxlci8iLCJzb3VyY2VzIjpbInRleHRmaWVsZC1pbnB1dC1tb2RlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUMsYUFBYSxFQUFlLE1BQU0sZUFBZSxDQUFDO0FBRTFELE1BQU0sQ0FBQyxJQUFNLHdCQUF3QixHQUFHLElBQUksY0FBYyxDQUN0RCx1QkFBdUIsRUFDdkIsRUFBQyxPQUFPLEVBQUUseUJBQXlCLEVBQUMsQ0FDdkMsQ0FBQztBQVdGO0lBQW9ELGtEQUFhO0lBQWpFO1FBQUEscUVBR0M7UUFERyxlQUFTLHFCQUFtQzs7SUFDaEQsQ0FBQzt1Q0FIWSw4QkFBOEI7O0lBRXZDO1FBREMsS0FBSyxDQUFDLHVCQUF1QixDQUFDO3FFQUNhO0lBRm5DLDhCQUE4QjtRQVQxQyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUseUJBQXlCO1lBQ25DLFNBQVMsRUFBRTtnQkFDUDtvQkFDSSxPQUFPLEVBQUUsd0JBQXdCO29CQUNqQyxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxnQ0FBOEIsRUFBOUIsQ0FBOEIsQ0FBQztpQkFDaEU7YUFDSjtTQUNKLENBQUM7T0FDVyw4QkFBOEIsQ0FHMUM7SUFBRCxxQ0FBQztDQUFBLEFBSEQsQ0FBb0QsYUFBYSxHQUdoRTtTQUhZLDhCQUE4QjtBQUszQyxNQUFNLFVBQVUseUJBQXlCO0lBQ3JDLE9BQU8sSUFBSSw4QkFBOEIsRUFBRSxDQUFDO0FBQ2hELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgZm9yd2FyZFJlZiwgSW5qZWN0aW9uVG9rZW4sIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpQ29udHJvbGxlciwgVHVpSW5wdXRNb2RlfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcblxuZXhwb3J0IGNvbnN0IFRVSV9URVhURklFTERfSU5QVVRfTU9ERSA9IG5ldyBJbmplY3Rpb25Ub2tlbjxUdWlUZXh0ZmllbGRJbnB1dE1vZGVEaXJlY3RpdmU+KFxuICAgICd0dWlUZXh0ZmllbGRJbnB1dE1vZGUnLFxuICAgIHtmYWN0b3J5OiBpbnB1dE1vZGVEaXJlY3RpdmVGYWN0b3J5fSxcbik7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW3R1aVRleHRmaWVsZElucHV0TW9kZV0nLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBUVUlfVEVYVEZJRUxEX0lOUFVUX01PREUsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUdWlUZXh0ZmllbGRJbnB1dE1vZGVEaXJlY3RpdmUpLFxuICAgICAgICB9LFxuICAgIF0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVRleHRmaWVsZElucHV0TW9kZURpcmVjdGl2ZSBleHRlbmRzIFR1aUNvbnRyb2xsZXIge1xuICAgIEBJbnB1dCgndHVpVGV4dGZpZWxkSW5wdXRNb2RlJylcbiAgICBpbnB1dE1vZGU6IFR1aUlucHV0TW9kZSA9IFR1aUlucHV0TW9kZS5UZXh0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5wdXRNb2RlRGlyZWN0aXZlRmFjdG9yeSgpOiBUdWlUZXh0ZmllbGRJbnB1dE1vZGVEaXJlY3RpdmUge1xuICAgIHJldHVybiBuZXcgVHVpVGV4dGZpZWxkSW5wdXRNb2RlRGlyZWN0aXZlKCk7XG59XG4iXX0=