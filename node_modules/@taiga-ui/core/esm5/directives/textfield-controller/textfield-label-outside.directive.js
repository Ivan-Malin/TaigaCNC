import { __decorate, __extends } from "tslib";
import { Directive, forwardRef, InjectionToken, Input } from '@angular/core';
import { TuiController } from '@taiga-ui/cdk';
export var TUI_TEXTFIELD_LABEL_OUTSIDE = new InjectionToken('tuiTextfieldLabelOutside', { factory: labelOutsideDirectiveFactory });
var TuiTextfieldLabelOutsideDirective = /** @class */ (function (_super) {
    __extends(TuiTextfieldLabelOutsideDirective, _super);
    function TuiTextfieldLabelOutsideDirective() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.labelOutside = false;
        return _this;
    }
    TuiTextfieldLabelOutsideDirective_1 = TuiTextfieldLabelOutsideDirective;
    var TuiTextfieldLabelOutsideDirective_1;
    __decorate([
        Input('tuiTextfieldLabelOutside')
    ], TuiTextfieldLabelOutsideDirective.prototype, "labelOutside", void 0);
    TuiTextfieldLabelOutsideDirective = TuiTextfieldLabelOutsideDirective_1 = __decorate([
        Directive({
            selector: '[tuiTextfieldLabelOutside]',
            providers: [
                {
                    provide: TUI_TEXTFIELD_LABEL_OUTSIDE,
                    useExisting: forwardRef(function () { return TuiTextfieldLabelOutsideDirective_1; }),
                },
            ],
        })
    ], TuiTextfieldLabelOutsideDirective);
    return TuiTextfieldLabelOutsideDirective;
}(TuiController));
export { TuiTextfieldLabelOutsideDirective };
export function labelOutsideDirectiveFactory() {
    return new TuiTextfieldLabelOutsideDirective();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLWxhYmVsLW91dHNpZGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvZGlyZWN0aXZlcy90ZXh0ZmllbGQtY29udHJvbGxlci8iLCJzb3VyY2VzIjpbInRleHRmaWVsZC1sYWJlbC1vdXRzaWRlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTVDLE1BQU0sQ0FBQyxJQUFNLDJCQUEyQixHQUFHLElBQUksY0FBYyxDQUN6RCwwQkFBMEIsRUFDMUIsRUFBQyxPQUFPLEVBQUUsNEJBQTRCLEVBQUMsQ0FDMUMsQ0FBQztBQVdGO0lBQXVELHFEQUFhO0lBQXBFO1FBQUEscUVBR0M7UUFERyxrQkFBWSxHQUFHLEtBQUssQ0FBQzs7SUFDekIsQ0FBQzswQ0FIWSxpQ0FBaUM7O0lBRTFDO1FBREMsS0FBSyxDQUFDLDBCQUEwQixDQUFDOzJFQUNiO0lBRlosaUNBQWlDO1FBVDdDLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSw0QkFBNEI7WUFDdEMsU0FBUyxFQUFFO2dCQUNQO29CQUNJLE9BQU8sRUFBRSwyQkFBMkI7b0JBQ3BDLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLG1DQUFpQyxFQUFqQyxDQUFpQyxDQUFDO2lCQUNuRTthQUNKO1NBQ0osQ0FBQztPQUNXLGlDQUFpQyxDQUc3QztJQUFELHdDQUFDO0NBQUEsQUFIRCxDQUF1RCxhQUFhLEdBR25FO1NBSFksaUNBQWlDO0FBSzlDLE1BQU0sVUFBVSw0QkFBNEI7SUFDeEMsT0FBTyxJQUFJLGlDQUFpQyxFQUFFLENBQUM7QUFDbkQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBmb3J3YXJkUmVmLCBJbmplY3Rpb25Ub2tlbiwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlDb250cm9sbGVyfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcblxuZXhwb3J0IGNvbnN0IFRVSV9URVhURklFTERfTEFCRUxfT1VUU0lERSA9IG5ldyBJbmplY3Rpb25Ub2tlbjxUdWlUZXh0ZmllbGRMYWJlbE91dHNpZGVEaXJlY3RpdmU+KFxuICAgICd0dWlUZXh0ZmllbGRMYWJlbE91dHNpZGUnLFxuICAgIHtmYWN0b3J5OiBsYWJlbE91dHNpZGVEaXJlY3RpdmVGYWN0b3J5fSxcbik7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW3R1aVRleHRmaWVsZExhYmVsT3V0c2lkZV0nLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBUVUlfVEVYVEZJRUxEX0xBQkVMX09VVFNJREUsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUdWlUZXh0ZmllbGRMYWJlbE91dHNpZGVEaXJlY3RpdmUpLFxuICAgICAgICB9LFxuICAgIF0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVRleHRmaWVsZExhYmVsT3V0c2lkZURpcmVjdGl2ZSBleHRlbmRzIFR1aUNvbnRyb2xsZXIge1xuICAgIEBJbnB1dCgndHVpVGV4dGZpZWxkTGFiZWxPdXRzaWRlJylcbiAgICBsYWJlbE91dHNpZGUgPSBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxhYmVsT3V0c2lkZURpcmVjdGl2ZUZhY3RvcnkoKTogVHVpVGV4dGZpZWxkTGFiZWxPdXRzaWRlRGlyZWN0aXZlIHtcbiAgICByZXR1cm4gbmV3IFR1aVRleHRmaWVsZExhYmVsT3V0c2lkZURpcmVjdGl2ZSgpO1xufVxuIl19