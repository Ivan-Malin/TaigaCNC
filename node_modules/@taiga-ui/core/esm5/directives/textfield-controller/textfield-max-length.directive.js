import { __decorate, __extends } from "tslib";
import { Directive, forwardRef, InjectionToken, Input } from '@angular/core';
import { TuiController } from '@taiga-ui/cdk';
export var TUI_TEXTFIELD_MAX_LENGTH = new InjectionToken('tuiTextfieldMaxLength', { factory: maxLengthDirectiveFactory });
var TuiTextfieldMaxLengthDirective = /** @class */ (function (_super) {
    __extends(TuiTextfieldMaxLengthDirective, _super);
    function TuiTextfieldMaxLengthDirective() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.maxLength = null;
        return _this;
    }
    TuiTextfieldMaxLengthDirective_1 = TuiTextfieldMaxLengthDirective;
    var TuiTextfieldMaxLengthDirective_1;
    __decorate([
        Input('tuiTextfieldMaxLength')
    ], TuiTextfieldMaxLengthDirective.prototype, "maxLength", void 0);
    TuiTextfieldMaxLengthDirective = TuiTextfieldMaxLengthDirective_1 = __decorate([
        Directive({
            selector: '[tuiTextfieldMaxLength]',
            providers: [
                {
                    provide: TUI_TEXTFIELD_MAX_LENGTH,
                    useExisting: forwardRef(function () { return TuiTextfieldMaxLengthDirective_1; }),
                },
            ],
        })
    ], TuiTextfieldMaxLengthDirective);
    return TuiTextfieldMaxLengthDirective;
}(TuiController));
export { TuiTextfieldMaxLengthDirective };
export function maxLengthDirectiveFactory() {
    return new TuiTextfieldMaxLengthDirective();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLW1heC1sZW5ndGguZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvZGlyZWN0aXZlcy90ZXh0ZmllbGQtY29udHJvbGxlci8iLCJzb3VyY2VzIjpbInRleHRmaWVsZC1tYXgtbGVuZ3RoLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTVDLE1BQU0sQ0FBQyxJQUFNLHdCQUF3QixHQUFHLElBQUksY0FBYyxDQUN0RCx1QkFBdUIsRUFDdkIsRUFBQyxPQUFPLEVBQUUseUJBQXlCLEVBQUMsQ0FDdkMsQ0FBQztBQVdGO0lBQW9ELGtEQUFhO0lBQWpFO1FBQUEscUVBR0M7UUFERyxlQUFTLEdBQWtCLElBQUksQ0FBQzs7SUFDcEMsQ0FBQzt1Q0FIWSw4QkFBOEI7O0lBRXZDO1FBREMsS0FBSyxDQUFDLHVCQUF1QixDQUFDO3FFQUNDO0lBRnZCLDhCQUE4QjtRQVQxQyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUseUJBQXlCO1lBQ25DLFNBQVMsRUFBRTtnQkFDUDtvQkFDSSxPQUFPLEVBQUUsd0JBQXdCO29CQUNqQyxXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxnQ0FBOEIsRUFBOUIsQ0FBOEIsQ0FBQztpQkFDaEU7YUFDSjtTQUNKLENBQUM7T0FDVyw4QkFBOEIsQ0FHMUM7SUFBRCxxQ0FBQztDQUFBLEFBSEQsQ0FBb0QsYUFBYSxHQUdoRTtTQUhZLDhCQUE4QjtBQUszQyxNQUFNLFVBQVUseUJBQXlCO0lBQ3JDLE9BQU8sSUFBSSw4QkFBOEIsRUFBRSxDQUFDO0FBQ2hELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgZm9yd2FyZFJlZiwgSW5qZWN0aW9uVG9rZW4sIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpQ29udHJvbGxlcn0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5cbmV4cG9ydCBjb25zdCBUVUlfVEVYVEZJRUxEX01BWF9MRU5HVEggPSBuZXcgSW5qZWN0aW9uVG9rZW48VHVpVGV4dGZpZWxkTWF4TGVuZ3RoRGlyZWN0aXZlPihcbiAgICAndHVpVGV4dGZpZWxkTWF4TGVuZ3RoJyxcbiAgICB7ZmFjdG9yeTogbWF4TGVuZ3RoRGlyZWN0aXZlRmFjdG9yeX0sXG4pO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1t0dWlUZXh0ZmllbGRNYXhMZW5ndGhdJyxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogVFVJX1RFWFRGSUVMRF9NQVhfTEVOR1RILFxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVHVpVGV4dGZpZWxkTWF4TGVuZ3RoRGlyZWN0aXZlKSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlUZXh0ZmllbGRNYXhMZW5ndGhEaXJlY3RpdmUgZXh0ZW5kcyBUdWlDb250cm9sbGVyIHtcbiAgICBASW5wdXQoJ3R1aVRleHRmaWVsZE1heExlbmd0aCcpXG4gICAgbWF4TGVuZ3RoOiBudW1iZXIgfCBudWxsID0gbnVsbDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1heExlbmd0aERpcmVjdGl2ZUZhY3RvcnkoKTogVHVpVGV4dGZpZWxkTWF4TGVuZ3RoRGlyZWN0aXZlIHtcbiAgICByZXR1cm4gbmV3IFR1aVRleHRmaWVsZE1heExlbmd0aERpcmVjdGl2ZSgpO1xufVxuIl19