import { __decorate, __extends } from "tslib";
import { Directive, forwardRef, InjectionToken, Input } from '@angular/core';
import { TuiController } from '@taiga-ui/cdk';
export var TUI_TEXTFIELD_TYPE = new InjectionToken('tuiTextfieldType', { factory: typeDirectiveFactory });
var TuiTextfieldTypeDirective = /** @class */ (function (_super) {
    __extends(TuiTextfieldTypeDirective, _super);
    function TuiTextfieldTypeDirective() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = "text" /* Text */;
        return _this;
    }
    TuiTextfieldTypeDirective_1 = TuiTextfieldTypeDirective;
    var TuiTextfieldTypeDirective_1;
    __decorate([
        Input('tuiTextfieldType')
    ], TuiTextfieldTypeDirective.prototype, "type", void 0);
    TuiTextfieldTypeDirective = TuiTextfieldTypeDirective_1 = __decorate([
        Directive({
            selector: '[tuiTextfieldType]',
            providers: [
                {
                    provide: TUI_TEXTFIELD_TYPE,
                    useExisting: forwardRef(function () { return TuiTextfieldTypeDirective_1; }),
                },
            ],
        })
    ], TuiTextfieldTypeDirective);
    return TuiTextfieldTypeDirective;
}(TuiController));
export { TuiTextfieldTypeDirective };
export function typeDirectiveFactory() {
    return new TuiTextfieldTypeDirective();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLXR5cGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvZGlyZWN0aXZlcy90ZXh0ZmllbGQtY29udHJvbGxlci8iLCJzb3VyY2VzIjpbInRleHRmaWVsZC10eXBlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUMsYUFBYSxFQUFlLE1BQU0sZUFBZSxDQUFDO0FBRTFELE1BQU0sQ0FBQyxJQUFNLGtCQUFrQixHQUFHLElBQUksY0FBYyxDQUNoRCxrQkFBa0IsRUFDbEIsRUFBQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUMsQ0FDbEMsQ0FBQztBQVdGO0lBQStDLDZDQUFhO0lBQTVEO1FBQUEscUVBR0M7UUFERyxVQUFJLHFCQUFtQzs7SUFDM0MsQ0FBQztrQ0FIWSx5QkFBeUI7O0lBRWxDO1FBREMsS0FBSyxDQUFDLGtCQUFrQixDQUFDOzJEQUNhO0lBRjlCLHlCQUF5QjtRQVRyQyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsb0JBQW9CO1lBQzlCLFNBQVMsRUFBRTtnQkFDUDtvQkFDSSxPQUFPLEVBQUUsa0JBQWtCO29CQUMzQixXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSwyQkFBeUIsRUFBekIsQ0FBeUIsQ0FBQztpQkFDM0Q7YUFDSjtTQUNKLENBQUM7T0FDVyx5QkFBeUIsQ0FHckM7SUFBRCxnQ0FBQztDQUFBLEFBSEQsQ0FBK0MsYUFBYSxHQUczRDtTQUhZLHlCQUF5QjtBQUt0QyxNQUFNLFVBQVUsb0JBQW9CO0lBQ2hDLE9BQU8sSUFBSSx5QkFBeUIsRUFBRSxDQUFDO0FBQzNDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgZm9yd2FyZFJlZiwgSW5qZWN0aW9uVG9rZW4sIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpQ29udHJvbGxlciwgVHVpSW5wdXRUeXBlfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcblxuZXhwb3J0IGNvbnN0IFRVSV9URVhURklFTERfVFlQRSA9IG5ldyBJbmplY3Rpb25Ub2tlbjxUdWlUZXh0ZmllbGRUeXBlRGlyZWN0aXZlPihcbiAgICAndHVpVGV4dGZpZWxkVHlwZScsXG4gICAge2ZhY3Rvcnk6IHR5cGVEaXJlY3RpdmVGYWN0b3J5fSxcbik7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW3R1aVRleHRmaWVsZFR5cGVdJyxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogVFVJX1RFWFRGSUVMRF9UWVBFLFxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVHVpVGV4dGZpZWxkVHlwZURpcmVjdGl2ZSksXG4gICAgICAgIH0sXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpVGV4dGZpZWxkVHlwZURpcmVjdGl2ZSBleHRlbmRzIFR1aUNvbnRyb2xsZXIge1xuICAgIEBJbnB1dCgndHVpVGV4dGZpZWxkVHlwZScpXG4gICAgdHlwZTogVHVpSW5wdXRUeXBlID0gVHVpSW5wdXRUeXBlLlRleHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0eXBlRGlyZWN0aXZlRmFjdG9yeSgpOiBUdWlUZXh0ZmllbGRUeXBlRGlyZWN0aXZlIHtcbiAgICByZXR1cm4gbmV3IFR1aVRleHRmaWVsZFR5cGVEaXJlY3RpdmUoKTtcbn1cbiJdfQ==