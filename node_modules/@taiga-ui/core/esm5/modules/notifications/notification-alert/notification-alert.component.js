import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, Inject, Input } from '@angular/core';
import { TuiDestroyService, tuiPure } from '@taiga-ui/cdk';
import { timer } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
export var ALERT_AUTOCLOSE_TIMEOUT = 3000;
var TuiNotificationAlertComponent = /** @class */ (function () {
    function TuiNotificationAlertComponent(destroy$) {
        var _this = this;
        timer(ALERT_AUTOCLOSE_TIMEOUT)
            .pipe(takeUntil(destroy$))
            .subscribe(function () {
            if (_this.safeItem.autoClose) {
                _this.closeDialog();
            }
        });
    }
    Object.defineProperty(TuiNotificationAlertComponent.prototype, "safeItem", {
        get: function () {
            if (!this.item) {
                throw new Error('Notification was created as undefined');
            }
            return this.item;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiNotificationAlertComponent.prototype, "context", {
        get: function () {
            return this.calculateContext(this.safeItem);
        },
        enumerable: true,
        configurable: true
    });
    TuiNotificationAlertComponent.prototype.closeDialog = function () {
        this.safeItem.observer.complete();
    };
    TuiNotificationAlertComponent.prototype.calculateContext = function (_a) {
        var status = _a.status, data = _a.data, label = _a.label, observer = _a.observer;
        return {
            $implicit: status,
            data: data,
            label: label,
            closeHook: function () {
                observer.complete();
            },
            emitHook: function (data) {
                observer.next(data);
            },
            emitAndCloseHook: function (data) {
                observer.next(data);
                observer.complete();
            },
        };
    };
    TuiNotificationAlertComponent.ctorParameters = function () { return [
        { type: TuiDestroyService, decorators: [{ type: Inject, args: [TuiDestroyService,] }] }
    ]; };
    __decorate([
        Input()
    ], TuiNotificationAlertComponent.prototype, "item", void 0);
    __decorate([
        tuiPure
    ], TuiNotificationAlertComponent.prototype, "calculateContext", null);
    TuiNotificationAlertComponent = __decorate([
        Component({
            selector: 'tui-notification-alert',
            changeDetection: ChangeDetectionStrategy.OnPush,
            template: "<tui-notification\n    *ngIf=\"safeItem.hasCloseButton else noClose\"\n    [status]=\"safeItem.status\"\n    [hasIcon]=\"safeItem.hasIcon\"\n    (close)=\"closeDialog()\"\n>\n    <label\n        *ngIf=\"safeItem.label\"\n        automation-id=\"tui-notification-alert__heading\"\n        class=\"heading\"\n    >\n        {{safeItem.label}}\n    </label>\n    <div\n        polymorpheus-outlet\n        automation-id=\"tui-notification-alert__content\"\n        class=\"content\"\n        [content]=\"safeItem.content\"\n        [context]=\"context\"\n    ></div>\n</tui-notification>\n<ng-template #noClose>\n    <tui-notification [status]=\"safeItem.status\" [hasIcon]=\"safeItem.hasIcon\">\n        <label\n            *ngIf=\"safeItem.label\"\n            automation-id=\"tui-notification-alert__heading\"\n            class=\"heading\"\n        >\n            {{safeItem.label}}\n        </label>\n        <div\n            polymorpheus-outlet\n            automation-id=\"tui-notification-alert__content\"\n            class=\"content\"\n            [content]=\"safeItem.content\"\n            [context]=\"context\"\n        ></div>\n    </tui-notification>\n</ng-template>\n",
            providers: [TuiDestroyService],
            styles: [":host{box-shadow:0 8px 16px rgba(51,51,51,.2);display:block;border-radius:var(--tui-radius-m)}.heading{font:var(--tui-font-text-m);line-height:20px;font-weight:700;margin:0}.content{color:var(--tui-text-01);word-wrap:break-word}.content:empty{display:none}"]
        }),
        __param(0, Inject(TuiDestroyService))
    ], TuiNotificationAlertComponent);
    return TuiNotificationAlertComponent;
}());
export { TuiNotificationAlertComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLWFsZXJ0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B0YWlnYS11aS9jb3JlL21vZHVsZXMvbm90aWZpY2F0aW9ucy8iLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi1hbGVydC9ub3RpZmljYXRpb24tYWxlcnQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFDLGlCQUFpQixFQUFFLE9BQU8sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUMsS0FBSyxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBQzNCLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUt6QyxNQUFNLENBQUMsSUFBTSx1QkFBdUIsR0FBRyxJQUFJLENBQUM7QUFTNUM7SUFJSSx1Q0FFSSxRQUEyQjtRQUYvQixpQkFXQztRQVBHLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQzthQUN6QixJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQ3pCLFNBQVMsQ0FBQztZQUNQLElBQUksS0FBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUU7Z0JBQ3pCLEtBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQzthQUN0QjtRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUVELHNCQUFJLG1EQUFRO2FBQVo7WUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTtnQkFDWixNQUFNLElBQUksS0FBSyxDQUFDLHVDQUF1QyxDQUFDLENBQUM7YUFDNUQ7WUFFRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDckIsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSxrREFBTzthQUFYO1lBQ0ksT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2hELENBQUM7OztPQUFBO0lBRUQsbURBQVcsR0FBWDtRQUNJLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3RDLENBQUM7SUFHTyx3REFBZ0IsR0FBeEIsVUFBeUIsRUFLQztZQUp0QixrQkFBTSxFQUNOLGNBQUksRUFDSixnQkFBSyxFQUNMLHNCQUFRO1FBRVIsT0FBTztZQUNILFNBQVMsRUFBRSxNQUFNO1lBQ2pCLElBQUksRUFBRSxJQUFJO1lBQ1YsS0FBSyxFQUFFLEtBQUs7WUFDWixTQUFTLEVBQUU7Z0JBQ1AsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQ3hCLENBQUM7WUFDRCxRQUFRLEVBQUUsVUFBQyxJQUFPO2dCQUNkLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDeEIsQ0FBQztZQUNELGdCQUFnQixFQUFFLFVBQUMsSUFBTztnQkFDdEIsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDcEIsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQ3hCLENBQUM7U0FDSixDQUFDO0lBQ04sQ0FBQzs7Z0JBakRhLGlCQUFpQix1QkFEMUIsTUFBTSxTQUFDLGlCQUFpQjs7SUFIN0I7UUFEQyxLQUFLLEVBQUU7K0RBQ3VCO0lBZ0MvQjtRQURDLE9BQU87eUVBc0JQO0lBdkRRLDZCQUE2QjtRQVB6QyxTQUFTLENBQUM7WUFDUCxRQUFRLEVBQUUsd0JBQXdCO1lBQ2xDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1lBQy9DLHlxQ0FBaUQ7WUFFakQsU0FBUyxFQUFFLENBQUMsaUJBQWlCLENBQUM7O1NBQ2pDLENBQUM7UUFNTyxXQUFBLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO09BTHJCLDZCQUE2QixDQXdEekM7SUFBRCxvQ0FBQztDQUFBLEFBeERELElBd0RDO1NBeERZLDZCQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5qZWN0LCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aURlc3Ryb3lTZXJ2aWNlLCB0dWlQdXJlfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7dGltZXJ9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHt0YWtlVW50aWx9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuaW1wb3J0IHtUdWlOb3RpZmljYXRpb25Db250ZW50Q29udGV4dH0gZnJvbSAnLi4vbm90aWZpY2F0aW9uLWNvbnRlbnQtY29udGV4dCc7XG5pbXBvcnQge05vdGlmaWNhdGlvbkFsZXJ0fSBmcm9tICcuL05vdGlmaWNhdGlvbi1hbGVydCc7XG5cbmV4cG9ydCBjb25zdCBBTEVSVF9BVVRPQ0xPU0VfVElNRU9VVCA9IDMwMDA7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLW5vdGlmaWNhdGlvbi1hbGVydCcsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgdGVtcGxhdGVVcmw6ICcuL25vdGlmaWNhdGlvbi1hbGVydC50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9ub3RpZmljYXRpb24tYWxlcnQuc3R5bGUubGVzcyddLFxuICAgIHByb3ZpZGVyczogW1R1aURlc3Ryb3lTZXJ2aWNlXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpTm90aWZpY2F0aW9uQWxlcnRDb21wb25lbnQ8TywgST4ge1xuICAgIEBJbnB1dCgpXG4gICAgaXRlbT86IE5vdGlmaWNhdGlvbkFsZXJ0PE8sIEk+O1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVHVpRGVzdHJveVNlcnZpY2UpXG4gICAgICAgIGRlc3Ryb3kkOiBUdWlEZXN0cm95U2VydmljZSxcbiAgICApIHtcbiAgICAgICAgdGltZXIoQUxFUlRfQVVUT0NMT1NFX1RJTUVPVVQpXG4gICAgICAgICAgICAucGlwZSh0YWtlVW50aWwoZGVzdHJveSQpKVxuICAgICAgICAgICAgLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuc2FmZUl0ZW0uYXV0b0Nsb3NlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2xvc2VEaWFsb2coKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBnZXQgc2FmZUl0ZW0oKTogTm90aWZpY2F0aW9uQWxlcnQ8TywgST4ge1xuICAgICAgICBpZiAoIXRoaXMuaXRlbSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdOb3RpZmljYXRpb24gd2FzIGNyZWF0ZWQgYXMgdW5kZWZpbmVkJyk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy5pdGVtO1xuICAgIH1cblxuICAgIGdldCBjb250ZXh0KCk6IFR1aU5vdGlmaWNhdGlvbkNvbnRlbnRDb250ZXh0PE8sIEk+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FsY3VsYXRlQ29udGV4dCh0aGlzLnNhZmVJdGVtKTtcbiAgICB9XG5cbiAgICBjbG9zZURpYWxvZygpIHtcbiAgICAgICAgdGhpcy5zYWZlSXRlbS5vYnNlcnZlci5jb21wbGV0ZSgpO1xuICAgIH1cblxuICAgIEB0dWlQdXJlXG4gICAgcHJpdmF0ZSBjYWxjdWxhdGVDb250ZXh0KHtcbiAgICAgICAgc3RhdHVzLFxuICAgICAgICBkYXRhLFxuICAgICAgICBsYWJlbCxcbiAgICAgICAgb2JzZXJ2ZXIsXG4gICAgfTogTm90aWZpY2F0aW9uQWxlcnQ8TywgST4pOiBUdWlOb3RpZmljYXRpb25Db250ZW50Q29udGV4dDxPLCBJPiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAkaW1wbGljaXQ6IHN0YXR1cyxcbiAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICBsYWJlbDogbGFiZWwsXG4gICAgICAgICAgICBjbG9zZUhvb2s6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBvYnNlcnZlci5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVtaXRIb29rOiAoZGF0YTogTykgPT4ge1xuICAgICAgICAgICAgICAgIG9ic2VydmVyLm5leHQoZGF0YSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZW1pdEFuZENsb3NlSG9vazogKGRhdGE6IE8pID0+IHtcbiAgICAgICAgICAgICAgICBvYnNlcnZlci5uZXh0KGRhdGEpO1xuICAgICAgICAgICAgICAgIG9ic2VydmVyLmNvbXBsZXRlKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbn1cbiJdfQ==