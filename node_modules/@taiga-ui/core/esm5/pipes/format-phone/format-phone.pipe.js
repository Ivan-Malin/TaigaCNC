import { __decorate } from "tslib";
import { Pipe } from '@angular/core';
import { tuiAssert } from '@taiga-ui/cdk';
import { formatPhone } from '@taiga-ui/core/utils/format';
var TuiFormatPhonePipe = /** @class */ (function () {
    function TuiFormatPhonePipe() {
    }
    /**
     * Formats phone number string of +7XXXXXXXXXX fomrat with adding separator symbols
     * @param value
     * @param countryCode
     * @param phoneMask
     * @return formatted phone number string +7(XXX)XXX-XX-XX
     */
    TuiFormatPhonePipe.prototype.transform = function (value, countryCode, phoneMask) {
        if (countryCode === void 0) { countryCode = '+7'; }
        if (phoneMask === void 0) { phoneMask = '(###) ###-##-##'; }
        tuiAssert.assert(value !== undefined, 'Undefined was passed to tuiFormatPhone pipe');
        return formatPhone(value, countryCode, phoneMask);
    };
    TuiFormatPhonePipe = __decorate([
        Pipe({ name: 'tuiFormatPhone' })
    ], TuiFormatPhonePipe);
    return TuiFormatPhonePipe;
}());
export { TuiFormatPhonePipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LXBob25lLnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkvY29yZS9waXBlcy9mb3JtYXQtcGhvbmUvIiwic291cmNlcyI6WyJmb3JtYXQtcGhvbmUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLElBQUksRUFBZ0IsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN4QyxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sNkJBQTZCLENBQUM7QUFHeEQ7SUFBQTtJQW9CQSxDQUFDO0lBbkJHOzs7Ozs7T0FNRztJQUNILHNDQUFTLEdBQVQsVUFDSSxLQUFhLEVBQ2IsV0FBMEIsRUFDMUIsU0FBcUM7UUFEckMsNEJBQUEsRUFBQSxrQkFBMEI7UUFDMUIsMEJBQUEsRUFBQSw2QkFBcUM7UUFFckMsU0FBUyxDQUFDLE1BQU0sQ0FDWixLQUFLLEtBQUssU0FBUyxFQUNuQiw2Q0FBNkMsQ0FDaEQsQ0FBQztRQUVGLE9BQU8sV0FBVyxDQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQW5CUSxrQkFBa0I7UUFEOUIsSUFBSSxDQUFDLEVBQUMsSUFBSSxFQUFFLGdCQUFnQixFQUFDLENBQUM7T0FDbEIsa0JBQWtCLENBb0I5QjtJQUFELHlCQUFDO0NBQUEsQUFwQkQsSUFvQkM7U0FwQlksa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQaXBlLCBQaXBlVHJhbnNmb3JtfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpQXNzZXJ0fSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7Zm9ybWF0UGhvbmV9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3V0aWxzL2Zvcm1hdCc7XG5cbkBQaXBlKHtuYW1lOiAndHVpRm9ybWF0UGhvbmUnfSlcbmV4cG9ydCBjbGFzcyBUdWlGb3JtYXRQaG9uZVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgICAvKipcbiAgICAgKiBGb3JtYXRzIHBob25lIG51bWJlciBzdHJpbmcgb2YgKzdYWFhYWFhYWFhYIGZvbXJhdCB3aXRoIGFkZGluZyBzZXBhcmF0b3Igc3ltYm9sc1xuICAgICAqIEBwYXJhbSB2YWx1ZVxuICAgICAqIEBwYXJhbSBjb3VudHJ5Q29kZVxuICAgICAqIEBwYXJhbSBwaG9uZU1hc2tcbiAgICAgKiBAcmV0dXJuIGZvcm1hdHRlZCBwaG9uZSBudW1iZXIgc3RyaW5nICs3KFhYWClYWFgtWFgtWFhcbiAgICAgKi9cbiAgICB0cmFuc2Zvcm0oXG4gICAgICAgIHZhbHVlOiBzdHJpbmcsXG4gICAgICAgIGNvdW50cnlDb2RlOiBzdHJpbmcgPSAnKzcnLFxuICAgICAgICBwaG9uZU1hc2s6IHN0cmluZyA9ICcoIyMjKSAjIyMtIyMtIyMnLFxuICAgICk6IHN0cmluZyB7XG4gICAgICAgIHR1aUFzc2VydC5hc3NlcnQoXG4gICAgICAgICAgICB2YWx1ZSAhPT0gdW5kZWZpbmVkLFxuICAgICAgICAgICAgJ1VuZGVmaW5lZCB3YXMgcGFzc2VkIHRvIHR1aUZvcm1hdFBob25lIHBpcGUnLFxuICAgICAgICApO1xuXG4gICAgICAgIHJldHVybiBmb3JtYXRQaG9uZSh2YWx1ZSwgY291bnRyeUNvZGUsIHBob25lTWFzayk7XG4gICAgfVxufVxuIl19