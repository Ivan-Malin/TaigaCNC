var WIDTH_SEARCH = 'width="';
var HEIGHT_SEARCH = 'height="';
var START = '<svg';
export function processIcon(source, name) {
    if (source.includes("id=\"" + name + "\"")) {
        return source;
    }
    var src = source.substring(source.indexOf(START));
    var attributes = src.substring(0, src.indexOf('>'));
    if (!attributes ||
        !attributes.includes(WIDTH_SEARCH) ||
        !attributes.includes(HEIGHT_SEARCH)) {
        return (src.replace(START, "<svg xmlns=\"http://www.w3.org/2000/svg\"><g id=\"" + name + "\" xmlns=\"http://www.w3.org/2000/svg\"><svg") + '</g></svg>');
    }
    var indexOfWidth = attributes.indexOf(WIDTH_SEARCH);
    var indexOfHeight = attributes.indexOf(HEIGHT_SEARCH);
    var widthOffset = indexOfWidth + WIDTH_SEARCH.length;
    var heightOffset = indexOfHeight + HEIGHT_SEARCH.length;
    var widthString = attributes.substring(widthOffset, attributes.indexOf('"', widthOffset));
    var heightString = attributes.substring(heightOffset, attributes.indexOf('"', heightOffset));
    if (!heightString ||
        !widthString ||
        widthString.includes('%') ||
        heightString.includes('%')) {
        return src.replace(START, "<svg id=\"" + name + "\"");
    }
    var width = parseInt(widthString, 10);
    var height = parseInt(heightString, 10);
    var transform = "translate(-" + width / 2 + ",-" + height / 2 + ")";
    return "<g id=\"" + name + "\" xmlns=\"http://www.w3.org/2000/svg\" transform=\"" + transform + "\"><svg x=\"50%\" y=\"50%\">" + src + "</svg></g>";
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzcy1pY29uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2NvcmUvdXRpbHMvZG9tLyIsInNvdXJjZXMiOlsicHJvY2Vzcy1pY29uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQU0sWUFBWSxHQUFHLFNBQVMsQ0FBQztBQUMvQixJQUFNLGFBQWEsR0FBRyxVQUFVLENBQUM7QUFDakMsSUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDO0FBRXJCLE1BQU0sVUFBVSxXQUFXLENBQUMsTUFBYyxFQUFFLElBQVk7SUFDcEQsSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLFVBQU8sSUFBSSxPQUFHLENBQUMsRUFBRTtRQUNqQyxPQUFPLE1BQU0sQ0FBQztLQUNqQjtJQUVELElBQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3BELElBQU0sVUFBVSxHQUFHLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUV0RCxJQUNJLENBQUMsVUFBVTtRQUNYLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUM7UUFDbEMsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxFQUNyQztRQUNFLE9BQU8sQ0FDSCxHQUFHLENBQUMsT0FBTyxDQUNQLEtBQUssRUFDTCx1REFBa0QsSUFBSSxpREFBMkMsQ0FDcEcsR0FBRyxZQUFZLENBQ25CLENBQUM7S0FDTDtJQUVELElBQU0sWUFBWSxHQUFHLFVBQVUsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDdEQsSUFBTSxhQUFhLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN4RCxJQUFNLFdBQVcsR0FBRyxZQUFZLEdBQUcsWUFBWSxDQUFDLE1BQU0sQ0FBQztJQUN2RCxJQUFNLFlBQVksR0FBRyxhQUFhLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQztJQUMxRCxJQUFNLFdBQVcsR0FBRyxVQUFVLENBQUMsU0FBUyxDQUNwQyxXQUFXLEVBQ1gsVUFBVSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsV0FBVyxDQUFDLENBQ3ZDLENBQUM7SUFDRixJQUFNLFlBQVksR0FBRyxVQUFVLENBQUMsU0FBUyxDQUNyQyxZQUFZLEVBQ1osVUFBVSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsWUFBWSxDQUFDLENBQ3hDLENBQUM7SUFFRixJQUNJLENBQUMsWUFBWTtRQUNiLENBQUMsV0FBVztRQUNaLFdBQVcsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDO1FBQ3pCLFlBQVksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQzVCO1FBQ0UsT0FBTyxHQUFHLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxlQUFZLElBQUksT0FBRyxDQUFDLENBQUM7S0FDbEQ7SUFFRCxJQUFNLEtBQUssR0FBRyxRQUFRLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3hDLElBQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxZQUFZLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDMUMsSUFBTSxTQUFTLEdBQUcsZ0JBQWMsS0FBSyxHQUFHLENBQUMsVUFBSyxNQUFNLEdBQUcsQ0FBQyxNQUFHLENBQUM7SUFFNUQsT0FBTyxhQUFVLElBQUksNERBQW1ELFNBQVMsb0NBQTBCLEdBQUcsZUFBWSxDQUFDO0FBQy9ILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBXSURUSF9TRUFSQ0ggPSAnd2lkdGg9XCInO1xuY29uc3QgSEVJR0hUX1NFQVJDSCA9ICdoZWlnaHQ9XCInO1xuY29uc3QgU1RBUlQgPSAnPHN2Zyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm9jZXNzSWNvbihzb3VyY2U6IHN0cmluZywgbmFtZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBpZiAoc291cmNlLmluY2x1ZGVzKGBpZD1cIiR7bmFtZX1cImApKSB7XG4gICAgICAgIHJldHVybiBzb3VyY2U7XG4gICAgfVxuXG4gICAgY29uc3Qgc3JjID0gc291cmNlLnN1YnN0cmluZyhzb3VyY2UuaW5kZXhPZihTVEFSVCkpO1xuICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSBzcmMuc3Vic3RyaW5nKDAsIHNyYy5pbmRleE9mKCc+JykpO1xuXG4gICAgaWYgKFxuICAgICAgICAhYXR0cmlidXRlcyB8fFxuICAgICAgICAhYXR0cmlidXRlcy5pbmNsdWRlcyhXSURUSF9TRUFSQ0gpIHx8XG4gICAgICAgICFhdHRyaWJ1dGVzLmluY2x1ZGVzKEhFSUdIVF9TRUFSQ0gpXG4gICAgKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICBzcmMucmVwbGFjZShcbiAgICAgICAgICAgICAgICBTVEFSVCxcbiAgICAgICAgICAgICAgICBgPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PGcgaWQ9XCIke25hbWV9XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxzdmdgLFxuICAgICAgICAgICAgKSArICc8L2c+PC9zdmc+J1xuICAgICAgICApO1xuICAgIH1cblxuICAgIGNvbnN0IGluZGV4T2ZXaWR0aCA9IGF0dHJpYnV0ZXMuaW5kZXhPZihXSURUSF9TRUFSQ0gpO1xuICAgIGNvbnN0IGluZGV4T2ZIZWlnaHQgPSBhdHRyaWJ1dGVzLmluZGV4T2YoSEVJR0hUX1NFQVJDSCk7XG4gICAgY29uc3Qgd2lkdGhPZmZzZXQgPSBpbmRleE9mV2lkdGggKyBXSURUSF9TRUFSQ0gubGVuZ3RoO1xuICAgIGNvbnN0IGhlaWdodE9mZnNldCA9IGluZGV4T2ZIZWlnaHQgKyBIRUlHSFRfU0VBUkNILmxlbmd0aDtcbiAgICBjb25zdCB3aWR0aFN0cmluZyA9IGF0dHJpYnV0ZXMuc3Vic3RyaW5nKFxuICAgICAgICB3aWR0aE9mZnNldCxcbiAgICAgICAgYXR0cmlidXRlcy5pbmRleE9mKCdcIicsIHdpZHRoT2Zmc2V0KSxcbiAgICApO1xuICAgIGNvbnN0IGhlaWdodFN0cmluZyA9IGF0dHJpYnV0ZXMuc3Vic3RyaW5nKFxuICAgICAgICBoZWlnaHRPZmZzZXQsXG4gICAgICAgIGF0dHJpYnV0ZXMuaW5kZXhPZignXCInLCBoZWlnaHRPZmZzZXQpLFxuICAgICk7XG5cbiAgICBpZiAoXG4gICAgICAgICFoZWlnaHRTdHJpbmcgfHxcbiAgICAgICAgIXdpZHRoU3RyaW5nIHx8XG4gICAgICAgIHdpZHRoU3RyaW5nLmluY2x1ZGVzKCclJykgfHxcbiAgICAgICAgaGVpZ2h0U3RyaW5nLmluY2x1ZGVzKCclJylcbiAgICApIHtcbiAgICAgICAgcmV0dXJuIHNyYy5yZXBsYWNlKFNUQVJULCBgPHN2ZyBpZD1cIiR7bmFtZX1cImApO1xuICAgIH1cblxuICAgIGNvbnN0IHdpZHRoID0gcGFyc2VJbnQod2lkdGhTdHJpbmcsIDEwKTtcbiAgICBjb25zdCBoZWlnaHQgPSBwYXJzZUludChoZWlnaHRTdHJpbmcsIDEwKTtcbiAgICBjb25zdCB0cmFuc2Zvcm0gPSBgdHJhbnNsYXRlKC0ke3dpZHRoIC8gMn0sLSR7aGVpZ2h0IC8gMn0pYDtcblxuICAgIHJldHVybiBgPGcgaWQ9XCIke25hbWV9XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHRyYW5zZm9ybT1cIiR7dHJhbnNmb3JtfVwiPjxzdmcgeD1cIjUwJVwiIHk9XCI1MCVcIj4ke3NyY308L3N2Zz48L2c+YDtcbn1cbiJdfQ==