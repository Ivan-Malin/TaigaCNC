{"version":3,"file":"taiga-ui-core-components-link.js","sources":["ng://@taiga-ui/core/components/link/link.component.ts","ng://@taiga-ui/core/components/link/link.module.ts","ng://@taiga-ui/core/components/link/taiga-ui-core-components-link.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    forwardRef,\n    HostBinding,\n    Inject,\n    Input,\n    Optional,\n} from '@angular/core';\nimport {RouterLinkActive} from '@angular/router';\nimport {\n    isNativeFocused,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    tuiDefaultProp,\n    TuiDestroyService,\n    TuiFocusableElementAccessor,\n    TuiFocusVisibleService,\n    TuiNativeFocusableElement,\n} from '@taiga-ui/cdk';\nimport {TuiLinkMode} from '@taiga-ui/core/enums';\nimport {MODE_PROVIDER} from '@taiga-ui/core/providers';\nimport {TUI_MODE} from '@taiga-ui/core/tokens';\nimport {TuiBrightness, TuiHorizontalDirection} from '@taiga-ui/core/types';\nimport {Observable} from 'rxjs';\n\n// @bad TODO: Think about extending Interactive\n@Component({\n    selector: 'a[tuiLink], button[tuiLink]',\n    templateUrl: './link.template.html',\n    styleUrls: ['./link.style.less'],\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiLinkComponent),\n        },\n        TuiFocusVisibleService,\n        TuiDestroyService,\n        MODE_PROVIDER,\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'tuiLink',\n    host: {\n        '($.data-mode.attr)': 'mode$',\n    },\n})\nexport class TuiLinkComponent implements TuiFocusableElementAccessor {\n    @Input()\n    @HostBinding('class._pseudo')\n    @tuiDefaultProp()\n    pseudo = false;\n\n    @Input()\n    @tuiDefaultProp()\n    icon: string | null = null;\n\n    @Input()\n    @tuiDefaultProp()\n    iconAlign: TuiHorizontalDirection = 'right';\n\n    @Input()\n    @HostBinding('class._icon-rotated')\n    @tuiDefaultProp()\n    iconRotated = false;\n\n    @Input()\n    @HostBinding('attr.data-mode')\n    @tuiDefaultProp()\n    mode: TuiLinkMode | null = null;\n\n    @HostBinding('class._focus-visible')\n    focusVisible = false;\n\n    constructor(\n        @Inject(ElementRef)\n        private readonly elementRef: ElementRef<TuiNativeFocusableElement>,\n        @Inject(TUI_MODE) readonly mode$: Observable<TuiBrightness | null>,\n        @Optional()\n        @Inject(RouterLinkActive)\n        private readonly routerLinkActive: RouterLinkActive | null,\n        @Inject(TuiFocusVisibleService)\n        focusVisible$: TuiFocusVisibleService,\n    ) {\n        focusVisible$.subscribe(visible => {\n            this.focusVisible = visible;\n        });\n    }\n\n    get nativeFocusableElement(): TuiNativeFocusableElement {\n        return this.elementRef.nativeElement;\n    }\n\n    get focused(): boolean {\n        return isNativeFocused(this.nativeFocusableElement);\n    }\n\n    @HostBinding('class._active')\n    get active(): boolean {\n        return !!this.routerLinkActive && this.routerLinkActive.isActive;\n    }\n\n    get hasIcon(): boolean {\n        return this.icon !== null;\n    }\n\n    get iconAlignLeft(): boolean {\n        return this.hasIcon && this.iconAlign === 'left';\n    }\n\n    get iconAlignRight(): boolean {\n        return this.hasIcon && this.iconAlign === 'right';\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiSvgModule} from '@taiga-ui/core/components/svg';\n\nimport {TuiLinkComponent} from './link.component';\n\n@NgModule({\n    imports: [CommonModule, TuiSvgModule],\n    declarations: [TuiLinkComponent],\n    exports: [TuiLinkComponent],\n})\nexport class TuiLinkModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}