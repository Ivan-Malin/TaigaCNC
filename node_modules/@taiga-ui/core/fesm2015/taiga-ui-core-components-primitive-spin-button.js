import { __decorate, __param } from 'tslib';
import { EventEmitter, Inject, Input, Output, ViewChild, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { AbstractTuiInteractive, isNativeFocused, tuiDefaultProp, TuiFocusVisibleModule, TuiFocusedModule, TuiFocusableModule, TuiPreventDefaultModule } from '@taiga-ui/cdk';
import { TUI_SPIN_TEXTS } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
import { CommonModule } from '@angular/common';
import { TuiButtonModule } from '@taiga-ui/core/components/button';

// @dynamic
let TuiPrimitiveSpinButtonComponent = class TuiPrimitiveSpinButtonComponent extends AbstractTuiInteractive {
    constructor(spinTexts$) {
        super();
        this.spinTexts$ = spinTexts$;
        this.disabled = false;
        this.mode = "flat" /* Flat */;
        this.leftDisabled = false;
        this.rightDisabled = false;
        this.leftClick = new EventEmitter();
        this.rightClick = new EventEmitter();
    }
    get focused() {
        return !!this.wrapper && isNativeFocused(this.wrapper.nativeElement);
    }
    get leftComputedDisabled() {
        return this.computedDisabled || this.leftDisabled;
    }
    get rightComputedDisabled() {
        return this.computedDisabled || this.rightDisabled;
    }
    onLeftClick() {
        if (!this.leftComputedDisabled) {
            this.leftClick.emit();
        }
    }
    onRightClick() {
        if (!this.rightComputedDisabled) {
            this.rightClick.emit();
        }
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
    onFocusVisible(focusVisible) {
        this.updateFocusVisible(focusVisible);
    }
};
TuiPrimitiveSpinButtonComponent.ctorParameters = () => [
    { type: Observable, decorators: [{ type: Inject, args: [TUI_SPIN_TEXTS,] }] }
];
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveSpinButtonComponent.prototype, "disabled", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveSpinButtonComponent.prototype, "mode", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveSpinButtonComponent.prototype, "leftDisabled", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiPrimitiveSpinButtonComponent.prototype, "rightDisabled", void 0);
__decorate([
    Output()
], TuiPrimitiveSpinButtonComponent.prototype, "leftClick", void 0);
__decorate([
    Output()
], TuiPrimitiveSpinButtonComponent.prototype, "rightClick", void 0);
__decorate([
    ViewChild('wrapper')
], TuiPrimitiveSpinButtonComponent.prototype, "wrapper", void 0);
TuiPrimitiveSpinButtonComponent = __decorate([
    Component({
        selector: 'tui-primitive-spin-button',
        changeDetection: ChangeDetectionStrategy.OnPush,
        template: "<div\n    *ngIf=\"spinTexts$ | async as texts\"\n    class=\"wrapper\"\n    tuiPreventDefault=\"mousedown\"\n    #wrapper\n    [tuiFocusable]=\"computedFocusable\"\n    (tuiFocusedChange)=\"onFocused($event)\"\n    (tuiFocusVisibleChange)=\"onFocusVisible($event)\"\n    (keydown.arrowLeft)=\"onLeftClick()\"\n    (keydown.arrowRight)=\"onRightClick()\"\n>\n    <button\n        tuiIconButton\n        type=\"button\"\n        size=\"xs\"\n        appearance=\"\"\n        automation-id=\"tui-primitive-spin-button__left\"\n        icon=\"tuiIconChevronLeftLarge\"\n        class=\"arrow\"\n        [class.arrow_hidden]=\"leftComputedDisabled\"\n        [title]=\"texts[0]\"\n        [focusable]=\"false\"\n        (click)=\"onLeftClick()\"\n    ></button>\n    <span class=\"content\">\n        <ng-content></ng-content>\n    </span>\n    <button\n        tuiIconButton\n        type=\"button\"\n        size=\"xs\"\n        appearance=\"\"\n        automation-id=\"tui-primitive-spin-button__right\"\n        icon=\"tuiIconChevronRightLarge\"\n        class=\"arrow\"\n        [class.arrow_hidden]=\"rightComputedDisabled\"\n        [title]=\"texts[1]\"\n        [focusable]=\"false\"\n        (click)=\"onRightClick()\"\n    ></button>\n</div>\n",
        styles: [":host{font:var(--tui-font-text-l);display:block;text-align:center;font-weight:700}.wrapper{display:flex;align-items:center;justify-content:space-between;outline:0}.arrow{margin:0 4px}.arrow_hidden{visibility:hidden}.content{padding:0 8px}:host._focus-visible .content{box-shadow:0 0 0 2px var(--tui-focus)}"]
    }),
    __param(0, Inject(TUI_SPIN_TEXTS))
], TuiPrimitiveSpinButtonComponent);

let TuiPrimitiveSpinButtonModule = class TuiPrimitiveSpinButtonModule {
};
TuiPrimitiveSpinButtonModule = __decorate([
    NgModule({
        imports: [
            CommonModule,
            TuiFocusVisibleModule,
            TuiFocusedModule,
            TuiFocusableModule,
            TuiPreventDefaultModule,
            TuiButtonModule,
        ],
        declarations: [TuiPrimitiveSpinButtonComponent],
        exports: [TuiPrimitiveSpinButtonComponent],
    })
], TuiPrimitiveSpinButtonModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TuiPrimitiveSpinButtonComponent, TuiPrimitiveSpinButtonModule };
//# sourceMappingURL=taiga-ui-core-components-primitive-spin-button.js.map
