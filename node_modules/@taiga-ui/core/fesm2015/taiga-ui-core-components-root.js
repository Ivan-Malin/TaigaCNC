import { __decorate, __param } from 'tslib';
import { ElementRef, Inject, Optional, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { EVENT_MANAGER_PLUGINS } from '@angular/platform-browser';
import { tuiAssert, TUI_DIALOGS, TUI_IS_MOBILE, TuiDragModule, TuiPortalHostModule, TuiDialogHostModule } from '@taiga-ui/cdk';
import { tuiFadeIn } from '@taiga-ui/core/animations';
import { VERSION } from '@taiga-ui/core/constants';
import { TuiNotificationsHostComponent } from '@taiga-ui/core/modules/notifications';
import { TUI_ASSERT_ENABLED } from '@taiga-ui/core/tokens';
import { SilentEventPlugin, NG_EVENT_PLUGINS } from '@tinkoff/ng-event-plugins';
import { merge, of } from 'rxjs';
import { map } from 'rxjs/operators';
import { CommonModule } from '@angular/common';
import { TuiHintsHostModule } from '@taiga-ui/core/components/hints-host';
import { TuiScrollControlsModule } from '@taiga-ui/core/components/scroll-controls';
import { TuiSvgDefsHostModule } from '@taiga-ui/core/internal/svg-defs-host';

// @dynamic
let TuiRootComponent = class TuiRootComponent {
    constructor(elementRef, dialogs, notificationsHost, isMobile, plugins, enabled) {
        this.elementRef = elementRef;
        this.dialogs = dialogs;
        this.notificationsHost = notificationsHost;
        this.isMobile = isMobile;
        this.scrollbars$ = this.dialogs && !this.isMobile
            ? merge(...this.dialogs).pipe(map(({ length }) => !length))
            : of(!this.isMobile);
        tuiAssert.enabled = enabled;
        tuiAssert.assert(!(plugins[0] instanceof SilentEventPlugin), 'PlatformBrowser or PlatformServer modules must come before TuiRootModule in your main module');
    }
};
TuiRootComponent.ctorParameters = () => [
    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TUI_DIALOGS,] }] },
    { type: TuiNotificationsHostComponent, decorators: [{ type: Optional }, { type: Inject, args: [TuiNotificationsHostComponent,] }] },
    { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_MOBILE,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [EVENT_MANAGER_PLUGINS,] }] },
    { type: Boolean, decorators: [{ type: Inject, args: [TUI_ASSERT_ENABLED,] }] }
];
TuiRootComponent = __decorate([
    Component({
        selector: 'tui-root',
        template: "<tui-scroll-controls\n    *ngIf=\"scrollbars$ | async\"\n    class=\"scrollbar\"\n></tui-scroll-controls>\n<tui-svg-defs-host></tui-svg-defs-host>\n<tui-portal-host>\n    <div class=\"content\">\n        <ng-content></ng-content>\n    </div>\n    <tui-dialog-host *ngIf=\"dialogs && dialogs.length\"></tui-dialog-host>\n    <ng-content select=\"tuiOverDialogs\"></ng-content>\n    <ng-container\n        *ngIf=\"notificationsHost\"\n        [ngComponentOutlet]=\"notificationsHost\"\n    ></ng-container>\n    <ng-content select=\"tuiOverNotifications\"></ng-content>\n</tui-portal-host>\n<ng-content select=\"tuiOverPortals\"></ng-content>\n<tui-hints-host></tui-hints-host>\n<ng-content select=\"tuiOverHints\"></ng-content>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        host: {
            'data-tui-version': VERSION,
        },
        animations: [tuiFadeIn],
        styles: [":host{position:relative;display:block;flex:1}.scrollbar{position:fixed;top:0;left:0;bottom:0;right:0;margin:0}.content{position:relative;z-index:0;height:100%}"]
    }),
    __param(0, Inject(ElementRef)),
    __param(1, Optional()),
    __param(1, Inject(TUI_DIALOGS)),
    __param(2, Optional()),
    __param(2, Inject(TuiNotificationsHostComponent)),
    __param(3, Inject(TUI_IS_MOBILE)),
    __param(4, Inject(EVENT_MANAGER_PLUGINS)),
    __param(5, Inject(TUI_ASSERT_ENABLED))
], TuiRootComponent);

let TuiRootModule = class TuiRootModule {
};
TuiRootModule = __decorate([
    NgModule({
        imports: [
            CommonModule,
            TuiDragModule,
            TuiPortalHostModule,
            TuiSvgDefsHostModule,
            TuiHintsHostModule,
            TuiDialogHostModule,
            TuiScrollControlsModule,
        ],
        declarations: [TuiRootComponent],
        exports: [TuiRootComponent],
        providers: [NG_EVENT_PLUGINS],
    })
], TuiRootModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TuiRootComponent, TuiRootModule };
//# sourceMappingURL=taiga-ui-core-components-root.js.map
