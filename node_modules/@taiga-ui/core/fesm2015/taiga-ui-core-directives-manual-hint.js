import { __decorate, __param } from 'tslib';
import { ElementRef, Inject, Input, Directive, NgModule } from '@angular/core';
import { tuiDefaultProp, tuiRequiredSetter } from '@taiga-ui/cdk';
import { AbstractTuiHint } from '@taiga-ui/core/abstract';
import { TuiHintService } from '@taiga-ui/core/services';

let TuiManualHintDirective = class TuiManualHintDirective extends AbstractTuiHint {
    constructor(elementRef, hintService) {
        super(elementRef, hintService);
        this.content = '';
    }
    set tuiManualHintShow(show) {
        if (show) {
            this.showTooltip();
        }
        else {
            this.hideTooltip();
        }
    }
    getElementClientRect() {
        return this.elementRef.nativeElement.getBoundingClientRect();
    }
};
TuiManualHintDirective.ctorParameters = () => [
    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },
    { type: TuiHintService, decorators: [{ type: Inject, args: [TuiHintService,] }] }
];
__decorate([
    Input('tuiManualHint'),
    tuiDefaultProp()
], TuiManualHintDirective.prototype, "content", void 0);
__decorate([
    Input(),
    tuiRequiredSetter()
], TuiManualHintDirective.prototype, "tuiManualHintShow", null);
TuiManualHintDirective = __decorate([
    Directive({
        selector: '[tuiManualHint]:not(ng-container)',
    }),
    __param(0, Inject(ElementRef)),
    __param(1, Inject(TuiHintService))
], TuiManualHintDirective);

let TuiManualHintModule = class TuiManualHintModule {
};
TuiManualHintModule = __decorate([
    NgModule({
        declarations: [TuiManualHintDirective],
        exports: [TuiManualHintDirective],
    })
], TuiManualHintModule);

/**
 * Generated bundle index. Do not edit.
 */

export { TuiManualHintDirective, TuiManualHintModule };
//# sourceMappingURL=taiga-ui-core-directives-manual-hint.js.map
