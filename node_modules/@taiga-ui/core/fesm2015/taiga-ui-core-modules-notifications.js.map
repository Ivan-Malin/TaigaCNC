{"version":3,"file":"taiga-ui-core-modules-notifications.js","sources":["ng://@taiga-ui/core/modules/notifications/notification-alert/notification-alert.component.ts","ng://@taiga-ui/core/modules/notifications/notification-alert/notification-alert.module.ts","ng://@taiga-ui/core/modules/notifications/notification-alert/Notification-alert.ts","ng://@taiga-ui/core/modules/notifications/notifications.service.ts","ng://@taiga-ui/core/modules/notifications/notifications-host/notifications-host.component.ts","ng://@taiga-ui/core/modules/notifications/notifications.module.ts","ng://@taiga-ui/core/modules/notifications/taiga-ui-core-modules-notifications.ts"],"sourcesContent":["import {ChangeDetectionStrategy, Component, Inject, Input} from '@angular/core';\nimport {TuiDestroyService, tuiPure} from '@taiga-ui/cdk';\nimport {timer} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {TuiNotificationContentContext} from '../notification-content-context';\nimport {NotificationAlert} from './Notification-alert';\n\nexport const ALERT_AUTOCLOSE_TIMEOUT = 3000;\n\n@Component({\n    selector: 'tui-notification-alert',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './notification-alert.template.html',\n    styleUrls: ['./notification-alert.style.less'],\n    providers: [TuiDestroyService],\n})\nexport class TuiNotificationAlertComponent<O, I> {\n    @Input()\n    item?: NotificationAlert<O, I>;\n\n    constructor(\n        @Inject(TuiDestroyService)\n        destroy$: TuiDestroyService,\n    ) {\n        timer(ALERT_AUTOCLOSE_TIMEOUT)\n            .pipe(takeUntil(destroy$))\n            .subscribe(() => {\n                if (this.safeItem.autoClose) {\n                    this.closeDialog();\n                }\n            });\n    }\n\n    get safeItem(): NotificationAlert<O, I> {\n        if (!this.item) {\n            throw new Error('Notification was created as undefined');\n        }\n\n        return this.item;\n    }\n\n    get context(): TuiNotificationContentContext<O, I> {\n        return this.calculateContext(this.safeItem);\n    }\n\n    closeDialog() {\n        this.safeItem.observer.complete();\n    }\n\n    @tuiPure\n    private calculateContext({\n        status,\n        data,\n        label,\n        observer,\n    }: NotificationAlert<O, I>): TuiNotificationContentContext<O, I> {\n        return {\n            $implicit: status,\n            data: data,\n            label: label,\n            closeHook: () => {\n                observer.complete();\n            },\n            emitHook: (data: O) => {\n                observer.next(data);\n            },\n            emitAndCloseHook: (data: O) => {\n                observer.next(data);\n                observer.complete();\n            },\n        };\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiNotificationModule} from '@taiga-ui/core/components/notification';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiNotificationAlertComponent} from './notification-alert.component';\n\n@NgModule({\n    imports: [CommonModule, PolymorpheusModule, TuiNotificationModule],\n    declarations: [TuiNotificationAlertComponent],\n    exports: [TuiNotificationAlertComponent],\n})\nexport class TuiNotificationAlertModule {}\n","import {TuiNotification} from '@taiga-ui/core/enums';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {Observer} from 'rxjs';\nimport {TuiNotificationContentContext} from '../notification-content-context';\nimport {\n    TuiNotificationOptions,\n    TuiNotificationOptionsWithData,\n} from '../notification-options';\n\nexport class NotificationAlert<O, I> {\n    readonly status: TuiNotification;\n\n    readonly hasIcon: boolean;\n\n    readonly autoClose: boolean;\n\n    readonly hasCloseButton: boolean;\n\n    readonly label: string;\n\n    readonly data!: I;\n\n    readonly observer: Observer<O>;\n\n    readonly content: PolymorpheusContent<TuiNotificationContentContext<O, I>>;\n\n    constructor(\n        observer: Observer<O>,\n        content: PolymorpheusContent<TuiNotificationContentContext<O, I>>,\n        options: TuiNotificationOptions | TuiNotificationOptionsWithData<I>,\n    ) {\n        const {\n            label = '',\n            status = TuiNotification.Info,\n            hasIcon = true,\n            autoClose = true,\n            hasCloseButton = true,\n        } = options;\n\n        this.observer = observer;\n        this.content = content;\n\n        this.label = label;\n        this.status = status;\n        this.hasIcon = hasIcon;\n        this.autoClose = autoClose;\n        this.hasCloseButton = hasCloseButton;\n\n        if (options && this.withData(options)) {\n            this.data = options.data;\n        }\n    }\n\n    private withData(\n        options: TuiNotificationOptions | TuiNotificationOptionsWithData<I>,\n    ): options is TuiNotificationOptionsWithData<I> {\n        return 'data' in options;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {tuiAssert} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {BehaviorSubject, Observable, Observer} from 'rxjs';\nimport {NotificationAlert} from './notification-alert/Notification-alert';\nimport {TuiNotificationContentContext} from './notification-content-context';\nimport {\n    TuiNotificationOptions,\n    TuiNotificationOptionsWithData,\n} from './notification-options';\n\nconst NO_HOST =\n    'Notifications are disabled, enable support by adding TuiNotificationsModule to your main app module';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class TuiNotificationsService {\n    /** @internal */\n    readonly items$ = new BehaviorSubject<ReadonlyArray<NotificationAlert<any, any>>>([]);\n\n    show<O = void>(\n        content: PolymorpheusContent<TuiNotificationContentContext<O>>,\n    ): Observable<O>;\n    show<O = void>(\n        content: PolymorpheusContent<TuiNotificationContentContext<O>>,\n        options: TuiNotificationOptions,\n    ): Observable<O>;\n    show<O, I>(\n        content: PolymorpheusContent<TuiNotificationContentContext<O, I>>,\n        options: TuiNotificationOptionsWithData<I>,\n    ): Observable<O>;\n    show<O, I>(\n        content: PolymorpheusContent<TuiNotificationContentContext<O, I>>,\n        options: TuiNotificationOptions | TuiNotificationOptionsWithData<I> = {},\n    ): Observable<O> {\n        tuiAssert.assert(!!this.items$.observers.length, NO_HOST);\n\n        return new Observable((observer: Observer<O>) => {\n            const notification = new NotificationAlert(observer, content, options);\n\n            this.items$.next([...this.items$.value, notification]);\n\n            return () => {\n                this.items$.next(this.items$.value.filter(item => item !== notification));\n            };\n        });\n    }\n}\n","import {ChangeDetectionStrategy, Component, Inject} from '@angular/core';\nimport {\n    tuiFadeInList,\n    tuiHeightCollapseList,\n    tuiSlideInRightList,\n} from '@taiga-ui/core/animations';\nimport {TuiNotificationsService} from '../notifications.service';\n\n@Component({\n    selector: 'tui-notifications-host',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './notifications-host.template.html',\n    styleUrls: ['./notifications-host.style.less'],\n    animations: [tuiFadeInList, tuiSlideInRightList, tuiHeightCollapseList],\n})\nexport class TuiNotificationsHostComponent {\n    constructor(\n        @Inject(TuiNotificationsService) readonly service: TuiNotificationsService,\n    ) {}\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiLetModule} from '@taiga-ui/cdk';\n\nimport {TuiNotificationAlertModule} from './notification-alert/notification-alert.module';\nimport {TuiNotificationsHostComponent} from './notifications-host/notifications-host.component';\n\n@NgModule({\n    imports: [CommonModule, TuiNotificationAlertModule, TuiLetModule],\n    declarations: [TuiNotificationsHostComponent],\n    exports: [TuiNotificationsHostComponent],\n    entryComponents: [TuiNotificationsHostComponent],\n    providers: [\n        {\n            provide: TuiNotificationsHostComponent,\n            useValue: TuiNotificationsHostComponent,\n        },\n    ],\n})\nexport class TuiNotificationsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}