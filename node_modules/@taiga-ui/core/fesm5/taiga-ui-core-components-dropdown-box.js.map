{"version":3,"file":"taiga-ui-core-components-dropdown-box.js","sources":["ng://@taiga-ui/core/components/dropdown-box/dropdown-box.component.ts","ng://@taiga-ui/core/components/dropdown-box/dropdown-box.module.ts","ng://@taiga-ui/core/components/dropdown-box/taiga-ui-core-components-dropdown-box.ts"],"sourcesContent":["import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    HostBinding,\n    Inject,\n    NgZone,\n    ViewChild,\n} from '@angular/core';\nimport {USER_AGENT, WINDOW} from '@ng-web-apis/common';\nimport {\n    getClosestElement,\n    getClosestKeyboardFocusable,\n    inRange,\n    isIE,\n    POLLING_TIME,\n    px,\n    setNativeFocused,\n    TuiDestroyService,\n    TuiOverscrollMode,\n    TuiPortalHostComponent,\n    tuiPure,\n    tuiZonefree,\n} from '@taiga-ui/cdk';\nimport {tuiDropdownAnimation} from '@taiga-ui/core/animations';\nimport {DEFAULT_MARGIN, DEFAULT_MAX_WIDTH} from '@taiga-ui/core/constants';\nimport {TuiDropdownAnimation, TuiDropdownWidth} from '@taiga-ui/core/enums';\nimport {TuiDropdown} from '@taiga-ui/core/interfaces';\nimport {TUI_DROPDOWN_DIRECTIVE} from '@taiga-ui/core/tokens';\nimport {TuiHorizontalDirection, TuiVerticalDirection} from '@taiga-ui/core/types';\nimport {getScreenWidth} from '@taiga-ui/core/utils/dom';\nimport {fromEvent, interval, merge} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\n/**\n *  This component is used to show template in a portal using default style of white rounded box with a shadow\n */\n// @bad TODO: OnPush\n// Ambient type cannot be used without dynamic https://github.com/angular/angular/issues/23395\n// @dynamic\n@Component({\n    selector: 'tui-dropdown-box',\n    templateUrl: './dropdown-box.template.html',\n    styleUrls: ['./dropdown-box.style.less'],\n    changeDetection: ChangeDetectionStrategy.Default,\n    providers: [TuiDestroyService],\n    animations: [tuiDropdownAnimation],\n})\nexport class TuiDropdownBoxComponent implements AfterViewChecked {\n    @HostBinding('@tuiDropdownAnimation')\n    dropdownAnimation!: TuiDropdownAnimation;\n\n    /**\n     * Is previous position on top (to prevent jumping up and down on scroll)\n     */\n    private prevDirectionIsTop = false;\n\n    @ViewChild('content', {read: ElementRef})\n    readonly contentElementRef?: ElementRef<HTMLElement>;\n\n    constructor(\n        @Inject(TuiDestroyService)\n        destroy$: TuiDestroyService,\n        @Inject(NgZone) ngZone: NgZone,\n        @Inject(TUI_DROPDOWN_DIRECTIVE) readonly directive: TuiDropdown,\n        @Inject(WINDOW) private readonly windowRef: Window,\n        @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLElement>,\n        @Inject(TuiPortalHostComponent)\n        private readonly portalHost: TuiPortalHostComponent,\n        @Inject(USER_AGENT) private readonly userAgent: string,\n    ) {\n        merge(\n            interval(POLLING_TIME),\n            this.directive.refresh$,\n            fromEvent(this.windowRef, 'resize'),\n        )\n            .pipe(tuiZonefree(ngZone), takeUntil(destroy$))\n            .subscribe(() => {\n                this.calculatePositionAndSize();\n            });\n    }\n\n    ngAfterViewChecked() {\n        this.calculatePositionAndSize();\n    }\n\n    onTopFocus() {\n        this.moveFocusOutside(true);\n    }\n\n    onBottomFocus() {\n        this.moveFocusOutside(false);\n    }\n\n    get overscroll(): TuiOverscrollMode {\n        return this.inModal ? TuiOverscrollMode.All : TuiOverscrollMode.Scroll;\n    }\n\n    @tuiPure\n    private get inModal(): boolean {\n        // @awful TODO: get rid of component tag name dependency\n        return !!getClosestElement(this.directive.host, 'tui-dialog-host');\n    }\n\n    private calculatePositionAndSize() {\n        const {clientRect} = this.directive;\n        const {style} = this.elementRef.nativeElement;\n        const hostRect = this.directive.fixed\n            ? this.portalHost.fixedPositionOffset()\n            : this.portalHost.clientRect;\n\n        style.position = this.directive.fixed ? 'fixed' : 'absolute';\n\n        this.calculateVerticalPosition(style, clientRect, hostRect);\n        this.calculateHorizontalPosition(style, clientRect, hostRect);\n        this.calculateWidth(style, clientRect);\n    }\n\n    private getFinalAlign(\n        style: CSSStyleDeclaration,\n        directiveRect: ClientRect,\n    ): TuiHorizontalDirection {\n        const dropdownRect = this.elementRef.nativeElement.getBoundingClientRect();\n        const dropdownWidth = this.elementRef.nativeElement.offsetWidth;\n        const screenWidth = getScreenWidth(this.windowRef.document);\n        const isDropdownSizeHypotheticallyFitsViewport =\n            directiveRect.left + dropdownWidth < screenWidth ||\n            directiveRect.right - dropdownWidth > 0;\n        const isDropdownSizeActuallyFitsViewport =\n            dropdownRect.right <= screenWidth && dropdownRect.left >= 0;\n        let finalAlign: TuiHorizontalDirection = this.directive.align;\n\n        switch (this.directive.align) {\n            case 'left':\n                if (\n                    isDropdownSizeHypotheticallyFitsViewport &&\n                    dropdownRect.right > screenWidth\n                ) {\n                    finalAlign = 'right';\n                }\n\n                break;\n            case 'right':\n                if (isDropdownSizeHypotheticallyFitsViewport && dropdownRect.left < 0) {\n                    finalAlign = 'left';\n                }\n\n                break;\n        }\n\n        if (style.right === 'auto' && isDropdownSizeActuallyFitsViewport) {\n            finalAlign = 'left';\n        }\n\n        if (style.left === 'auto' && isDropdownSizeActuallyFitsViewport) {\n            finalAlign = 'right';\n        }\n\n        return finalAlign;\n    }\n\n    /**\n     * Calculates horizontal position\n     *\n     * @param style dropdownBox elementRef styles object\n     * @param directiveRect ClientRect of hosting directive\n     * @param hostRect ClientRect of  portal host\n     */\n    private calculateHorizontalPosition(\n        style: CSSStyleDeclaration,\n        directiveRect: ClientRect,\n        hostRect: ClientRect,\n    ) {\n        const offset = this.directive.sided\n            ? this.elementRef.nativeElement.getBoundingClientRect().width + DEFAULT_MARGIN\n            : 0;\n        const left = Math.ceil(directiveRect.left - hostRect.left - offset);\n        const right = Math.floor(hostRect.right - directiveRect.right - offset);\n\n        switch (this.getFinalAlign(style, directiveRect)) {\n            case 'left':\n                if (\n                    right + DEFAULT_MARGIN > this.windowRef.innerWidth ||\n                    inRange(left + DEFAULT_MARGIN, 0, this.windowRef.innerWidth)\n                ) {\n                    style.left = px(left);\n                    style.right = 'auto';\n                } else {\n                    style.left = 'auto';\n                    style.right = px(right);\n                }\n\n                break;\n            case 'right':\n                if (\n                    inRange(right + DEFAULT_MARGIN, 0, this.windowRef.innerWidth) ||\n                    left + DEFAULT_MARGIN > this.windowRef.innerWidth\n                ) {\n                    style.left = 'auto';\n                    style.right = px(right);\n                } else {\n                    style.left = px(left);\n                    style.right = 'auto';\n                }\n\n                break;\n        }\n    }\n\n    /**\n     * Calculates vertical position and height\n     *\n     * @param style dropdownBox elementRef styles object\n     * @param directiveRect ClientRect of hosting directive\n     * @param hostRect ClientRect of  portal host\n     */\n    private calculateVerticalPosition(\n        style: CSSStyleDeclaration,\n        directiveRect: ClientRect,\n        hostRect: ClientRect,\n    ) {\n        const windowHeight = this.windowRef.innerHeight;\n        // Maximum height of the box\n        const boxHeightLimit = Math.min(\n            this.directive.maxHeight,\n            windowHeight - DEFAULT_MARGIN * 2,\n        );\n        const offset = this.directive.sided\n            ? DEFAULT_MARGIN - directiveRect.height\n            : DEFAULT_MARGIN * 2;\n        const topAvailableHeight = directiveRect.top - offset;\n        const bottomAvailableHeight = windowHeight - directiveRect.bottom - offset;\n        const finalDirection = this.getFinalDirection(directiveRect);\n\n        this.prevDirectionIsTop = finalDirection === 'top';\n\n        if (finalDirection === 'top') {\n            this.dropdownAnimation = TuiDropdownAnimation.FadeInBottom;\n\n            style.maxHeight = px(Math.min(boxHeightLimit, topAvailableHeight));\n            style.top = 'auto';\n            style.bottom = px(\n                hostRect.bottom - directiveRect.top - DEFAULT_MARGIN + offset,\n            );\n        } else {\n            this.dropdownAnimation = TuiDropdownAnimation.FadeInTop;\n\n            style.maxHeight = px(Math.min(boxHeightLimit, bottomAvailableHeight));\n            style.top = px(directiveRect.bottom - hostRect.top - DEFAULT_MARGIN + offset);\n            style.bottom = 'auto';\n        }\n    }\n\n    private getFinalDirection(directiveRect: ClientRect): TuiVerticalDirection | null {\n        const windowHeight = this.windowRef.innerHeight;\n        const offset = this.directive.sided\n            ? DEFAULT_MARGIN - directiveRect.height\n            : DEFAULT_MARGIN * 2;\n\n        // Maximum space available on top and on the bottom in the viewport\n        const topAvailableHeight = directiveRect.top - offset;\n        const bottomAvailableHeight = windowHeight - directiveRect.bottom - offset;\n\n        let finalDirection: TuiVerticalDirection | null = null;\n\n        // Given direction is applied if we can fit the box in the limits that way\n        switch (this.directive.direction) {\n            case 'top':\n                if (topAvailableHeight >= this.directive.minHeight) {\n                    finalDirection = 'top';\n                }\n\n                break;\n            case 'bottom':\n                if (bottomAvailableHeight >= this.directive.minHeight) {\n                    finalDirection = 'bottom';\n                }\n\n                break;\n        }\n\n        // Maximum height of the box\n        const boxHeightLimit = Math.min(\n            this.directive.maxHeight,\n            windowHeight - DEFAULT_MARGIN * 2,\n        );\n\n        // Choose direction if given direction did not fit\n        if (finalDirection === null && this.contentElementRef) {\n            // Box height if it fits without scroll\n            const visualHeight = Math.min(\n                this.contentElementRef.nativeElement.getBoundingClientRect().height +\n                    (this.elementRef.nativeElement.offsetHeight -\n                        this.elementRef.nativeElement.clientHeight),\n                boxHeightLimit,\n            );\n\n            // If there is enough space to fit below without scroll,\n            // choose 'bottom', unless it was previously on the top\n            if (this.prevDirectionIsTop && topAvailableHeight >= visualHeight) {\n                finalDirection = 'top';\n            } else if (bottomAvailableHeight >= visualHeight) {\n                finalDirection = 'bottom';\n            } else {\n                // Corner case — select direction with more space\n                finalDirection =\n                    bottomAvailableHeight >= topAvailableHeight ? 'bottom' : 'top';\n            }\n        }\n\n        return finalDirection;\n    }\n\n    /**\n     * Calculates width\n     *\n     * @param style dropdownBox elementRef styles object\n     * @param directiveRect ClientRect of hosting directive\n     */\n    private calculateWidth(style: CSSStyleDeclaration, directiveRect: ClientRect) {\n        style.width =\n            this.directive.limitMinWidth === TuiDropdownWidth.Fixed &&\n            !this.directive.sided\n                ? px(directiveRect.width)\n                : '';\n\n        if (\n            isIE(this.userAgent) &&\n            this.directive.limitMinWidth === TuiDropdownWidth.Min &&\n            !this.directive.sided\n        ) {\n            style.width = px(DEFAULT_MAX_WIDTH);\n\n            return;\n        }\n\n        if (\n            this.directive.limitMinWidth === TuiDropdownWidth.Min &&\n            !this.directive.sided\n        ) {\n            style.minWidth = px(directiveRect.width);\n            style.maxWidth = px(DEFAULT_MAX_WIDTH);\n\n            return;\n        }\n\n        style.minWidth = '';\n        style.maxWidth = '';\n    }\n\n    private moveFocusOutside(previous: boolean) {\n        const {host} = this.directive;\n        const {ownerDocument} = host;\n        const root = ownerDocument ? ownerDocument.body : host;\n\n        let focusable = getClosestKeyboardFocusable(host, previous, root);\n\n        while (focusable !== null && host.contains(focusable)) {\n            focusable = getClosestKeyboardFocusable(focusable, previous, root);\n        }\n\n        if (focusable === null) {\n            return;\n        }\n\n        setNativeFocused(focusable);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {TuiActiveZoneModule, TuiOverscrollModule} from '@taiga-ui/cdk';\nimport {TuiScrollbarModule} from '@taiga-ui/core/components/scrollbar';\nimport {TuiModeModule} from '@taiga-ui/core/directives/mode';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\nimport {TuiDropdownBoxComponent} from './dropdown-box.component';\n\n@NgModule({\n    imports: [\n        TuiActiveZoneModule,\n        PolymorpheusModule,\n        TuiOverscrollModule,\n        TuiScrollbarModule,\n        TuiModeModule,\n    ],\n    entryComponents: [TuiDropdownBoxComponent],\n    declarations: [TuiDropdownBoxComponent],\n    exports: [TuiDropdownBoxComponent],\n})\nexport class TuiDropdownBoxModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAmCA;;;AAGA;AACA;AACA;;IAqBI,iCAEI,QAA2B,EACX,MAAc,EACW,SAAsB,EAC9B,SAAiB,EACb,UAAmC,EAEvD,UAAkC,EACd,SAAiB;QAT1D,iBAoBC;QAhB4C,cAAS,GAAT,SAAS,CAAa;QAC9B,cAAS,GAAT,SAAS,CAAQ;QACb,eAAU,GAAV,UAAU,CAAyB;QAEvD,eAAU,GAAV,UAAU,CAAwB;QACd,cAAS,GAAT,SAAS,CAAQ;;;;QAdlD,uBAAkB,GAAG,KAAK,CAAC;QAgB/B,KAAK,CACD,QAAQ,CAAC,YAAY,CAAC,EACtB,IAAI,CAAC,SAAS,CAAC,QAAQ,EACvB,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CACtC;aACI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC;aAC9C,SAAS,CAAC;YACP,KAAI,CAAC,wBAAwB,EAAE,CAAC;SACnC,CAAC,CAAC;KACV;IAED,oDAAkB,GAAlB;QACI,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACnC;IAED,4CAAU,GAAV;QACI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;KAC/B;IAED,+CAAa,GAAb;QACI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAChC;IAED,sBAAI,+CAAU;aAAd;YACI,OAAO,IAAI,CAAC,OAAO,2CAAoD;SAC1E;;;OAAA;IAGD,sBAAY,4CAAO;aAAnB;;YAEI,OAAO,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;SACtE;;;OAAA;IAEO,0DAAwB,GAAhC;QACW,IAAA,sCAAU,CAAmB;QAC7B,IAAA,2CAAK,CAAkC;QAC9C,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK;cAC/B,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE;cACrC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QAEjC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,OAAO,GAAG,UAAU,CAAC;QAE7D,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC5D,IAAI,CAAC,2BAA2B,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC9D,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;KAC1C;IAEO,+CAAa,GAArB,UACI,KAA0B,EAC1B,aAAyB;QAEzB,IAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;QAC3E,IAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,CAAC;QAChE,IAAM,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAC5D,IAAM,wCAAwC,GAC1C,aAAa,CAAC,IAAI,GAAG,aAAa,GAAG,WAAW;YAChD,aAAa,CAAC,KAAK,GAAG,aAAa,GAAG,CAAC,CAAC;QAC5C,IAAM,kCAAkC,GACpC,YAAY,CAAC,KAAK,IAAI,WAAW,IAAI,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC;QAChE,IAAI,UAAU,GAA2B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAE9D,QAAQ,IAAI,CAAC,SAAS,CAAC,KAAK;YACxB,KAAK,MAAM;gBACP,IACI,wCAAwC;oBACxC,YAAY,CAAC,KAAK,GAAG,WAAW,EAClC;oBACE,UAAU,GAAG,OAAO,CAAC;iBACxB;gBAED,MAAM;YACV,KAAK,OAAO;gBACR,IAAI,wCAAwC,IAAI,YAAY,CAAC,IAAI,GAAG,CAAC,EAAE;oBACnE,UAAU,GAAG,MAAM,CAAC;iBACvB;gBAED,MAAM;SACb;QAED,IAAI,KAAK,CAAC,KAAK,KAAK,MAAM,IAAI,kCAAkC,EAAE;YAC9D,UAAU,GAAG,MAAM,CAAC;SACvB;QAED,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,kCAAkC,EAAE;YAC7D,UAAU,GAAG,OAAO,CAAC;SACxB;QAED,OAAO,UAAU,CAAC;KACrB;;;;;;;;IASO,6DAA2B,GAAnC,UACI,KAA0B,EAC1B,aAAyB,EACzB,QAAoB;QAEpB,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK;cAC7B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,KAAK,GAAG,cAAc;cAC5E,CAAC,CAAC;QACR,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC;QACpE,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC;QAExE,QAAQ,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC;YAC5C,KAAK,MAAM;gBACP,IACI,KAAK,GAAG,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU;oBAClD,OAAO,CAAC,IAAI,GAAG,cAAc,EAAE,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAC9D;oBACE,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;oBACtB,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;iBACxB;qBAAM;oBACH,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;oBACpB,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;iBAC3B;gBAED,MAAM;YACV,KAAK,OAAO;gBACR,IACI,OAAO,CAAC,KAAK,GAAG,cAAc,EAAE,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;oBAC7D,IAAI,GAAG,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,EACnD;oBACE,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;oBACpB,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;iBAC3B;qBAAM;oBACH,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;oBACtB,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;iBACxB;gBAED,MAAM;SACb;KACJ;;;;;;;;IASO,2DAAyB,GAAjC,UACI,KAA0B,EAC1B,aAAyB,EACzB,QAAoB;QAEpB,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;;QAEhD,IAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAC3B,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,YAAY,GAAG,cAAc,GAAG,CAAC,CACpC,CAAC;QACF,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK;cAC7B,cAAc,GAAG,aAAa,CAAC,MAAM;cACrC,cAAc,GAAG,CAAC,CAAC;QACzB,IAAM,kBAAkB,GAAG,aAAa,CAAC,GAAG,GAAG,MAAM,CAAC;QACtD,IAAM,qBAAqB,GAAG,YAAY,GAAG,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC;QAC3E,IAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;QAE7D,IAAI,CAAC,kBAAkB,GAAG,cAAc,KAAK,KAAK,CAAC;QAEnD,IAAI,cAAc,KAAK,KAAK,EAAE;YAC1B,IAAI,CAAC,iBAAiB,qCAAqC;YAE3D,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACnE,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;YACnB,KAAK,CAAC,MAAM,GAAG,EAAE,CACb,QAAQ,CAAC,MAAM,GAAG,aAAa,CAAC,GAAG,GAAG,cAAc,GAAG,MAAM,CAChE,CAAC;SACL;aAAM;YACH,IAAI,CAAC,iBAAiB,+BAAkC;YAExD,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAC,CAAC;YACtE,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,aAAa,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,GAAG,cAAc,GAAG,MAAM,CAAC,CAAC;YAC9E,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;SACzB;KACJ;IAEO,mDAAiB,GAAzB,UAA0B,aAAyB;QAC/C,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;QAChD,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK;cAC7B,cAAc,GAAG,aAAa,CAAC,MAAM;cACrC,cAAc,GAAG,CAAC,CAAC;;QAGzB,IAAM,kBAAkB,GAAG,aAAa,CAAC,GAAG,GAAG,MAAM,CAAC;QACtD,IAAM,qBAAqB,GAAG,YAAY,GAAG,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC;QAE3E,IAAI,cAAc,GAAgC,IAAI,CAAC;;QAGvD,QAAQ,IAAI,CAAC,SAAS,CAAC,SAAS;YAC5B,KAAK,KAAK;gBACN,IAAI,kBAAkB,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;oBAChD,cAAc,GAAG,KAAK,CAAC;iBAC1B;gBAED,MAAM;YACV,KAAK,QAAQ;gBACT,IAAI,qBAAqB,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;oBACnD,cAAc,GAAG,QAAQ,CAAC;iBAC7B;gBAED,MAAM;SACb;;QAGD,IAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAC3B,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,YAAY,GAAG,cAAc,GAAG,CAAC,CACpC,CAAC;;QAGF,IAAI,cAAc,KAAK,IAAI,IAAI,IAAI,CAAC,iBAAiB,EAAE;;YAEnD,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CACzB,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,MAAM;iBAC9D,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY;oBACvC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY,CAAC,EACnD,cAAc,CACjB,CAAC;;;YAIF,IAAI,IAAI,CAAC,kBAAkB,IAAI,kBAAkB,IAAI,YAAY,EAAE;gBAC/D,cAAc,GAAG,KAAK,CAAC;aAC1B;iBAAM,IAAI,qBAAqB,IAAI,YAAY,EAAE;gBAC9C,cAAc,GAAG,QAAQ,CAAC;aAC7B;iBAAM;;gBAEH,cAAc;oBACV,qBAAqB,IAAI,kBAAkB,GAAG,QAAQ,GAAG,KAAK,CAAC;aACtE;SACJ;QAED,OAAO,cAAc,CAAC;KACzB;;;;;;;IAQO,gDAAc,GAAtB,UAAuB,KAA0B,EAAE,aAAyB;QACxE,KAAK,CAAC,KAAK;YACP,IAAI,CAAC,SAAS,CAAC,aAAa;gBAC5B,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK;kBACf,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC;kBACvB,EAAE,CAAC;QAEb,IACI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,aAAa;YAC5B,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EACvB;YACE,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,iBAAiB,CAAC,CAAC;YAEpC,OAAO;SACV;QAED,IACI,IAAI,CAAC,SAAS,CAAC,aAAa;YAC5B,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EACvB;YACE,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACzC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,iBAAiB,CAAC,CAAC;YAEvC,OAAO;SACV;QAED,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;QACpB,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;KACvB;IAEO,kDAAgB,GAAxB,UAAyB,QAAiB;QAC/B,IAAA,0BAAI,CAAmB;QACvB,IAAA,kCAAa,CAAS;QAC7B,IAAM,IAAI,GAAG,aAAa,GAAG,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;QAEvD,IAAI,SAAS,GAAG,2BAA2B,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QAElE,OAAO,SAAS,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YACnD,SAAS,GAAG,2BAA2B,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;SACtE;QAED,IAAI,SAAS,KAAK,IAAI,EAAE;YACpB,OAAO;SACV;QAED,gBAAgB,CAAC,SAAS,CAAC,CAAC;KAC/B;;gBAhTa,iBAAiB,uBAD1B,MAAM,SAAC,iBAAiB;gBAED,MAAM,uBAA7B,MAAM,SAAC,MAAM;gDACb,MAAM,SAAC,sBAAsB;gBACc,MAAM,uBAAjD,MAAM,SAAC,MAAM;gBACmC,UAAU,uBAA1D,MAAM,SAAC,UAAU;gBAEW,sBAAsB,uBADlD,MAAM,SAAC,sBAAsB;6CAE7B,MAAM,SAAC,UAAU;;IAnBtB;QADC,WAAW,CAAC,uBAAuB,CAAC;sEACI;IAQzC;QADC,SAAS,CAAC,SAAS,EAAE,EAAC,IAAI,EAAE,UAAU,EAAC,CAAC;sEACY;IAyCrD;QADC,OAAO;0DAIP;IAtDQ,uBAAuB;QARnC,SAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;YAC5B,+fAA2C;YAE3C,eAAe,EAAE,uBAAuB,CAAC,OAAO;YAChD,SAAS,EAAE,CAAC,iBAAiB,CAAC;YAC9B,UAAU,EAAE,CAAC,oBAAoB,CAAC;;SACrC,CAAC;QAcO,WAAA,MAAM,CAAC,iBAAiB,CAAC,CAAA;QAEzB,WAAA,MAAM,CAAC,MAAM,CAAC,CAAA;QACd,WAAA,MAAM,CAAC,sBAAsB,CAAC,CAAA;QAC9B,WAAA,MAAM,CAAC,MAAM,CAAC,CAAA;QACd,WAAA,MAAM,CAAC,UAAU,CAAC,CAAA;QAClB,WAAA,MAAM,CAAC,sBAAsB,CAAC,CAAA;QAE9B,WAAA,MAAM,CAAC,UAAU,CAAC,CAAA;OArBd,uBAAuB,CA+TnC;IAAD,8BAAC;CA/TD;;;IC9BA;KAAoC;IAAvB,oBAAoB;QAZhC,QAAQ,CAAC;YACN,OAAO,EAAE;gBACL,mBAAmB;gBACnB,kBAAkB;gBAClB,mBAAmB;gBACnB,kBAAkB;gBAClB,aAAa;aAChB;YACD,eAAe,EAAE,CAAC,uBAAuB,CAAC;YAC1C,YAAY,EAAE,CAAC,uBAAuB,CAAC;YACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;SACrC,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAApC;;ACnBA;;;;;;"}