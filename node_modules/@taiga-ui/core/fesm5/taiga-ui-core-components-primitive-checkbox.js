import { InjectionToken, Inject, Input, HostBinding, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { __decorate, __param } from 'tslib';
import { tuiDefaultProp, tuiPure } from '@taiga-ui/cdk';
import { TuiSvgModule } from '@taiga-ui/core/components/svg';
import { TuiWrapperModule } from '@taiga-ui/core/components/wrapper';
import { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';

var ɵ0 = function (_a) {
    var $implicit = _a.$implicit;
    return $implicit === 'm' ? 'tuiIconCheck' : 'tuiIconCheckLarge';
}, ɵ1 = function (_a) {
    var $implicit = _a.$implicit;
    return $implicit === 'm' ? 'tuiIconMinus' : 'tuiIconMinusLarge';
};
/** Default values for the checkbox options. */
var TUI_CHECKBOX_DEFAULT_OPTIONS = {
    size: 'm',
    appearances: {
        unchecked: "outline" /* Outline */,
        checked: "primary" /* Primary */,
        indeterminate: "primary" /* Primary */,
    },
    icons: {
        checked: ɵ0,
        indeterminate: ɵ1,
    },
};
var TUI_CHECKBOX_OPTIONS = new InjectionToken('Default parameters for checkbox component', {
    factory: function () { return TUI_CHECKBOX_DEFAULT_OPTIONS; },
});

// @dynamic
var TuiPrimitiveCheckboxComponent = /** @class */ (function () {
    function TuiPrimitiveCheckboxComponent(options) {
        this.options = options;
        this.size = this.options.size;
        this.disabled = false;
        this.focused = false;
        this.hovered = false;
        this.pressed = false;
        this.invalid = false;
        this.value = false;
    }
    Object.defineProperty(TuiPrimitiveCheckboxComponent.prototype, "appearance", {
        get: function () {
            switch (this.value) {
                case false:
                    return this.options.appearances.unchecked;
                case true:
                    return this.options.appearances.checked;
                default:
                    return this.options.appearances.indeterminate;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveCheckboxComponent.prototype, "empty", {
        get: function () {
            return this.value === false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveCheckboxComponent.prototype, "icon", {
        get: function () {
            return this.value === null
                ? this.options.icons.indeterminate
                : this.options.icons.checked;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveCheckboxComponent.prototype, "context", {
        get: function () {
            return this.getContext(this.size);
        },
        enumerable: true,
        configurable: true
    });
    TuiPrimitiveCheckboxComponent.prototype.getContext = function ($implicit) {
        return { $implicit: $implicit };
    };
    TuiPrimitiveCheckboxComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [TUI_CHECKBOX_OPTIONS,] }] }
    ]; };
    __decorate([
        Input(),
        HostBinding('attr.data-tui-host-size'),
        tuiDefaultProp()
    ], TuiPrimitiveCheckboxComponent.prototype, "size", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveCheckboxComponent.prototype, "disabled", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveCheckboxComponent.prototype, "focused", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveCheckboxComponent.prototype, "hovered", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveCheckboxComponent.prototype, "pressed", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveCheckboxComponent.prototype, "invalid", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveCheckboxComponent.prototype, "value", void 0);
    __decorate([
        tuiPure
    ], TuiPrimitiveCheckboxComponent.prototype, "getContext", null);
    TuiPrimitiveCheckboxComponent = __decorate([
        Component({
            selector: 'tui-primitive-checkbox',
            template: "<tui-wrapper\n    [appearance]=\"appearance\"\n    [disabled]=\"disabled\"\n    [focused]=\"focused\"\n    [hovered]=\"hovered\"\n    [pressed]=\"pressed\"\n    [invalid]=\"invalid\"\n>\n    <span polymorpheus-outlet [content]=\"icon\" [context]=\"context\">\n        <ng-template let-icon>\n            <tui-svg\n                class=\"mark\"\n                [class.mark_on]=\"!empty\"\n                [src]=\"icon\"\n            ></tui-svg>\n        </ng-template>\n    </span>\n</tui-wrapper>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [":host{display:block;font-size:0}:host[data-tui-host-size='m']{width:16px;height:16px;border-radius:var(--tui-radius-xs)}:host[data-tui-host-size='l']{width:24px;height:24px;border-radius:var(--tui-radius-s)}.mark{transition-property:transform;transition-duration:.3s;transition-timing-function:ease-in-out;display:block;width:100%;height:100%;transform:scale(0)}.mark_on{transform:scale(1)}"]
        }),
        __param(0, Inject(TUI_CHECKBOX_OPTIONS))
    ], TuiPrimitiveCheckboxComponent);
    return TuiPrimitiveCheckboxComponent;
}());

var TuiPrimitiveCheckboxModule = /** @class */ (function () {
    function TuiPrimitiveCheckboxModule() {
    }
    TuiPrimitiveCheckboxModule = __decorate([
        NgModule({
            imports: [TuiSvgModule, TuiWrapperModule, PolymorpheusModule],
            declarations: [TuiPrimitiveCheckboxComponent],
            exports: [TuiPrimitiveCheckboxComponent],
        })
    ], TuiPrimitiveCheckboxModule);
    return TuiPrimitiveCheckboxModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_CHECKBOX_DEFAULT_OPTIONS, TUI_CHECKBOX_OPTIONS, TuiPrimitiveCheckboxComponent, TuiPrimitiveCheckboxModule, ɵ0, ɵ1 };
//# sourceMappingURL=taiga-ui-core-components-primitive-checkbox.js.map
