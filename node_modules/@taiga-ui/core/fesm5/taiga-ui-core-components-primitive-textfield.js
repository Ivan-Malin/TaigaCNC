import { __extends, __decorate, __param } from 'tslib';
import { forwardRef, Optional, EventEmitter, Inject, Input, HostBinding, Output, ViewChild, ContentChild, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { identity, TUI_FOCUSABLE_ITEM_ACCESSOR, isNativeFocused, setNativeFocused, tuiDefaultProp, AbstractTuiInteractive, TuiFocusableModule, TuiFocusedModule, TuiHoveredModule, TuiInputModeModule, TuiAutofilledModule, TuiPreventDefaultModule } from '@taiga-ui/cdk';
import { HINT_CONTROLLER_PROVIDER, TuiHintControllerDirective, TUI_HINT_WATCHED_CONTROLLER } from '@taiga-ui/core/directives/hint-controller';
import { TEXTFIELD_CONTROLLER_PROVIDER, TuiTextfieldController, TUI_TEXTIFELD_WATCHED_CONTROLLER } from '@taiga-ui/core/directives/textfield-controller';
import { TUI_VALUE_ACCESSOR, TUI_MODE, TUI_TEXTFIELD_APPEARANCE } from '@taiga-ui/core/tokens';
import { getPadding, sizeBigger } from '@taiga-ui/core/utils/miscellaneous';
import { PolymorpheusOutletComponent, PolymorpheusModule } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
import { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { CommonModule } from '@angular/common';
import { TuiSvgModule } from '@taiga-ui/core/components/svg';
import { TuiTooltipModule } from '@taiga-ui/core/components/tooltip';
import { TuiWrapperModule } from '@taiga-ui/core/components/wrapper';
import { TuiDescribedByModule } from '@taiga-ui/core/directives/described-by';
import { TuiMaskAccessorModule } from '@taiga-ui/core/directives/mask-accessor';

var ɵ0 = identity;
var TUI_PRIMITIVE_TEXTFIELD_PROVIDERS = [
    {
        provide: TUI_FOCUSABLE_ITEM_ACCESSOR,
        useExisting: forwardRef(function () { return TuiPrimitiveTextfieldComponent; }),
    },
    {
        provide: TUI_VALUE_ACCESSOR,
        deps: [[new Optional(), NG_VALUE_ACCESSOR]],
        useFactory: ɵ0,
    },
    TEXTFIELD_CONTROLLER_PROVIDER,
    HINT_CONTROLLER_PROVIDER,
    MODE_PROVIDER,
];

var ICON_PADDING = 28;
var ICON_PADDING_S = 24;
var TuiPrimitiveTextfieldComponent = /** @class */ (function (_super) {
    __extends(TuiPrimitiveTextfieldComponent, _super);
    function TuiPrimitiveTextfieldComponent(mode$, appearance, controller, hintController) {
        var _this = _super.call(this) || this;
        _this.mode$ = mode$;
        _this.appearance = appearance;
        _this.controller = controller;
        _this.hintController = hintController;
        _this.editable = true;
        _this.filler = '';
        _this.iconAlign = 'right';
        _this.iconContent = null;
        _this.readOnly = false;
        _this.invalid = false;
        _this.disabled = false;
        _this.postfix = '';
        _this.value = '';
        _this.valueChange = new EventEmitter();
        _this.autofilledChange = new EventEmitter();
        _this.autofilled = false;
        return _this;
    }
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "nativeFocusableElement", {
        get: function () {
            return this.computedDisabled || !this.focusableElement
                ? null
                : this.focusableElement.nativeElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "focused", {
        get: function () {
            return isNativeFocused(this.nativeFocusableElement);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "size", {
        get: function () {
            return this.controller.size;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "labelOutside", {
        get: function () {
            return this.controller.labelOutside;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "computedInvalid", {
        get: function () {
            return !this.readOnly && !this.disabled && this.invalid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "inputHidden", {
        get: function () {
            return !!this.content;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasTooltip", {
        get: function () {
            return !!this.hintController && !!this.hintController.content && !this.disabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasCustomContent", {
        get: function () {
            return !!this.controller.customContent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "iconPaddingLeft", {
        get: function () {
            return this.size === 's' ? ICON_PADDING_S : ICON_PADDING;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "paddingLeft", {
        get: function () {
            return ((this.iconAlignLeft ? this.iconPaddingLeft : 0) +
                getPadding(sizeBigger(this.size, 'm'), false));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "paddingRight", {
        get: function () {
            return getPadding(sizeBigger(this.size, 'm'), this.iconAlignRight, this.hasCleaner, this.hasTooltip, this.hasCustomContent);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasPlaceholder", {
        get: function () {
            return ((this.big && !this.labelOutside) ||
                (!this.hasValue && !this.hasExampleText && !this.hasPostfix));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "placeholderRaised", {
        get: function () {
            return (this.big &&
                !this.labelOutside &&
                ((this.computedFocused && !this.readOnly) || this.hasValue || this.autofilled));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "iconAlignLeft", {
        get: function () {
            return this.hasIcon && this.iconAlign === 'left';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "iconAlignRight", {
        get: function () {
            return this.hasIcon && this.iconAlign === 'right';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasValue", {
        get: function () {
            return !!this.value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasCleaner", {
        get: function () {
            return (this.controller.cleaner && this.hasValue && !this.disabled && !this.readOnly);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "rightAligned", {
        get: function () {
            return (this.appearance === "table" /* Table */ &&
                (this.controller.inputMode === "numeric" /* Numeric */ ||
                    this.controller.inputMode === "decimal" /* Decimal */));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasValueDecoration", {
        get: function () {
            var fillerOrExampleShown = this.computedFocused && !this.readOnly && this.hasFillerOrExampleText;
            return fillerOrExampleShown || this.hasPostfix;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasPostfix", {
        get: function () {
            var isPostfixAllowed = this.hasValue || (this.computedFocused && !this.readOnly);
            return isPostfixAllowed && !!this.postfix;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasFillerOrExampleText", {
        get: function () {
            return this.hasValue ? !!this.computedFiller : !!this.controller.exampleText;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "postfixShifted", {
        get: function () {
            return this.postfix !== '%' && (this.hasFillerOrExampleText || this.hasValue);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "computedFiller", {
        get: function () {
            return this.hasExampleText
                ? this.controller.exampleText
                : this.filler.slice(this.value.length);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "name", {
        // Safari expiration date autofill workaround
        get: function () {
            return this.controller.autocomplete === "cc-exp" /* CcExp */
                ? 'ccexpiryyear'
                : null;
        },
        enumerable: true,
        configurable: true
    });
    TuiPrimitiveTextfieldComponent.prototype.clear = function () {
        this.updateValue('');
    };
    TuiPrimitiveTextfieldComponent.prototype.onMouseDown = function (event) {
        if (!this.focusableElement ||
            event.target === this.focusableElement.nativeElement) {
            return;
        }
        event.preventDefault();
        setNativeFocused(this.focusableElement.nativeElement);
    };
    TuiPrimitiveTextfieldComponent.prototype.onModelChange = function (value) {
        this.updateValue(value);
    };
    TuiPrimitiveTextfieldComponent.prototype.onHovered = function (hovered) {
        this.updateHovered(hovered);
    };
    TuiPrimitiveTextfieldComponent.prototype.onFocused = function (focused) {
        this.updateFocused(focused);
    };
    TuiPrimitiveTextfieldComponent.prototype.onAutofilled = function (autofilled) {
        this.updateAutofilled(autofilled);
    };
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "big", {
        get: function () {
            return this.size !== 's';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasIcon", {
        get: function () {
            return !!this.iconContent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiPrimitiveTextfieldComponent.prototype, "hasExampleText", {
        get: function () {
            return (!!this.controller.exampleText &&
                this.computedFocused &&
                !this.hasValue &&
                !this.readOnly);
        },
        enumerable: true,
        configurable: true
    });
    TuiPrimitiveTextfieldComponent.prototype.updateAutofilled = function (autofilled) {
        if (this.autofilled === autofilled) {
            return;
        }
        this.autofilled = autofilled;
        this.autofilledChange.emit(autofilled);
    };
    TuiPrimitiveTextfieldComponent.prototype.updateValue = function (value) {
        this.value = value;
        this.valueChange.emit(value);
    };
    TuiPrimitiveTextfieldComponent.ctorParameters = function () { return [
        { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] },
        { type: String, decorators: [{ type: Inject, args: [TUI_TEXTFIELD_APPEARANCE,] }] },
        { type: TuiTextfieldController, decorators: [{ type: Inject, args: [TUI_TEXTIFELD_WATCHED_CONTROLLER,] }] },
        { type: TuiHintControllerDirective, decorators: [{ type: Inject, args: [TUI_HINT_WATCHED_CONTROLLER,] }] }
    ]; };
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "editable", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "filler", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "iconAlign", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "iconContent", void 0);
    __decorate([
        Input(),
        HostBinding('class._readonly'),
        tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "readOnly", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "invalid", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "disabled", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "postfix", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiPrimitiveTextfieldComponent.prototype, "value", void 0);
    __decorate([
        Output()
    ], TuiPrimitiveTextfieldComponent.prototype, "valueChange", void 0);
    __decorate([
        Output()
    ], TuiPrimitiveTextfieldComponent.prototype, "autofilledChange", void 0);
    __decorate([
        ViewChild('focusableElement')
    ], TuiPrimitiveTextfieldComponent.prototype, "focusableElement", void 0);
    __decorate([
        ContentChild(PolymorpheusOutletComponent)
    ], TuiPrimitiveTextfieldComponent.prototype, "content", void 0);
    __decorate([
        HostBinding('attr.data-tui-host-size')
    ], TuiPrimitiveTextfieldComponent.prototype, "size", null);
    __decorate([
        HostBinding('class._label-outside')
    ], TuiPrimitiveTextfieldComponent.prototype, "labelOutside", null);
    __decorate([
        HostBinding('class._invalid')
    ], TuiPrimitiveTextfieldComponent.prototype, "computedInvalid", null);
    __decorate([
        HostBinding('class._right-aligned')
    ], TuiPrimitiveTextfieldComponent.prototype, "rightAligned", null);
    TuiPrimitiveTextfieldComponent = __decorate([
        Component({
            selector: 'tui-primitive-textfield',
            template: "<tui-wrapper\n    automation-id=\"tui-primitive-textfield__wrapper\"\n    [appearance]=\"appearance\"\n    [readOnly]=\"readOnly\"\n    [disabled]=\"disabled\"\n    [focused]=\"computedFocused\"\n    [hovered]=\"computedHovered\"\n    [pressed]=\"computedPressed\"\n    [invalid]=\"computedInvalid\"\n    (tuiHoveredChange)=\"onHovered($event)\"\n    (mousedown)=\"onMouseDown($event)\"\n>\n    <input\n        #focusableElement\n        tuiMaskAccessor\n        automation-id=\"tui-primitive-textfield__native-input\"\n        class=\"input\"\n        [class.input_hidden]=\"inputHidden\"\n        [style.paddingLeft.px]=\"paddingLeft\"\n        [style.paddingRight.px]=\"paddingRight\"\n        [attr.disabled]=\"computedDisabled || null\"\n        [attr.maxLength]=\"controller.maxLength\"\n        [attr.name]=\"name\"\n        [attr.aria-placeholder]=\"controller.exampleText\"\n        [attr.aria-invalid]=\"computedInvalid\"\n        [autocomplete]=\"controller.autocomplete\"\n        [type]=\"controller.type\"\n        [id]=\"id\"\n        [readOnly]=\"readOnly || !editable\"\n        [tuiInputMode]=\"controller.inputMode\"\n        [tuiFocusable]=\"computedFocusable\"\n        [tuiDescribedBy]=\"id\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"onModelChange($event)\"\n        (tuiFocusedChange)=\"onFocused($event)\"\n        (tuiAutofilledChange)=\"onAutofilled($event)\"\n    />\n    <div\n        *ngIf=\"inputHidden\"\n        automation-id=\"tui-primitive-textfield__value\"\n        class=\"input input_template\"\n        [style.paddingLeft.px]=\"paddingLeft\"\n        [style.borderRightWidth.px]=\"paddingRight\"\n    >\n        <ng-content select=\"[polymorpheus-outlet]\"></ng-content>\n    </div>\n    <div class=\"content\" tuiPreventDefault=\"click\">\n        <div\n            polymorpheus-outlet\n            *ngIf=\"iconAlignLeft\"\n            class=\"icon icon_left\"\n            [content]=\"iconContent\"\n        >\n            <ng-template let-iconSrc>\n                <tui-svg [src]=\"iconSrc\"></tui-svg>\n            </ng-template>\n        </div>\n        <div class=\"wrapper\">\n            <span aria-hidden=\"true\" class=\"value\">{{value}}</span>\n            <label\n                *ngIf=\"hasPlaceholder\"\n                automation-id=\"tui-primitive-textfield__placeholder\"\n                class=\"placeholder\"\n                [class.placeholder_raised]=\"placeholderRaised\"\n                [for]=\"id\"\n            >\n                <ng-content></ng-content>\n            </label>\n            <div\n                *ngIf=\"hasValueDecoration\"\n                class=\"value-decoration\"\n                automation-id=\"tui-primitive-textfield__value-decoration\"\n                aria-hidden=\"true\"\n            >\n                <span class=\"value-decoration-inner\">\n                    <span class=\"ghost\">{{value}}</span>\n                    <span automation-id=\"tui-primitive-textfield__example-text\"\n                        >{{computedFiller}}</span\n                    >\n                    <span\n                        *ngIf=\"hasPostfix\"\n                        class=\"postfix\"\n                        [class.postfix_shifted]=\"postfixShifted\"\n                        >{{postfix}}</span\n                    >\n                </span>\n            </div>\n        </div>\n        <div\n            polymorpheus-outlet\n            *ngIf=\"hasCustomContent\"\n            class=\"custom-content\"\n            automation-id=\"tui-primitive-textfield__custom-content\"\n            [content]=\"controller.customContent\"\n        >\n            <ng-template let-iconSrc>\n                <tui-svg class=\"custom-icon\" [src]=\"iconSrc\"></tui-svg>\n            </ng-template>\n        </div>\n        <tui-svg\n            *ngIf=\"hasCleaner\"\n            class=\"cleaner\"\n            automation-id=\"tui-primitive-textfield__cleaner\"\n            src=\"tuiIconCloseLarge\"\n            (click.stop)=\"clear()\"\n        ></tui-svg>\n        <tui-tooltip\n            *ngIf=\"hasTooltip\"\n            automation-id=\"tui-primitive-textfield__tooltip\"\n            [describeId]=\"id\"\n            [content]=\"hintController.content\"\n            [direction]=\"hintController.direction\"\n            [mode]=\"hintController.mode\"\n        ></tui-tooltip>\n        <div\n            polymorpheus-outlet\n            *ngIf=\"iconAlignRight\"\n            class=\"icon\"\n            [content]=\"iconContent\"\n        >\n            <ng-template let-iconSrc>\n                <tui-svg [src]=\"iconSrc\"></tui-svg>\n            </ng-template>\n        </div>\n    </div>\n</tui-wrapper>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            providers: TUI_PRIMITIVE_TEXTFIELD_PROVIDERS,
            host: {
                '($.data-mode.attr)': 'mode$',
            },
            styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:block;border-radius:var(--tui-radius-m)}:host[data-tui-host-size='s']{height:var(--tui-height-s);min-height:var(--tui-height-s);max-height:var(--tui-height-s)}:host[data-tui-host-size='m']{height:var(--tui-height-m);min-height:var(--tui-height-m);max-height:var(--tui-height-m)}:host[data-tui-host-size='l']{height:var(--tui-height-l);min-height:var(--tui-height-l);max-height:var(--tui-height-l);font-size:15px}.input{font:var(--tui-font-text-s);color:var(--tui-text-01);padding:0 12px;border:0;border-radius:inherit;background:0 0;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;box-sizing:border-box;white-space:nowrap;overflow:hidden;text-transform:inherit}.input:-webkit-autofill,.input:-webkit-autofill:focus,.input:-webkit-autofill:hover{border-radius:inherit;-webkit-text-fill-color:inherit!important;color:inherit!important;background-color:transparent!important;-webkit-box-shadow:0 0 0 1000px var(--tui-autofill) inset!important}:host[data-tui-host-size='s'] .input{padding:0 8px 0 12px}:host[data-tui-host-size='l'] .input{padding:0 16px}:host._disabled .input{pointer-events:none}:host._right-aligned .input{text-align:right}:host[data-tui-host-size='l']:not(._label-outside) .input{padding-top:20px}:host[data-tui-host-size='l']:not(._label-outside) .input:-webkit-autofill+.content .placeholder{width:114%;transform:translateY(-10px) scale(.87)}:host[data-tui-host-size='m']:not(._label-outside) .input{padding-top:18px}:host[data-tui-host-size='m']:not(._label-outside) .input:-webkit-autofill+.content .placeholder{width:118%;transform:translateY(-8px) scale(.85)}.ghost{visibility:hidden;white-space:pre;text-overflow:clip}.filler{vertical-align:middle}.content{display:flex;height:100%;width:100%;padding:0 12px;box-sizing:border-box;align-items:center;overflow:hidden}:host[data-tui-host-size='s'] .content{padding-right:8px}:host[data-tui-host-size='l'] .content{padding-left:16px}.wrapper{flex:1;min-width:0;padding-right:4px}.value-decoration{display:flex;align-items:center;height:20px;margin:-20px 0;padding:10px 0;box-sizing:content-box;color:var(--tui-text-03);letter-spacing:normal;text-transform:none}:host._right-aligned .value-decoration{flex-direction:row-reverse;margin-right:-4px}:host[data-tui-host-size='m']._label-outside .value-decoration{margin-top:-19px}:host[data-mode=onDark] .value-decoration{color:var(--tui-text-03-night)}.value-decoration-inner{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:0}.postfix{transition-property:color;transition-duration:.3s;transition-timing-function:ease-in-out;color:var(--tui-text-01)}.postfix_shifted{margin-left:.5ch}:host[data-mode=onDark] .postfix{color:var(--tui-text-01-night)}.placeholder{transition-property:transform,min-width,color,letter-spacing;transition-duration:.3s;transition-timing-function:ease-in-out;font:var(--tui-font-text-s);color:var(--tui-text-01);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;width:100%;height:20px;font-size:13px;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;color:var(--tui-text-02);transform-origin:left;letter-spacing:normal;text-transform:none}.placeholder_raised{width:114%;transform:translateY(-10px) scale(.87)}:host[data-tui-host-size='m'] .placeholder_raised{width:118%;transform:translateY(-8px) scale(.85);letter-spacing:.4px}:host._invalid:not(._focused) .placeholder_raised,:host._invalid:not(._focused)._hovered .placeholder_raised{color:var(--tui-error-fill)}:host[data-mode=onDark]._invalid:not(._focused) .placeholder_raised,:host[data-mode=onDark]._invalid:not(._focused)._hovered .placeholder_raised{color:var(--tui-error-fill-night)}:host._focused .placeholder,:host[data-tui-host-size='l']._focused._label-outside .placeholder,:host[data-tui-host-size='m']._focused._label-outside .placeholder{color:var(--tui-text-03)}:host[data-tui-host-size='l'] .placeholder{font-size:15px}:host[data-tui-host-size='l']._focused:not(._label-outside) .placeholder,:host[data-tui-host-size='m']._focused:not(._label-outside) .placeholder{color:var(--tui-text-01)}:host[data-mode=onDark] .placeholder{color:var(--tui-text-02-night)}:host[data-tui-host-size='l'][data-mode=onDark]._focused:not(._label-outside) .placeholder,:host[data-tui-host-size='m'][data-mode=onDark]._focused:not(._label-outside) .placeholder{color:var(--tui-text-01-night)}:host[data-mode=onDark]._focused .placeholder,:host[data-tui-host-size='l'][data-mode=onDark]._focused._label-outside .placeholder,:host[data-tui-host-size='m'][data-mode=onDark]._focused._label-outside .placeholder{color:var(--tui-text-02-night)}.cleaner{transition-duration:.3s;transition-timing-function:ease-in-out;display:flex;width:24px;height:24px;align-items:center;justify-content:center;color:var(--tui-text-03);position:relative;box-sizing:border-box;cursor:pointer;transition-property:color,transform}.cleaner:hover{color:var(--tui-text-02)}:host._disabled .cleaner,:host._readonly .cleaner{pointer-events:none}:host[data-mode=onDark] .cleaner{color:var(--tui-text-03-night)}:host[data-mode=onDark] .cleaner:hover{color:var(--tui-text-01-night)}.icon{display:flex;align-items:center;justify-content:center;color:var(--tui-text-03)}.icon_left{margin:0 8px 0 -4px}:host[data-tui-host-size='s'] .icon_left{margin-right:4px}.value{height:0;display:block;visibility:hidden;white-space:pre}.custom-content{position:relative;display:flex;align-items:center;justify-content:center;width:32px;height:32px;margin-right:4px;pointer-events:none}.custom-icon{width:100%;height:100%}.icon{transition-duration:.3s;transition-timing-function:ease-in-out;display:flex;width:24px;height:24px;align-items:center;justify-content:center;color:var(--tui-text-03);box-sizing:border-box;cursor:pointer;transition-property:color,transform;position:relative;pointer-events:none}.icon:hover{color:var(--tui-text-02)}:host._disabled .icon,:host._readonly .icon{pointer-events:none}:host[data-mode=onDark] .icon{color:var(--tui-text-03-night)}:host[data-mode=onDark] .icon:hover{color:var(--tui-text-01-night)}:host._hovered:not(._readonly) .icon{color:var(--tui-text-02)}:host[data-mode=onDark]._hovered:not(._readonly) .icon{color:var(--tui-text-01-night)}:host[data-mode=onLight]._hovered:not(._readonly) .icon{color:var(--tui-text-01)}.input_hidden{opacity:0;text-indent:-10em;-webkit-user-select:none}:host[data-tui-host-size] .input_template{display:flex;width:100%;max-width:100%;align-items:center;padding-right:0;border-right:0 solid transparent;pointer-events:none}.input::-webkit-caps-lock-indicator{margin-right:6px;align-self:center}:host[data-tui-host-size='l']:not(._label-outside) .input::-webkit-caps-lock-indicator{margin-top:-20px}.input::-webkit-contacts-auto-fill-button,.input::-webkit-credentials-auto-fill-button,.input::-webkit-credit-card-auto-fill-button{background-color:var(--tui-text-03)}:host[data-tui-host-size='l']:not(._label-outside) .input::-webkit-contacts-auto-fill-button,:host[data-tui-host-size='l']:not(._label-outside) .input::-webkit-credentials-auto-fill-button,:host[data-tui-host-size='l']:not(._label-outside) .input::-webkit-credit-card-auto-fill-button{margin-top:-20px}.input::-webkit-contacts-auto-fill-button:hover,.input::-webkit-credentials-auto-fill-button:hover,.input::-webkit-credit-card-auto-fill-button:hover{background-color:var(--tui-text-02)}.text-template{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}"]
        }),
        __param(0, Inject(TUI_MODE)),
        __param(1, Inject(TUI_TEXTFIELD_APPEARANCE)),
        __param(2, Inject(TUI_TEXTIFELD_WATCHED_CONTROLLER)),
        __param(3, Inject(TUI_HINT_WATCHED_CONTROLLER))
    ], TuiPrimitiveTextfieldComponent);
    return TuiPrimitiveTextfieldComponent;
}(AbstractTuiInteractive));

var TuiPrimitiveTextfieldModule = /** @class */ (function () {
    function TuiPrimitiveTextfieldModule() {
    }
    TuiPrimitiveTextfieldModule = __decorate([
        NgModule({
            imports: [
                CommonModule,
                FormsModule,
                TuiMaskAccessorModule,
                TuiFocusableModule,
                TuiFocusedModule,
                TuiHoveredModule,
                TuiInputModeModule,
                PolymorpheusModule,
                TuiWrapperModule,
                TuiSvgModule,
                TuiTooltipModule,
                TuiAutofilledModule,
                TuiDescribedByModule,
                TuiPreventDefaultModule,
            ],
            declarations: [TuiPrimitiveTextfieldComponent],
            exports: [TuiPrimitiveTextfieldComponent],
        })
    ], TuiPrimitiveTextfieldModule);
    return TuiPrimitiveTextfieldModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_PRIMITIVE_TEXTFIELD_PROVIDERS, TuiPrimitiveTextfieldComponent, TuiPrimitiveTextfieldModule, ɵ0 };
//# sourceMappingURL=taiga-ui-core-components-primitive-textfield.js.map
