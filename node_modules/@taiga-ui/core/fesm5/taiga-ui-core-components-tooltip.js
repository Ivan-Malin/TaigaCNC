import { __decorate, __param } from 'tslib';
import { Inject, Input, HostBinding, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { TuiDestroyService, tuiDefaultProp } from '@taiga-ui/cdk';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_MODE } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { CommonModule } from '@angular/common';
import { TuiSvgModule } from '@taiga-ui/core/components/svg';
import { TuiHintModule } from '@taiga-ui/core/directives/hint';

var TuiTooltipComponent = /** @class */ (function () {
    function TuiTooltipComponent(destroy$, mode$) {
        var _this = this;
        this.content = '';
        this.mode = null;
        this.direction = 'bottom-left';
        this.describeId = '';
        this.globalMode = null;
        mode$.pipe(takeUntil(destroy$)).subscribe(function (mode) {
            _this.globalMode = mode;
        });
    }
    Object.defineProperty(TuiTooltipComponent.prototype, "computedMode", {
        // TODO: Simplify
        get: function () {
            return this.mode || (this.globalMode ? this.globalMode : null);
        },
        enumerable: true,
        configurable: true
    });
    TuiTooltipComponent.ctorParameters = function () { return [
        { type: Observable, decorators: [{ type: Inject, args: [TuiDestroyService,] }] },
        { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] }
    ]; };
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiTooltipComponent.prototype, "content", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiTooltipComponent.prototype, "mode", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiTooltipComponent.prototype, "direction", void 0);
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiTooltipComponent.prototype, "describeId", void 0);
    __decorate([
        HostBinding('attr.data-mode')
    ], TuiTooltipComponent.prototype, "computedMode", null);
    TuiTooltipComponent = __decorate([
        Component({
            selector: 'tui-tooltip',
            template: "<tui-svg\n    class=\"icon\"\n    src=\"tuiIconTooltipLarge\"\n    automation-id=\"tui-tooltip__icon\"\n    [tuiHintId]=\"describeId\"\n    [tuiHint]=\"content\"\n    [tuiHintDirection]=\"direction\"\n    [tuiHintMode]=\"computedMode\"\n></tui-svg>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            providers: [TuiDestroyService, MODE_PROVIDER],
            styles: [":host{transition-property:color;transition-duration:.3s;transition-timing-function:ease-in-out;position:relative;display:inline-block;width:24px;height:24px;vertical-align:middle;font-size:0;line-height:0;cursor:pointer;color:var(--tui-text-03)}:host:hover{color:var(--tui-text-02)}:host[data-mode=onDark]{color:var(--tui-text-01-night)}:host[data-mode=onLight]{color:var(--tui-text-01)}:host[data-mode=error]{color:var(--tui-error-fill)}.icon{transition-property:opacity,color;transition-duration:.3s;transition-timing-function:ease-in-out;width:100%;height:100%}:host:not([data-mode]) .icon._hint_hovered{color:var(--tui-text-02)}:host[data-mode=onDark] .icon,:host[data-mode=onLight] .icon{opacity:var(--tui-disabled-opacity)}:host[data-mode=onDark] .icon._hint_hovered,:host[data-mode=onDark] .icon:hover,:host[data-mode=onLight] .icon._hint_hovered,:host[data-mode=onLight] .icon:hover{opacity:1}"]
        }),
        __param(0, Inject(TuiDestroyService)),
        __param(1, Inject(TUI_MODE))
    ], TuiTooltipComponent);
    return TuiTooltipComponent;
}());

var TuiTooltipModule = /** @class */ (function () {
    function TuiTooltipModule() {
    }
    TuiTooltipModule = __decorate([
        NgModule({
            imports: [CommonModule, TuiSvgModule, TuiHintModule],
            declarations: [TuiTooltipComponent],
            exports: [TuiTooltipComponent],
        })
    ], TuiTooltipModule);
    return TuiTooltipModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TuiTooltipComponent, TuiTooltipModule };
//# sourceMappingURL=taiga-ui-core-components-tooltip.js.map
