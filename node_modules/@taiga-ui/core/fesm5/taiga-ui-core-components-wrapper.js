import { __decorate, __param } from 'tslib';
import { Inject, Input, HostBinding, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';
import { TUI_IS_MOBILE } from '@taiga-ui/cdk';
import { MODE_PROVIDER } from '@taiga-ui/core/providers';
import { TUI_MODE } from '@taiga-ui/core/tokens';
import { Observable } from 'rxjs';

var TuiWrapperComponent = /** @class */ (function () {
    function TuiWrapperComponent(isMobile, mode$) {
        this.isMobile = isMobile;
        this.mode$ = mode$;
        this.disabled = false;
        this.readOnly = false;
        this.hovered = false;
        this.pressed = false;
        this.focused = false;
        this.invalid = false;
        this.appearance = '';
    }
    Object.defineProperty(TuiWrapperComponent.prototype, "computedInvalid", {
        get: function () {
            return !this.disabled && !this.readOnly && this.invalid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiWrapperComponent.prototype, "computedFocused", {
        get: function () {
            return this.focused && !this.disabled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiWrapperComponent.prototype, "interactiveState", {
        get: function () {
            if (this.disabled) {
                return "disabled" /* Disabled */;
            }
            if (this.readOnly) {
                return "readonly" /* Readonly */;
            }
            if (this.pressed && !this.isMobile) {
                return "pressed" /* Pressed */;
            }
            if (this.hovered && !this.isMobile) {
                return "hovered" /* Hovered */;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    TuiWrapperComponent.ctorParameters = function () { return [
        { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_MOBILE,] }] },
        { type: Observable, decorators: [{ type: Inject, args: [TUI_MODE,] }] }
    ]; };
    __decorate([
        Input()
    ], TuiWrapperComponent.prototype, "disabled", void 0);
    __decorate([
        Input()
    ], TuiWrapperComponent.prototype, "readOnly", void 0);
    __decorate([
        Input()
    ], TuiWrapperComponent.prototype, "hovered", void 0);
    __decorate([
        Input()
    ], TuiWrapperComponent.prototype, "pressed", void 0);
    __decorate([
        Input()
    ], TuiWrapperComponent.prototype, "focused", void 0);
    __decorate([
        Input()
    ], TuiWrapperComponent.prototype, "invalid", void 0);
    __decorate([
        Input(),
        HostBinding('attr.data-appearance')
    ], TuiWrapperComponent.prototype, "appearance", void 0);
    __decorate([
        HostBinding('class._invalid')
    ], TuiWrapperComponent.prototype, "computedInvalid", null);
    __decorate([
        HostBinding('class._focused')
    ], TuiWrapperComponent.prototype, "computedFocused", null);
    __decorate([
        HostBinding('attr.data-state')
    ], TuiWrapperComponent.prototype, "interactiveState", null);
    TuiWrapperComponent = __decorate([
        Component({
            selector: 'tui-wrapper',
            template: '<ng-content></ng-content>',
            changeDetection: ChangeDetectionStrategy.OnPush,
            providers: [MODE_PROVIDER],
            host: {
                '($.data-mode.attr)': 'mode$',
            },
            styles: [":host{transition-property:color,background;transition-duration:.3s;transition-timing-function:ease-in-out;position:relative;display:block;height:100%;width:100%;text-align:left;border-radius:inherit}:host:after{transition-property:box-shadow;transition-duration:.3s;transition-timing-function:ease-in-out;content:'';position:absolute;top:0;left:0;right:0;bottom:0;border-radius:inherit;border:1px solid currentColor;pointer-events:none;color:transparent}:host._focused:after{border-width:2px;color:var(--tui-focus)}:host[data-state=disabled]{pointer-events:none}"]
        }),
        __param(0, Inject(TUI_IS_MOBILE)),
        __param(1, Inject(TUI_MODE))
    ], TuiWrapperComponent);
    return TuiWrapperComponent;
}());

var TuiWrapperModule = /** @class */ (function () {
    function TuiWrapperModule() {
    }
    TuiWrapperModule = __decorate([
        NgModule({
            declarations: [TuiWrapperComponent],
            exports: [TuiWrapperComponent],
        })
    ], TuiWrapperModule);
    return TuiWrapperModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TuiWrapperComponent, TuiWrapperModule };
//# sourceMappingURL=taiga-ui-core-components-wrapper.js.map
