import { __decorate } from 'tslib';
import { Pipe, NgModule } from '@angular/core';
import { formatNumber } from '@taiga-ui/core/utils/format';

var TuiFormatNumberPipe = /** @class */ (function () {
    function TuiFormatNumberPipe() {
    }
    /**
     * Formats number adding thousand separators and correct decimal separator
     * padding decimal part with zeroes to given length
     * @param value number
     * @param decimalSeparator
     * @param decimalLimit number of digits of decimal part, null to keep untouched
     */
    TuiFormatNumberPipe.prototype.transform = function (value, decimalLimit, decimalSeparator) {
        if (decimalLimit === void 0) { decimalLimit = null; }
        if (decimalSeparator === void 0) { decimalSeparator = ','; }
        return formatNumber(value, decimalLimit, decimalSeparator);
    };
    TuiFormatNumberPipe = __decorate([
        Pipe({ name: 'tuiFormatNumber' })
    ], TuiFormatNumberPipe);
    return TuiFormatNumberPipe;
}());

var TuiFormatNumberPipeModule = /** @class */ (function () {
    function TuiFormatNumberPipeModule() {
    }
    TuiFormatNumberPipeModule = __decorate([
        NgModule({
            exports: [TuiFormatNumberPipe],
            declarations: [TuiFormatNumberPipe],
        })
    ], TuiFormatNumberPipeModule);
    return TuiFormatNumberPipeModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { TuiFormatNumberPipe, TuiFormatNumberPipeModule };
//# sourceMappingURL=taiga-ui-core-pipes-format-number.js.map
