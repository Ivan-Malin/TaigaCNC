{"version":3,"file":"taiga-ui-core-utils-dom.js","sources":["ng://@taiga-ui/core/utils/dom/are-css-vars-supported.ts","ng://@taiga-ui/core/utils/dom/check-fixed-position.ts","ng://@taiga-ui/core/utils/dom/get-safe-area-size.ts","ng://@taiga-ui/core/utils/dom/get-screen-width.ts","ng://@taiga-ui/core/utils/dom/process-icon.ts","ng://@taiga-ui/core/utils/dom/taiga-ui-core-utils-dom.ts"],"sourcesContent":["import {isEdgeOlderThan} from '@taiga-ui/cdk';\n\n/**\n * TODO: remove \"any\" in new TS version; https://github.com/ng-web-apis/common/pull/6\n */\nexport function areCssVarsSupported(cssRef: any, userAgent: string): boolean {\n    return cssRef.supports('(--a: 0)') && !isEdgeOlderThan(17, userAgent);\n}\n","export function checkFixedPosition(element: HTMLElement | null): boolean {\n    if (!element || typeof getComputedStyle === 'undefined') {\n        return false;\n    }\n\n    const style = getComputedStyle(element);\n\n    return (\n        style.getPropertyValue('position') === 'fixed' ||\n        checkFixedPosition(element.parentElement)\n    );\n}\n","/**\n * Calculates size of safe area on mobile devices (status bars)\n *\n * ATTENTION: Only use in browser environment\n */\nexport function getSafeAreaSize(): number {\n    if (!CSS.supports('padding-top: env(safe-area-inset-top)')) {\n        return 0;\n    }\n\n    const div = document.createElement('div');\n\n    div.style.paddingTop = 'env(safe-area-inset-top)';\n    document.body.appendChild(div);\n\n    const safeAreaSize = parseInt(window.getComputedStyle(div).paddingTop!, 10) || 0;\n\n    document.body.removeChild(div);\n\n    return safeAreaSize;\n}\n","export function getScreenWidth(documentRef: Document): number {\n    return Math.max(\n        documentRef.documentElement.clientWidth,\n        documentRef.defaultView ? documentRef.defaultView.innerWidth : 0,\n    );\n}\n","const WIDTH_SEARCH = 'width=\"';\nconst HEIGHT_SEARCH = 'height=\"';\nconst START = '<svg';\n\nexport function processIcon(source: string, name: string): string {\n    if (source.includes(`id=\"${name}\"`)) {\n        return source;\n    }\n\n    const src = source.substring(source.indexOf(START));\n    const attributes = src.substring(0, src.indexOf('>'));\n\n    if (\n        !attributes ||\n        !attributes.includes(WIDTH_SEARCH) ||\n        !attributes.includes(HEIGHT_SEARCH)\n    ) {\n        return (\n            src.replace(\n                START,\n                `<svg xmlns=\"http://www.w3.org/2000/svg\"><g id=\"${name}\" xmlns=\"http://www.w3.org/2000/svg\"><svg`,\n            ) + '</g></svg>'\n        );\n    }\n\n    const indexOfWidth = attributes.indexOf(WIDTH_SEARCH);\n    const indexOfHeight = attributes.indexOf(HEIGHT_SEARCH);\n    const widthOffset = indexOfWidth + WIDTH_SEARCH.length;\n    const heightOffset = indexOfHeight + HEIGHT_SEARCH.length;\n    const widthString = attributes.substring(\n        widthOffset,\n        attributes.indexOf('\"', widthOffset),\n    );\n    const heightString = attributes.substring(\n        heightOffset,\n        attributes.indexOf('\"', heightOffset),\n    );\n\n    if (\n        !heightString ||\n        !widthString ||\n        widthString.includes('%') ||\n        heightString.includes('%')\n    ) {\n        return src.replace(START, `<svg id=\"${name}\"`);\n    }\n\n    const width = parseInt(widthString, 10);\n    const height = parseInt(heightString, 10);\n    const transform = `translate(-${width / 2},-${height / 2})`;\n\n    return `<g id=\"${name}\" xmlns=\"http://www.w3.org/2000/svg\" transform=\"${transform}\"><svg x=\"50%\" y=\"50%\">${src}</svg></g>`;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}