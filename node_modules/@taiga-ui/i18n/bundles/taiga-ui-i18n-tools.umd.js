(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs/operators'), require('@taiga-ui/i18n/languages'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/i18n/tools', ['exports', '@angular/core', 'rxjs/operators', '@taiga-ui/i18n/languages', 'rxjs'], factory) :
    (global = global || self, factory((global['taiga-ui'] = global['taiga-ui'] || {}, global['taiga-ui'].i18n = global['taiga-ui'].i18n || {}, global['taiga-ui'].i18n.tools = {}), global.ng.core, global.rxjs.operators, global['taiga-ui'].i18n.languages, global.rxjs));
}(this, (function (exports, core, operators, languages, rxjs) { 'use strict';

    var TUI_LANGUAGE = new core.InjectionToken("Language for Taiga UI libraries i18n", {
        factory: function () { return rxjs.of(languages.TUI_ENGLISH_LANGUAGE); },
    });

    function extractI18n(key) {
        return function () { return core.inject(TUI_LANGUAGE).pipe(operators.map(function (lang) { return lang[key]; })); };
    }

    exports.TUI_LANGUAGE = TUI_LANGUAGE;
    exports.extractI18n = extractI18n;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=taiga-ui-i18n-tools.umd.js.map
