{"version":3,"file":"taiga-ui-i18n-tools.js","sources":["ng://@taiga-ui/i18n/tools/language.ts","ng://@taiga-ui/i18n/tools/extract-i18n.ts","ng://@taiga-ui/i18n/tools/taiga-ui-i18n-tools.ts"],"sourcesContent":["import {InjectionToken} from '@angular/core';\nimport {Language} from '@taiga-ui/i18n/interfaces';\nimport {TUI_ENGLISH_LANGUAGE} from '@taiga-ui/i18n/languages';\nimport {Observable, of} from 'rxjs';\n\nexport const TUI_LANGUAGE = new InjectionToken<Observable<Language>>(\n    `Language for Taiga UI libraries i18n`,\n    {\n        factory: () => of(TUI_ENGLISH_LANGUAGE),\n    },\n);\n","import {inject} from '@angular/core';\nimport {Language} from '@taiga-ui/i18n/interfaces';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {TUI_LANGUAGE} from './language';\n\nexport function extractI18n<K extends keyof Language>(\n    key: K,\n): () => Observable<Language[K]> {\n    return () => inject(TUI_LANGUAGE).pipe(map(lang => lang[key]));\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;MAKa,YAAY,GAAG,IAAI,cAAc,CAC1C,sCAAsC,EACtC;IACI,OAAO,EAAE,MAAM,EAAE,CAAC,oBAAoB,CAAC;CAC1C;;SCHW,WAAW,CACvB,GAAM;IAEN,OAAO,MAAM,MAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACnE;;ACVA;;;;;;"}