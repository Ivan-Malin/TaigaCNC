(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@taiga-ui/cdk'), require('@taiga-ui/core'), require('@taiga-ui/kit/constants'), require('@taiga-ui/kit/providers'), require('@taiga-ui/kit/tokens'), require('@taiga-ui/kit/utils/mask'), require('@taiga-ui/kit/utils/miscellaneous'), require('@tinkoff/ng-polymorpheus'), require('rxjs/operators'), require('@angular/common'), require('@taiga-ui/kit/components/calendar-range'), require('angular2-text-mask')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/components/input-date-range', ['exports', '@angular/core', '@angular/forms', '@taiga-ui/cdk', '@taiga-ui/core', '@taiga-ui/kit/constants', '@taiga-ui/kit/providers', '@taiga-ui/kit/tokens', '@taiga-ui/kit/utils/mask', '@taiga-ui/kit/utils/miscellaneous', '@tinkoff/ng-polymorpheus', 'rxjs/operators', '@angular/common', '@taiga-ui/kit/components/calendar-range', 'angular2-text-mask'], factory) :
    (global = global || self, factory((global['taiga-ui'] = global['taiga-ui'] || {}, global['taiga-ui'].kit = global['taiga-ui'].kit || {}, global['taiga-ui'].kit.components = global['taiga-ui'].kit.components || {}, global['taiga-ui'].kit.components['input-date-range'] = {}), global.ng.core, global.ng.forms, global.cdk, global.core$1, global['taiga-ui'].kit.constants, global['taiga-ui'].kit.providers, global['taiga-ui'].kit.tokens, global['taiga-ui'].kit.utils.mask, global['taiga-ui'].kit.utils.miscellaneous, global.ngPolymorpheus, global.rxjs.operators, global.ng.common, global['taiga-ui'].kit.components['calendar-range'], global.angular2TextMask));
}(this, (function (exports, core, forms, cdk, core$1, constants, providers, tokens, mask, miscellaneous, ngPolymorpheus, operators, common, calendarRange, angular2TextMask) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __createBinding(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    }

    function __exportStar(m, exports) {
        for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }

    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var ɵ0 = miscellaneous.TuiReplayControlValueChangesFactory;
    var TuiInputDateRangeComponent = /** @class */ (function (_super) {
        __extends(TuiInputDateRangeComponent, _super);
        function TuiInputDateRangeComponent(control, changeDetectorRef, injector, isMobile, dialogService, mobileCalendar, textfieldSize, textfieldExampleText, filler, rangeFiller) {
            var _this = _super.call(this, control, changeDetectorRef) || this;
            _this.injector = injector;
            _this.isMobile = isMobile;
            _this.dialogService = dialogService;
            _this.mobileCalendar = mobileCalendar;
            _this.textfieldSize = textfieldSize;
            _this.textfieldExampleText = textfieldExampleText;
            _this.filler = filler;
            _this.rangeFiller = rangeFiller;
            _this.disabledItemHandler = cdk.ALWAYS_FALSE_HANDLER;
            _this.markerHandler = core$1.TUI_DEFAULT_MARKER_HANDLER;
            _this.defaultViewedMonth = cdk.TuiMonth.currentLocal();
            _this.items = [];
            _this.min = cdk.TUI_FIRST_DAY;
            _this.max = cdk.TUI_LAST_DAY;
            _this.minLength = null;
            _this.maxLength = null;
            _this.open = false;
            _this.maxLengthMapper = constants.MAX_DAY_RANGE_LENGTH_MAPPER;
            _this.textMaskOptions = {
                mask: constants.TUI_DATE_RANGE_MASK,
                pipe: mask.tuiCreateAutoCorrectedDateRangePipe(_this),
                guide: false,
            };
            return _this;
        }
        TuiInputDateRangeComponent_1 = TuiInputDateRangeComponent;
        Object.defineProperty(TuiInputDateRangeComponent.prototype, "nativeFocusableElement", {
            get: function () {
                return this.textfield ? this.textfield.nativeFocusableElement : null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiInputDateRangeComponent.prototype, "focused", {
            get: function () {
                return !!this.textfield && this.textfield.focused;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiInputDateRangeComponent.prototype, "computedMobile", {
            get: function () {
                return this.isMobile && !!this.mobileCalendar;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiInputDateRangeComponent.prototype, "calendarIcon", {
            get: function () {
                return core$1.sizeBigger(this.textfieldSize.size)
                    ? 'tuiIconCalendarLarge'
                    : 'tuiIconCalendar';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiInputDateRangeComponent.prototype, "canOpen", {
            get: function () {
                return !this.computedDisabled && !this.readOnly && !this.computedMobile;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiInputDateRangeComponent.prototype, "computedExampleText", {
            get: function () {
                return this.items.length ? this.textfieldExampleText.exampleText : '';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiInputDateRangeComponent.prototype, "computedFiller", {
            get: function () {
                return this.activePeriod ? '' : this.rangeFiller;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiInputDateRangeComponent.prototype, "computedMask", {
            get: function () {
                return this.activePeriod ? constants.EMPTY_MASK : this.textMaskOptions;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiInputDateRangeComponent.prototype, "activePeriod", {
            get: function () {
                var _this = this;
                return (this.items.find(function (item) {
                    return cdk.nullableSame(_this.value, item.range, function (a, b) {
                        return a.from.daySame(b.from.dayLimit(_this.min, _this.max)) &&
                            a.to.daySame(b.to.dayLimit(_this.min, _this.max));
                    });
                }) || null);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiInputDateRangeComponent.prototype, "computedValue", {
            get: function () {
                var _a = this, value = _a.value, nativeValue = _a.nativeValue, activePeriod = _a.activePeriod;
                if (activePeriod) {
                    return String(activePeriod);
                }
                return value ? value.formattedDayRange : nativeValue;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiInputDateRangeComponent.prototype, "innerPseudoFocused", {
            get: function () {
                if (this.pseudoFocused === false) {
                    return false;
                }
                if (this.open || this.computedFocused) {
                    return true;
                }
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiInputDateRangeComponent.prototype, "nativeValue", {
            get: function () {
                return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';
            },
            set: function (value) {
                if (!this.nativeFocusableElement) {
                    return;
                }
                this.nativeFocusableElement.value = value;
            },
            enumerable: true,
            configurable: true
        });
        TuiInputDateRangeComponent.prototype.onClick = function () {
            var _this = this;
            if (!this.isMobile || !this.mobileCalendar) {
                this.toggle();
                return;
            }
            this.dialogService
                .open(new ngPolymorpheus.PolymorpheusComponent(this.mobileCalendar, this.injector), {
                size: 'fullscreen',
                closeable: false,
                data: {
                    single: false,
                    min: this.maxLengthMapper(this.min, this.value, this.maxLength, true),
                    max: this.maxLengthMapper(this.max, this.value, this.maxLength, false),
                    disabledItemHandler: this.disabledItemHandler,
                },
            })
                .pipe(operators.takeUntil(this.destroy$))
                .subscribe(function (value) {
                _this.updateValue(value);
            });
        };
        TuiInputDateRangeComponent.prototype.onOpenChange = function (open) {
            this.open = open;
        };
        TuiInputDateRangeComponent.prototype.onValueChange = function (value) {
            if (value && this.control) {
                this.control.updateValueAndValidity();
            }
            if (value.length !== this.rangeFiller.length) {
                this.updateValue(null);
                return;
            }
            var parsedValue = cdk.TuiDayRange.normalizeParse(value, this.filler, this.rangeFiller);
            this.updateValue(!this.minLength && !this.maxLength
                ? parsedValue
                : this.clampValue(parsedValue));
        };
        TuiInputDateRangeComponent.prototype.onRangeChange = function (range) {
            this.toggle();
            this.focusInput();
            if (!cdk.nullableSame(this.value, range, function (a, b) { return a.daySame(b); })) {
                this.updateValue(range);
            }
        };
        TuiInputDateRangeComponent.prototype.onItemSelect = function (item) {
            this.toggle();
            this.focusInput();
            if (typeof item !== 'string') {
                this.updateValue(item.range.dayLimit(this.min, this.max));
                return;
            }
            if (this.activePeriod !== null) {
                this.updateValue(null);
                this.nativeValue = '';
            }
        };
        TuiInputDateRangeComponent.prototype.onHovered = function (hovered) {
            this.updateHovered(hovered);
        };
        TuiInputDateRangeComponent.prototype.onPressed = function (pressed) {
            this.updatePressed(pressed);
        };
        TuiInputDateRangeComponent.prototype.onActiveZone = function (focused) {
            this.updateFocused(focused);
            if (!focused &&
                !this.itemSelected &&
                (this.nativeValue.length === this.filler.length ||
                    this.nativeValue.length ===
                        this.filler.length + cdk.RANGE_SEPARATOR_CHAR.length)) {
                this.updateValue(cdk.TuiDayRange.normalizeParse(this.nativeValue, this.filler, this.rangeFiller));
            }
        };
        TuiInputDateRangeComponent.prototype.writeValue = function (value) {
            _super.prototype.writeValue.call(this, value);
            this.nativeValue = value ? this.computedValue : '';
        };
        Object.defineProperty(TuiInputDateRangeComponent.prototype, "itemSelected", {
            get: function () {
                var _this = this;
                return this.items.findIndex(function (item) { return String(item) === _this.nativeValue; }) !== -1;
            },
            enumerable: true,
            configurable: true
        });
        TuiInputDateRangeComponent.prototype.toggle = function () {
            this.open = !this.open;
        };
        TuiInputDateRangeComponent.prototype.focusInput = function (preventScroll) {
            if (preventScroll === void 0) { preventScroll = false; }
            if (this.nativeFocusableElement) {
                cdk.setNativeFocused(this.nativeFocusableElement, true, preventScroll);
            }
        };
        TuiInputDateRangeComponent.prototype.clampValue = function (value) {
            var clampedBottom = this.minLength && value.from.append(this.minLength).dayAfter(value.to)
                ? new cdk.TuiDayRange(value.from, value.from.append(this.minLength).append({ day: -1 }))
                : value;
            var availableMax = this.maxLength
                ? clampedBottom.from.append(this.maxLength).append({ day: -1 })
                : this.max;
            return clampedBottom.to.dayAfter(availableMax)
                ? new cdk.TuiDayRange(clampedBottom.from, availableMax)
                : clampedBottom;
        };
        var TuiInputDateRangeComponent_1;
        TuiInputDateRangeComponent.ctorParameters = function () { return [
            { type: forms.NgControl, decorators: [{ type: core.Optional }, { type: core.Self }, { type: core.Inject, args: [forms.NgControl,] }] },
            { type: core.ChangeDetectorRef, decorators: [{ type: core.Inject, args: [core.ChangeDetectorRef,] }] },
            { type: core.Injector, decorators: [{ type: core.Inject, args: [core.Injector,] }] },
            { type: Boolean, decorators: [{ type: core.Inject, args: [cdk.TUI_IS_MOBILE,] }] },
            { type: core$1.TuiDialogService, decorators: [{ type: core.Inject, args: [core$1.TuiDialogService,] }] },
            { type: core.Type, decorators: [{ type: core.Optional }, { type: core.Inject, args: [tokens.TUI_MOBILE_CALENDAR,] }] },
            { type: core$1.TuiTextfieldSizeDirective, decorators: [{ type: core.Inject, args: [core$1.TUI_TEXTFIELD_SIZE,] }] },
            { type: core$1.TuiTextfieldExampleTextDirective, decorators: [{ type: core.Inject, args: [core$1.TUI_TEXTFIELD_EXAMPLE_TEXT,] }] },
            { type: String, decorators: [{ type: core.Inject, args: [cdk.TUI_DATE_FILLER,] }] },
            { type: String, decorators: [{ type: core.Inject, args: [cdk.TUI_DATE_RANGE_FILLER,] }] }
        ]; };
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiInputDateRangeComponent.prototype, "disabledItemHandler", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiInputDateRangeComponent.prototype, "markerHandler", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiInputDateRangeComponent.prototype, "defaultViewedMonth", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiInputDateRangeComponent.prototype, "items", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiInputDateRangeComponent.prototype, "min", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiInputDateRangeComponent.prototype, "max", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiInputDateRangeComponent.prototype, "minLength", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiInputDateRangeComponent.prototype, "maxLength", void 0);
        __decorate([
            core.ViewChild(core$1.TuiPrimitiveTextfieldComponent)
        ], TuiInputDateRangeComponent.prototype, "textfield", void 0);
        TuiInputDateRangeComponent = TuiInputDateRangeComponent_1 = __decorate([
            core.Component({
                selector: 'tui-input-date-range',
                template: "<tui-hosted-dropdown\n    class=\"hosted\"\n    [canOpen]=\"canOpen\"\n    [content]=\"dropdown\"\n    [open]=\"open && canOpen\"\n    (openChange)=\"onOpenChange($event)\"\n    (tuiActiveZoneChange)=\"onActiveZone($event)\"\n>\n    <tui-primitive-textfield\n        automation-id=\"tui-input-date-range__textfield\"\n        class=\"textfield\"\n        [pseudoFocused]=\"innerPseudoFocused\"\n        [pseudoHovered]=\"pseudoHovered\"\n        [pseudoPressed]=\"pseudoPressed\"\n        [invalid]=\"computedInvalid\"\n        [tuiTextfieldExampleText]=\"computedExampleText\"\n        [nativeId]=\"nativeId\"\n        [filler]=\"computedFiller\"\n        [readOnly]=\"readOnly\"\n        [iconContent]=\"computedMobile ? iconContent : calendarIcon\"\n        [disabled]=\"computedDisabled\"\n        [textMask]=\"computedMask\"\n        [value]=\"computedValue\"\n        (valueChange)=\"onValueChange($event)\"\n        (hoveredChange)=\"onHovered($event)\"\n        (pressedChange)=\"onPressed($event)\"\n        (click.prevent)=\"onClick()\"\n    >\n        <ng-content></ng-content>\n    </tui-primitive-textfield>\n\n    <ng-template #iconContent>\n        <tui-svg\n            automation-id=\"tui-input-date-range__icon\"\n            class=\"icon\"\n            [src]=\"calendarIcon\"\n            (click.prevent)=\"onClick()\"\n        ></tui-svg>\n    </ng-template>\n\n    <ng-template #dropdown>\n        <tui-calendar-range\n            [defaultViewedMonth]=\"defaultViewedMonth\"\n            [disabledItemHandler]=\"disabledItemHandler\"\n            [items]=\"items\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [markerHandler]=\"markerHandler\"\n            [minLength]=\"minLength\"\n            [maxLength]=\"maxLength\"\n            (rangeChange)=\"onRangeChange($event)\"\n        ></tui-calendar-range>\n    </ng-template>\n</tui-hosted-dropdown>\n",
                providers: [
                    {
                        provide: cdk.TUI_FOCUSABLE_ITEM_ACCESSOR,
                        useExisting: core.forwardRef(function () { return TuiInputDateRangeComponent_1; }),
                    },
                    {
                        provide: tokens.TUI_CALENDAR_DATA_STREAM,
                        deps: [[new core.Optional(), new core.Self(), forms.NgControl]],
                        useFactory: ɵ0,
                    },
                    providers.LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER,
                ],
                styles: [":host{display:block;border-radius:var(--tui-radius-m)}:host._disabled{pointer-events:none}.hosted{display:block;border-radius:inherit}.textfield{border-radius:inherit}.wrapper{display:flex}.checkmark{margin-left:auto;width:16px;height:16px}.menu{width:176px;border-left:1px solid var(--tui-base-03)}.icon{position:relative;cursor:pointer}"]
            }),
            __param(0, core.Optional()),
            __param(0, core.Self()),
            __param(0, core.Inject(forms.NgControl)),
            __param(1, core.Inject(core.ChangeDetectorRef)),
            __param(2, core.Inject(core.Injector)),
            __param(3, core.Inject(cdk.TUI_IS_MOBILE)),
            __param(4, core.Inject(core$1.TuiDialogService)),
            __param(5, core.Optional()),
            __param(5, core.Inject(tokens.TUI_MOBILE_CALENDAR)),
            __param(6, core.Inject(core$1.TUI_TEXTFIELD_SIZE)),
            __param(7, core.Inject(core$1.TUI_TEXTFIELD_EXAMPLE_TEXT)),
            __param(8, core.Inject(cdk.TUI_DATE_FILLER)),
            __param(9, core.Inject(cdk.TUI_DATE_RANGE_FILLER))
        ], TuiInputDateRangeComponent);
        return TuiInputDateRangeComponent;
    }(cdk.AbstractTuiNullableControl));

    var TuiInputDateRangeModule = /** @class */ (function () {
        function TuiInputDateRangeModule() {
        }
        TuiInputDateRangeModule = __decorate([
            core.NgModule({
                imports: [
                    common.CommonModule,
                    angular2TextMask.TextMaskModule,
                    cdk.TuiActiveZoneModule,
                    cdk.TuiLetModule,
                    ngPolymorpheus.PolymorpheusModule,
                    core$1.TuiPrimitiveTextfieldModule,
                    core$1.TuiTextfieldControllerModule,
                    core$1.TuiHostedDropdownModule,
                    core$1.TuiSvgModule,
                    calendarRange.TuiCalendarRangeModule,
                ],
                declarations: [TuiInputDateRangeComponent],
                exports: [TuiInputDateRangeComponent],
            })
        ], TuiInputDateRangeModule);
        return TuiInputDateRangeModule;
    }());

    exports.TuiInputDateRangeComponent = TuiInputDateRangeComponent;
    exports.TuiInputDateRangeModule = TuiInputDateRangeModule;
    exports.ɵ0 = ɵ0;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=taiga-ui-kit-components-input-date-range.umd.js.map
