(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@angular/forms'), require('@taiga-ui/core'), require('@taiga-ui/kit/classes'), require('@taiga-ui/kit/components/input-tag'), require('@taiga-ui/kit/constants'), require('@taiga-ui/kit/providers'), require('@angular/common'), require('@taiga-ui/kit/components/multi-select-option'), require('@tinkoff/ng-polymorpheus'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/components/multi-select', ['exports', '@angular/core', '@taiga-ui/cdk', '@angular/forms', '@taiga-ui/core', '@taiga-ui/kit/classes', '@taiga-ui/kit/components/input-tag', '@taiga-ui/kit/constants', '@taiga-ui/kit/providers', '@angular/common', '@taiga-ui/kit/components/multi-select-option', '@tinkoff/ng-polymorpheus', 'rxjs', 'rxjs/operators'], factory) :
    (global = global || self, factory((global['taiga-ui'] = global['taiga-ui'] || {}, global['taiga-ui'].kit = global['taiga-ui'].kit || {}, global['taiga-ui'].kit.components = global['taiga-ui'].kit.components || {}, global['taiga-ui'].kit.components['multi-select'] = {}), global.ng.core, global.cdk, global.ng.forms, global.core$1, global['taiga-ui'].kit.classes, global['taiga-ui'].kit.components['input-tag'], global['taiga-ui'].kit.constants, global['taiga-ui'].kit.providers, global.ng.common, global['taiga-ui'].kit.components['multi-select-option'], global.ngPolymorpheus, global.rxjs, global.rxjs.operators));
}(this, (function (exports, core, cdk, forms, core$1, classes, inputTag, constants, providers, common, multiSelectOption, ngPolymorpheus, rxjs, operators) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __createBinding(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    }

    function __exportStar(m, exports) {
        for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }

    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var TuiMultiSelectComponent = /** @class */ (function (_super) {
        __extends(TuiMultiSelectComponent, _super);
        function TuiMultiSelectComponent(control, changeDetectorRef, svgService, textfieldLabelOutside) {
            var _this = _super.call(this, control, changeDetectorRef) || this;
            _this.textfieldLabelOutside = textfieldLabelOutside;
            _this.stringify = cdk.TUI_DEFAULT_STRINGIFY;
            _this.identityMatcher = cdk.TUI_DEFAULT_IDENTITY_MATCHER;
            _this.expandable = true;
            _this.search = '';
            _this.editable = true;
            _this.disabledItemHandler = cdk.ALWAYS_FALSE_HANDLER;
            _this.valueContent = '';
            _this.searchChange = new core.EventEmitter();
            _this.open = false;
            _this.valueMapper = function (value, stringify, group) {
                return group
                    ? cdk.EMPTY_ARRAY
                    : value.map(function (item) { return new classes.TuiStringifiableItem(item, stringify); });
            };
            _this.disabledItemHandlerWrapper = function (handler) { return function (stringifiable) {
                return typeof stringifiable === 'string' || handler(stringifiable.item);
            }; };
            _this.datalist = '';
            svgService.define({ iconBlank: constants.iconBlank });
            return _this;
        }
        TuiMultiSelectComponent_1 = TuiMultiSelectComponent;
        Object.defineProperty(TuiMultiSelectComponent.prototype, "nativeFocusableElement", {
            get: function () {
                return this.input ? this.input.nativeFocusableElement : null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "focused", {
            get: function () {
                return ((!!this.input && this.input.focused) ||
                    (!!this.hostedDropdown && this.hostedDropdown.focused));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "computedValue", {
            get: function () {
                return this.computedGroup ? cdk.EMPTY_ARRAY : this.value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "searchOrSpace", {
            // @bad TODO: think of a better way
            get: function () {
                return this.computedGroup ? ' ' : this.searchString;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "searchString", {
            get: function () {
                return this.search === null ? '' : this.search;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "tagIcon", {
            get: function () {
                return this.interactive ? 'iconBlank' : 'tuiIconChevronDownLarge';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "interactive", {
            get: function () {
                return !this.disabled && !this.readOnly;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "inputHidden", {
            get: function () {
                return !this.editable && !this.computedGroup;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "computedGroup", {
            get: function () {
                return (!!this.valueContent &&
                    this.value.length > 0 &&
                    (!this.focused || !this.editable));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectComponent.prototype, "context", {
            get: function () {
                return this.getContext(this.value);
            },
            enumerable: true,
            configurable: true
        });
        TuiMultiSelectComponent.prototype.getStringifier = function (stringify) {
            return function (_a) {
                var $implicit = _a.$implicit;
                return stringify($implicit);
            };
        };
        TuiMultiSelectComponent.prototype.onHoveredChange = function (hovered) {
            this.updateHovered(hovered);
        };
        TuiMultiSelectComponent.prototype.onSpace = function (event) {
            if (!this.editable) {
                event.preventDefault();
            }
            if (!this.readOnly) {
                this.open = true;
            }
        };
        TuiMultiSelectComponent.prototype.handleOption = function (option) {
            var _a = this, value = _a.value, identityMatcher = _a.identityMatcher;
            var index = value.findIndex(function (item) { return identityMatcher(item, option); });
            this.updateValue(index === -1
                ? __spread(value, [option]) : __spread(value.slice(0, index), value.slice(index + 1)));
            this.updateSearch(null);
        };
        TuiMultiSelectComponent.prototype.onEnter = function (event) {
            var value = this.value;
            var options = this.accessor ? this.accessor.getOptions() : [];
            if (options.length !== 1) {
                return;
            }
            var index = value.indexOf(options[0]);
            event.preventDefault();
            this.updateValue(index === -1
                ? __spread(value, [options[0]]) : __spread(value.slice(0, index), value.slice(index + 1)));
            this.updateSearch(null);
        };
        TuiMultiSelectComponent.prototype.onClick = function (_a) {
            var nativeFocusableElement = _a.nativeFocusableElement;
            if (this.interactive &&
                nativeFocusableElement &&
                cdk.isNativeFocused(nativeFocusableElement)) {
                this.open = !this.open;
            }
        };
        TuiMultiSelectComponent.prototype.onArrowClick = function () {
            this.open = !this.open;
            this.focusInput();
        };
        TuiMultiSelectComponent.prototype.onInput = function (value) {
            this.updateValue(value.map(function (_a) {
                var item = _a.item;
                return item;
            }));
        };
        TuiMultiSelectComponent.prototype.onSearch = function (search) {
            this.open = true;
            this.updateSearch(search);
        };
        TuiMultiSelectComponent.prototype.onActiveZone = function (active) {
            this.updateFocused(active);
        };
        TuiMultiSelectComponent.prototype.setDisabledState = function () {
            _super.prototype.setDisabledState.call(this);
            this.open = false;
        };
        TuiMultiSelectComponent.prototype.updateSearch = function (search) {
            if (this.search === search) {
                return;
            }
            this.search = search;
            this.searchChange.emit(search);
        };
        TuiMultiSelectComponent.prototype.focusInput = function (preventScroll) {
            if (preventScroll === void 0) { preventScroll = false; }
            if (this.nativeFocusableElement) {
                cdk.setNativeFocused(this.nativeFocusableElement, true, preventScroll);
            }
        };
        TuiMultiSelectComponent.prototype.getContext = function ($implicit) {
            return { $implicit: $implicit };
        };
        var TuiMultiSelectComponent_1;
        TuiMultiSelectComponent.ctorParameters = function () { return [
            { type: forms.NgControl, decorators: [{ type: core.Optional }, { type: core.Self }, { type: core.Inject, args: [forms.NgControl,] }] },
            { type: core.ChangeDetectorRef, decorators: [{ type: core.Inject, args: [core.ChangeDetectorRef,] }] },
            { type: core$1.TuiSvgService, decorators: [{ type: core.Inject, args: [core$1.TuiSvgService,] }] },
            { type: core$1.TuiTextfieldLabelOutsideDirective, decorators: [{ type: core.Inject, args: [core$1.TUI_TEXTFIELD_LABEL_OUTSIDE,] }] }
        ]; };
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiMultiSelectComponent.prototype, "stringify", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiMultiSelectComponent.prototype, "identityMatcher", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiMultiSelectComponent.prototype, "expandable", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiMultiSelectComponent.prototype, "search", void 0);
        __decorate([
            core.Input(),
            core.HostBinding('class._editable'),
            cdk.tuiDefaultProp()
        ], TuiMultiSelectComponent.prototype, "editable", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiMultiSelectComponent.prototype, "disabledItemHandler", void 0);
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiMultiSelectComponent.prototype, "valueContent", void 0);
        __decorate([
            core.Output()
        ], TuiMultiSelectComponent.prototype, "searchChange", void 0);
        __decorate([
            core.ContentChild(core$1.TuiDataListDirective, { read: core.TemplateRef })
        ], TuiMultiSelectComponent.prototype, "datalist", void 0);
        __decorate([
            core.ContentChild(core$1.TUI_DATA_LIST_ACCESSOR)
        ], TuiMultiSelectComponent.prototype, "accessor", void 0);
        __decorate([
            core.ViewChild(core$1.TuiHostedDropdownComponent)
        ], TuiMultiSelectComponent.prototype, "hostedDropdown", void 0);
        __decorate([
            core.ViewChild(inputTag.TuiInputTagComponent)
        ], TuiMultiSelectComponent.prototype, "input", void 0);
        __decorate([
            cdk.tuiPure
        ], TuiMultiSelectComponent.prototype, "getStringifier", null);
        __decorate([
            cdk.tuiPure
        ], TuiMultiSelectComponent.prototype, "getContext", null);
        TuiMultiSelectComponent = TuiMultiSelectComponent_1 = __decorate([
            core.Component({
                selector: 'tui-multi-select',
                template: "<tui-hosted-dropdown\n    class=\"wrapper\"\n    [canOpen]=\"interactive\"\n    [content]=\"datalist || ''\"\n    [(open)]=\"open\"\n    (tuiHoveredChange)=\"onHoveredChange($event)\"\n    (tuiActiveZoneChange)=\"onActiveZone($event)\"\n>\n    <tui-input-tag\n        tuiHostedDropdownHost\n        #inputTag\n        automation-id=\"tui-multi-select__input\"\n        class=\"input\"\n        [nativeId]=\"nativeId\"\n        [icon]=\"tagIcon\"\n        [disabled]=\"disabled\"\n        [disabledItemHandler]=\"disabledItemHandler | tuiMapper : disabledItemHandlerWrapper\"\n        [readOnly]=\"readOnly\"\n        [inputHidden]=\"!editable\"\n        [pseudoHovered]=\"hovered\"\n        [pseudoFocused]=\"focused\"\n        [pseudoInvalid]=\"computedInvalid\"\n        [editable]=\"false\"\n        [expandable]=\"expandable\"\n        [search]=\"searchOrSpace\"\n        [ngModel]=\"computedValue | tuiMapper: valueMapper: stringify\"\n        (ngModelChange)=\"onInput($event)\"\n        (searchChange)=\"onSearch($event)\"\n        (keydown.space)=\"onSpace($event)\"\n        (keydown.enter)=\"onEnter($event)\"\n        (click.stop)=\"onClick(inputTag)\"\n    >\n        <ng-content></ng-content>\n    </tui-input-tag>\n    <div\n        *ngIf=\"computedGroup\"\n        polymorpheus-outlet\n        class=\"group\"\n        [class.group_fullsize]=\"textfieldLabelOutside.labelOutside\"\n        [context]=\"context\"\n        [content]=\"valueContent\"\n    ></div>\n    <tui-svg\n        *ngIf=\"interactive\"\n        automation-id=\"tui-multi-select__arrow\"\n        class=\"arrow\"\n        src=\"tuiIconChevronDownLarge\"\n        tuiPreventDefault=\"mousedown\"\n        [class.arrow_open]=\"open\"\n        (click.prevent)=\"onArrowClick()\"\n    ></tui-svg>\n</tui-hosted-dropdown>\n",
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                providers: [
                    {
                        provide: cdk.TUI_FOCUSABLE_ITEM_ACCESSOR,
                        useExisting: core.forwardRef(function () { return TuiMultiSelectComponent_1; }),
                    },
                    {
                        provide: core$1.TUI_DATA_LIST_HOST,
                        useExisting: core.forwardRef(function () { return TuiMultiSelectComponent_1; }),
                    },
                    providers.FIXED_DROPDOWN_CONTROLLER_PROVIDER,
                ],
                styles: [":host{position:relative;display:block}:host._disabled{pointer-events:none}.wrapper{display:block}:host:not(._editable):not(._readonly) .input{cursor:pointer}.arrow{transition-duration:.3s;transition-timing-function:ease-in-out;display:flex;width:24px;align-items:center;justify-content:center;color:var(--tui-text-03);box-sizing:border-box;transition-property:color,transform;position:absolute;top:50%;transform:translate(0,-50%);right:12px;height:24px;box-sizing:content-box;cursor:pointer}.arrow:hover{color:var(--tui-text-02)}:host._disabled .arrow,:host._readonly .arrow{pointer-events:none}:host[data-mode=onDark] .arrow{color:var(--tui-text-03-night)}:host[data-mode=onDark] .arrow:hover{color:var(--tui-text-01-night)}.arrow_open{transform:rotate(180deg) translate(0,50%)}.group{position:absolute;top:0;left:0;bottom:0;display:flex;align-items:center;padding:27px 16px 9px;pointer-events:none}.group_fullsize{padding-top:1px;padding-bottom:0}:host[data-tui-host-size='m'] .group_fullsize.group_fullsize{padding-top:0}:host[data-tui-host-size='m'] .group{padding:19px 12px 0;font-size:13px}"]
            }),
            __param(0, core.Optional()),
            __param(0, core.Self()),
            __param(0, core.Inject(forms.NgControl)),
            __param(1, core.Inject(core.ChangeDetectorRef)),
            __param(2, core.Inject(core$1.TuiSvgService)),
            __param(3, core.Inject(core$1.TUI_TEXTFIELD_LABEL_OUTSIDE))
        ], TuiMultiSelectComponent);
        return TuiMultiSelectComponent;
    }(cdk.AbstractTuiMultipleControl));

    // TODO: Remove Optional and second argument when Angular is upgraded to 9+
    var TuiHideSelectedPipe = /** @class */ (function () {
        function TuiHideSelectedPipe(component) {
            this.component = component;
        }
        TuiHideSelectedPipe.prototype.transform = function (items, _a) {
            var _b = _a === void 0 ? this.component : _a, value = _b.value, identityMatcher = _b.identityMatcher;
            return items && this.filter(items, value, identityMatcher);
        };
        TuiHideSelectedPipe.prototype.filter = function (items, value, matcher) {
            return items.filter(function (item) { return value.every(function (selected) { return !matcher(selected, item); }); });
        };
        TuiHideSelectedPipe.ctorParameters = function () { return [
            { type: TuiMultiSelectComponent, decorators: [{ type: core.Optional }, { type: core.Inject, args: [TuiMultiSelectComponent,] }] }
        ]; };
        __decorate([
            cdk.tuiPure
        ], TuiHideSelectedPipe.prototype, "filter", null);
        TuiHideSelectedPipe = __decorate([
            core.Pipe({
                name: 'tuiHideSelected',
                pure: false,
            }),
            __param(0, core.Optional()),
            __param(0, core.Inject(TuiMultiSelectComponent))
        ], TuiHideSelectedPipe);
        return TuiHideSelectedPipe;
    }());

    // TODO: Remove and switch to viewProviders when Angular is updated to Ivy
    /** @deprecated */
    var TuiMultiSelectGroupResetDirective = /** @class */ (function () {
        function TuiMultiSelectGroupResetDirective() {
        }
        TuiMultiSelectGroupResetDirective = __decorate([
            core.Directive({
                selector: '[tuiMultiSelectGroupReset]',
                providers: [
                    {
                        provide: core$1.TUI_OPTION_CONTENT,
                        useValue: null,
                    },
                ],
            })
        ], TuiMultiSelectGroupResetDirective);
        return TuiMultiSelectGroupResetDirective;
    }());

    var TuiMultiSelectGroupComponent = /** @class */ (function () {
        function TuiMultiSelectGroupComponent(host, control) {
            this.host = host;
            this.control = control;
            this.label = '';
            this.options = cdk.EMPTY_QUERY;
        }
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "size", {
            get: function () {
                return (this.options.first && this.options.first.size) || 'm';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "checkboxSize", {
            get: function () {
                return this.options.first && core$1.sizeBigger(this.options.first.size) ? 'l' : 'm';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "empty$", {
            get: function () {
                return cdk.itemsQueryListObservable(this.options).pipe(operators.map(function (_a) {
                    var length = _a.length;
                    return !length;
                }));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "disabled$", {
            get: function () {
                return cdk.itemsQueryListObservable(this.options).pipe(operators.map(function (items) { return items.every(function (_a) {
                    var disabled = _a.disabled;
                    return disabled;
                }); }));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "value$", {
            get: function () {
                var _this = this;
                return rxjs.combineLatest(this.items$, this.valueChanges$).pipe(operators.map(function (_a) {
                    var _b = __read(_a, 2), items = _b[0], current = _b[1];
                    var result = false;
                    var _loop_1 = function (i) {
                        var selected = current.some(function (selected) {
                            return _this.matcher(selected, items[i]);
                        });
                        if ((!selected && result) || (selected && !result && i)) {
                            return { value: null };
                        }
                        result = selected;
                    };
                    for (var i = 0; i < items.length; i++) {
                        var state_1 = _loop_1(i);
                        if (typeof state_1 === "object")
                            return state_1.value;
                    }
                    return result;
                }));
            },
            enumerable: true,
            configurable: true
        });
        TuiMultiSelectGroupComponent.prototype.onClick = function (checked) {
            var _this = this;
            if (!this.control.control) {
                return;
            }
            var controlValue = this.control.value || [];
            var values = this.values;
            var filtered = controlValue.filter(function (current) {
                return values.every(function (item) { return !_this.matcher(current, item); });
            });
            this.control.control.setValue(checked ? filtered : __spread(filtered, values));
        };
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "values", {
            get: function () {
                return this.filter(cdk.getOriginalArrayFromQueryList(this.options));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "matcher", {
            get: function () {
                return this.host.identityMatcher || cdk.TUI_DEFAULT_IDENTITY_MATCHER;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "items$", {
            get: function () {
                return cdk.itemsQueryListObservable(this.options).pipe(operators.map(function (options) { return options.map(function (_a) {
                    var value = _a.value;
                    return value;
                }).filter(cdk.isPresent); }));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TuiMultiSelectGroupComponent.prototype, "valueChanges$", {
            get: function () {
                return cdk.tuiReplayedValueChangesFrom(this.control).pipe(operators.map(function (value) { return value || []; }));
            },
            enumerable: true,
            configurable: true
        });
        TuiMultiSelectGroupComponent.prototype.filter = function (items) {
            return items.map(function (_a) {
                var value = _a.value;
                return value;
            }).filter(cdk.isPresent);
        };
        TuiMultiSelectGroupComponent.ctorParameters = function () { return [
            { type: undefined, decorators: [{ type: core.Inject, args: [core$1.TUI_DATA_LIST_HOST,] }] },
            { type: forms.NgControl, decorators: [{ type: core.Inject, args: [forms.NgControl,] }] }
        ]; };
        __decorate([
            core.Input(),
            cdk.tuiDefaultProp()
        ], TuiMultiSelectGroupComponent.prototype, "label", void 0);
        __decorate([
            core.ContentChildren(core$1.TuiOptionComponent)
        ], TuiMultiSelectGroupComponent.prototype, "options", void 0);
        __decorate([
            cdk.tuiPure
        ], TuiMultiSelectGroupComponent.prototype, "empty$", null);
        __decorate([
            cdk.tuiPure
        ], TuiMultiSelectGroupComponent.prototype, "disabled$", null);
        __decorate([
            cdk.tuiPure
        ], TuiMultiSelectGroupComponent.prototype, "value$", null);
        __decorate([
            cdk.tuiPure
        ], TuiMultiSelectGroupComponent.prototype, "items$", null);
        __decorate([
            cdk.tuiPure
        ], TuiMultiSelectGroupComponent.prototype, "valueChanges$", null);
        __decorate([
            cdk.tuiPure
        ], TuiMultiSelectGroupComponent.prototype, "filter", null);
        TuiMultiSelectGroupComponent = __decorate([
            core.Component({
                selector: 'tui-opt-group[tuiMultiSelectGroup]',
                template: "<ng-container *tuiLet=\"value$ | async as value\">\n    <button\n        *ngIf=\"label && !(empty$ | async)\"\n        tuiMultiSelectGroupReset\n        tuiOption\n        [size]=\"size\"\n        [disabled]=\"disabled$ | async\"\n        (click)=\"onClick(value)\"\n    >\n        <tui-primitive-checkbox\n            class=\"tui-space_right-3\"\n            [size]=\"checkboxSize\"\n            [value]=\"value\"\n        ></tui-primitive-checkbox>\n        <span class=\"label\">{{label}}</span>\n    </button>\n</ng-container>\n<ng-content></ng-content>\n",
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                styles: [":host{display:flex;flex-direction:column}:host:before{content:''}.label{font:var(--tui-font-text-xs);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;flex:1;color:var(--tui-text-02)}"]
            }),
            __param(0, core.Inject(core$1.TUI_DATA_LIST_HOST)),
            __param(1, core.Inject(forms.NgControl))
        ], TuiMultiSelectGroupComponent);
        return TuiMultiSelectGroupComponent;
    }());

    function hostFallbackFactory(control, host) {
        return (host || {
            handleOption: function (option) {
                if (!control.control) {
                    return;
                }
                var value = control.value || [];
                var index = value.indexOf(option);
                control.control.setValue(index === -1
                    ? __spread(value, [option]) : __spread(value.slice(0, index), value.slice(index + 1)));
            },
        });
    }
    var ɵ0 = multiSelectOption.TUI_MULTI_SELECT_OPTION, ɵ1 = {
        writeValue: cdk.EMPTY_FUNCTION,
        registerOnChange: cdk.EMPTY_FUNCTION,
        registerOnTouched: cdk.EMPTY_FUNCTION,
    };
    var TuiMultiSelectGroupDirective = /** @class */ (function () {
        function TuiMultiSelectGroupDirective() {
        }
        TuiMultiSelectGroupDirective = __decorate([
            core.Directive({
                selector: '[tuiMultiSelectGroup]',
                providers: [
                    {
                        provide: core$1.TUI_OPTION_CONTENT,
                        useValue: ɵ0,
                    },
                    {
                        provide: core$1.TUI_DATA_LIST_HOST,
                        deps: [
                            forms.NgControl,
                            [new core.Optional(), core.forwardRef(function () { return TuiMultiSelectComponent; })],
                        ],
                        useFactory: hostFallbackFactory,
                    },
                    {
                        provide: forms.NG_VALUE_ACCESSOR,
                        multi: true,
                        useValue: ɵ1,
                    },
                ],
            })
        ], TuiMultiSelectGroupDirective);
        return TuiMultiSelectGroupDirective;
    }());

    var TuiMultiSelectModule = /** @class */ (function () {
        function TuiMultiSelectModule() {
        }
        TuiMultiSelectModule = __decorate([
            core.NgModule({
                imports: [
                    common.CommonModule,
                    forms.FormsModule,
                    ngPolymorpheus.PolymorpheusModule,
                    cdk.TuiPreventDefaultModule,
                    cdk.TuiActiveZoneModule,
                    cdk.TuiLetModule,
                    cdk.TuiMapperPipeModule,
                    cdk.TuiHoveredModule,
                    core$1.TuiSvgModule,
                    core$1.TuiHostedDropdownModule,
                    inputTag.TuiInputTagModule,
                    multiSelectOption.TuiMultiSelectOptionModule,
                    core$1.TuiPrimitiveCheckboxModule,
                    core$1.TuiDataListModule,
                ],
                declarations: [
                    TuiMultiSelectComponent,
                    TuiMultiSelectGroupComponent,
                    TuiMultiSelectGroupDirective,
                    TuiMultiSelectGroupResetDirective,
                    TuiHideSelectedPipe,
                ],
                exports: [
                    TuiMultiSelectComponent,
                    TuiMultiSelectGroupComponent,
                    TuiMultiSelectGroupDirective,
                    TuiHideSelectedPipe,
                ],
            })
        ], TuiMultiSelectModule);
        return TuiMultiSelectModule;
    }());

    exports.TuiHideSelectedPipe = TuiHideSelectedPipe;
    exports.TuiMultiSelectComponent = TuiMultiSelectComponent;
    exports.TuiMultiSelectGroupComponent = TuiMultiSelectGroupComponent;
    exports.TuiMultiSelectGroupDirective = TuiMultiSelectGroupDirective;
    exports.TuiMultiSelectGroupResetDirective = TuiMultiSelectGroupResetDirective;
    exports.TuiMultiSelectModule = TuiMultiSelectModule;
    exports.hostFallbackFactory = hostFallbackFactory;
    exports.ɵ0 = ɵ0;
    exports.ɵ1 = ɵ1;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=taiga-ui-kit-components-multi-select.umd.js.map
