(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/i18n')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/tokens', ['exports', '@angular/core', '@taiga-ui/i18n'], factory) :
    (global = global || self, factory((global['taiga-ui'] = global['taiga-ui'] || {}, global['taiga-ui'].kit = global['taiga-ui'].kit || {}, global['taiga-ui'].kit.tokens = {}), global.ng.core, global.i18n));
}(this, (function (exports, core, i18n) { 'use strict';

    var TUI_CALENDAR_DATA_STREAM = new core.InjectionToken('Stream that emits calendar data change');

    var TUI_MOBILE_AWARE = new core.InjectionToken('A flag enabling mobile-specific behavior for supporting components', {
        factory: function () { return false; },
    });

    var TUI_MOBILE_CALENDAR = new core.InjectionToken('A component for mobile data picker');

    var TUI_TAG_STATUS = new core.InjectionToken('Status for tags inside InputTag component', {
        factory: function () { return "primary" /* Primary */; },
    });

    var TUI_VALIDATION_ERRORS = new core.InjectionToken('Validation errors', {
        factory: function () { return ({}); },
    });

    var TUI_CANCEL_WORD = new core.InjectionToken("i18n 'cancel' word", {
        factory: i18n.extractI18n('cancel'),
    });
    var TUI_DONE_WORD = new core.InjectionToken("i18n 'done' word", {
        factory: i18n.extractI18n('done'),
    });
    var TUI_MORE_WORD = new core.InjectionToken("i18n 'more' word", {
        factory: i18n.extractI18n('more'),
    });
    var TUI_OTHER_DATE_TEXT = new core.InjectionToken("i18n 'Other date' text", {
        factory: i18n.extractI18n('otherDate'),
    });
    var TUI_CHOOSE_DAY_OR_RANGE_TEXTS = new core.InjectionToken("choose day or range i18n texts", {
        factory: i18n.extractI18n('mobileCalendarTexts'),
    });
    var TUI_FROM_TO_TEXTS = new core.InjectionToken("from and to i18n texts", {
        factory: i18n.extractI18n('range'),
    });
    var TUI_PLUS_MINUS_TEXTS = new core.InjectionToken("plus and minus i18n texts", {
        factory: i18n.extractI18n('countTexts'),
    });
    var TUI_TIME_TEXTS = new core.InjectionToken("time i18n texts", {
        factory: i18n.extractI18n('time'),
    });
    var TUI_DIGITAL_INFORMATION_UNITS = new core.InjectionToken("short bytes, kilobytes and megabytes i18n texts", {
        factory: i18n.extractI18n('digitalInformationUnits'),
    });
    var TUI_COPY_TEXTS = new core.InjectionToken('copy i18n texts', {
        factory: i18n.extractI18n('copyTexts'),
    });
    var TUI_PASSWORD_TEXTS = new core.InjectionToken('password i18n texts', {
        factory: i18n.extractI18n('passwordTexts'),
    });
    var TUI_CALENDAR_MONTHS = new core.InjectionToken('short calendar months i18n', {
        factory: i18n.extractI18n('shortCalendarMonths'),
    });
    var TUI_FILE_TEXTS = new core.InjectionToken('file i18n texts', {
        factory: i18n.extractI18n('fileTexts'),
    });
    var TUI_PAGINATION_TEXTS = new core.InjectionToken('pagination i18n texts', {
        factory: i18n.extractI18n('paginationTexts'),
    });
    var TUI_INPUT_FILE_TEXTS = new core.InjectionToken('tui-input-file i18n texts', {
        factory: i18n.extractI18n('inputFileTexts'),
    });

    exports.TUI_CALENDAR_DATA_STREAM = TUI_CALENDAR_DATA_STREAM;
    exports.TUI_CALENDAR_MONTHS = TUI_CALENDAR_MONTHS;
    exports.TUI_CANCEL_WORD = TUI_CANCEL_WORD;
    exports.TUI_CHOOSE_DAY_OR_RANGE_TEXTS = TUI_CHOOSE_DAY_OR_RANGE_TEXTS;
    exports.TUI_COPY_TEXTS = TUI_COPY_TEXTS;
    exports.TUI_DIGITAL_INFORMATION_UNITS = TUI_DIGITAL_INFORMATION_UNITS;
    exports.TUI_DONE_WORD = TUI_DONE_WORD;
    exports.TUI_FILE_TEXTS = TUI_FILE_TEXTS;
    exports.TUI_FROM_TO_TEXTS = TUI_FROM_TO_TEXTS;
    exports.TUI_INPUT_FILE_TEXTS = TUI_INPUT_FILE_TEXTS;
    exports.TUI_MOBILE_AWARE = TUI_MOBILE_AWARE;
    exports.TUI_MOBILE_CALENDAR = TUI_MOBILE_CALENDAR;
    exports.TUI_MORE_WORD = TUI_MORE_WORD;
    exports.TUI_OTHER_DATE_TEXT = TUI_OTHER_DATE_TEXT;
    exports.TUI_PAGINATION_TEXTS = TUI_PAGINATION_TEXTS;
    exports.TUI_PASSWORD_TEXTS = TUI_PASSWORD_TEXTS;
    exports.TUI_PLUS_MINUS_TEXTS = TUI_PLUS_MINUS_TEXTS;
    exports.TUI_TAG_STATUS = TUI_TAG_STATUS;
    exports.TUI_TIME_TEXTS = TUI_TIME_TEXTS;
    exports.TUI_VALIDATION_ERRORS = TUI_VALIDATION_ERRORS;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=taiga-ui-kit-tokens.umd.js.map
