import { ElementRef } from '@angular/core';
import { TuiBooleanHandler } from '@taiga-ui/cdk';
import { TuiDataListAccessor, TuiSizeL, TuiSizeXS, TuiValueContentContext } from '@taiga-ui/core';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
export declare class TuiDataListWrapperComponent<T> implements TuiDataListAccessor<T> {
    items: ReadonlyArray<ReadonlyArray<T>> | ReadonlyArray<T> | null;
    disabledItemHandler: TuiBooleanHandler<T>;
    emptyContent: PolymorpheusContent;
    itemContent: PolymorpheusContent<TuiValueContentContext<T>>;
    size: TuiSizeXS | TuiSizeL;
    private readonly options;
    getContext($implicit: T, { nativeElement }: ElementRef<HTMLElement>): TuiValueContentContext<T>;
    getOptions(includeDisabled?: boolean): ReadonlyArray<T>;
}
