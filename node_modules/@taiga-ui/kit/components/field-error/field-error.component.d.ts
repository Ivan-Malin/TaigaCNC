import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';
import { AbstractControl, FormArrayName, FormGroupDirective, FormGroupName, NgControl } from '@angular/forms';
import { TuiValidationError } from '@taiga-ui/cdk';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
export declare class TuiFieldErrorComponent implements OnInit, OnDestroy {
    private ngControl;
    private formArrayName;
    private formGroupName;
    private formGroup;
    private changeDetectorRef;
    private readonly validationErrors;
    set order(value: readonly string[]);
    private firstError;
    private errorsOrder;
    private destroy$;
    constructor(ngControl: NgControl | null, formArrayName: FormArrayName | null, formGroupName: FormGroupName | null, formGroup: FormGroupDirective | null, changeDetectorRef: ChangeDetectorRef, validationErrors: Record<string, PolymorpheusContent>);
    ngOnInit(): void;
    ngOnDestroy(): void;
    get computedError(): TuiValidationError | null;
    get invalid(): boolean;
    get touched(): boolean;
    get control(): AbstractControl | null;
    registerOnChange(): void;
    registerOnTouched(): void;
    setDisabledState(): void;
    writeValue(): void;
    private get firstErrorIdByOrder();
    private get firstErrorId();
    private get controlErrors();
    private updateErrorText;
    private getErrorText;
    private markForCheck;
}
