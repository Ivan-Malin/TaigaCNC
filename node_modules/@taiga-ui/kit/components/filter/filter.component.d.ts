import { ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiMultipleControl, TuiBooleanHandler, TuiContextWithImplicit, TuiHandler, TuiIdentityMatcher } from '@taiga-ui/cdk';
import { TuiSizeL, TuiSizeS } from '@taiga-ui/core';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
export declare class TuiFilterComponent<T> extends AbstractTuiMultipleControl<T> {
    private readonly elementRef;
    identityMatcher: TuiIdentityMatcher<T>;
    items: ReadonlyArray<T>;
    size: TuiSizeS | TuiSizeL;
    content: PolymorpheusContent<any>;
    badgeHandler: TuiHandler<T, number>;
    disabledItemHandler: TuiBooleanHandler<T>;
    readonly toggledItem: EventEmitter<T>;
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef<HTMLElement>);
    get focused(): boolean;
    getItemContentContext($implicit: T): TuiContextWithImplicit<T>;
    onCheckbox(value: boolean, item: T): void;
    isCheckboxEnabled(item: T): boolean;
}
