import { ChangeDetectorRef, Injector, Type } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, TuiBooleanHandler, TuiDay, TuiDayLike, TuiDayRange, TuiFocusableElementAccessor, TuiMapper, TuiMonth } from '@taiga-ui/cdk';
import { TuiDialogService, TuiMarkerHandler, TuiTextfieldExampleTextDirective, TuiTextfieldSizeDirective, TuiTextMaskOptions, TuiWithOptionalMinMax } from '@taiga-ui/core';
import { TuiDayRangePeriod } from '@taiga-ui/kit/classes';
export declare class TuiInputDateRangeComponent extends AbstractTuiNullableControl<TuiDayRange> implements TuiWithOptionalMinMax<TuiDay>, TuiFocusableElementAccessor {
    private readonly injector;
    private readonly isMobile;
    private readonly dialogService;
    private readonly mobileCalendar;
    private readonly textfieldSize;
    private readonly textfieldExampleText;
    readonly filler: string;
    readonly rangeFiller: string;
    disabledItemHandler: TuiBooleanHandler<TuiDay>;
    markerHandler: TuiMarkerHandler;
    defaultViewedMonth: TuiMonth;
    items: ReadonlyArray<TuiDayRangePeriod>;
    min: TuiDay;
    max: TuiDay;
    minLength: TuiDayLike | null;
    maxLength: TuiDayLike | null;
    open: boolean;
    readonly maxLengthMapper: TuiMapper<TuiDay, TuiDay>;
    private readonly textfield?;
    private readonly textMaskOptions;
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef, injector: Injector, isMobile: boolean, dialogService: TuiDialogService, mobileCalendar: Type<any> | null, textfieldSize: TuiTextfieldSizeDirective, textfieldExampleText: TuiTextfieldExampleTextDirective, filler: string, rangeFiller: string);
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    get computedMobile(): boolean;
    get calendarIcon(): string;
    get canOpen(): boolean;
    get computedExampleText(): string;
    get computedFiller(): string;
    get computedMask(): TuiTextMaskOptions;
    get activePeriod(): TuiDayRangePeriod | null;
    get computedValue(): string;
    get innerPseudoFocused(): boolean | null;
    get nativeValue(): string;
    set nativeValue(value: string);
    onClick(): void;
    onOpenChange(open: boolean): void;
    onValueChange(value: string): void;
    onRangeChange(range: TuiDayRange): void;
    onItemSelect(item: string | TuiDayRangePeriod): void;
    onHovered(hovered: boolean): void;
    onPressed(pressed: boolean): void;
    onActiveZone(focused: boolean): void;
    writeValue(value: TuiDayRange | null): void;
    private get itemSelected();
    private toggle;
    private focusInput;
    private clampValue;
}
