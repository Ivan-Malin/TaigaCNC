import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiControl, TuiBooleanHandler, TuiDay, TuiFocusableElementAccessor, TuiMonth, TuiTime, TuiTimeMode } from '@taiga-ui/cdk';
import { TuiTextfieldSizeDirective, TuiTextMaskOptions, TuiWithOptionalMinMax } from '@taiga-ui/core';
import { Observable } from 'rxjs';
export declare class TuiInputDateTimeComponent extends AbstractTuiControl<[TuiDay | null, TuiTime | null]> implements TuiWithOptionalMinMax<TuiDay>, TuiFocusableElementAccessor {
    private readonly textfieldSize;
    readonly dateFiller: string;
    readonly timeTexts$: Observable<Record<TuiTimeMode, string>>;
    min: TuiDay;
    max: TuiDay;
    disabledItemHandler: TuiBooleanHandler<TuiDay>;
    defaultActiveYearMonth: TuiMonth;
    timeMode: TuiTimeMode;
    open: boolean;
    private month;
    private readonly textfield?;
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef, textfieldSize: TuiTextfieldSizeDirective, dateFiller: string, timeTexts$: Observable<Record<TuiTimeMode, string>>);
    get fillerLength(): number;
    get textMaskOptions(): TuiTextMaskOptions;
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    get calendarIcon(): string;
    get computedValue(): string;
    get calendarValue(): TuiDay | null;
    get computedActiveYearMonth(): TuiMonth;
    get nativeValue(): string;
    set nativeValue(value: string);
    get canOpen(): boolean;
    getFiller$(dateFiller: string, timeMode: TuiTimeMode): Observable<string>;
    onClick(): void;
    onValueChange(value: string): void;
    onDayClick(day: TuiDay): void;
    onHovered(hovered: boolean): void;
    onMonthChange(month: TuiMonth): void;
    onOpenChange(open: boolean): void;
    onFocused(focused: boolean): void;
    setDisabledState(): void;
    writeValue(value: [TuiDay | null, TuiTime | null] | null): void;
    protected getFallbackValue(): [TuiDay | null, TuiTime | null];
    protected valueIdenticalComparator(oldValue: [TuiDay | null, TuiTime | null], newValue: [TuiDay | null, TuiTime | null]): boolean;
    private calculateMask;
}
