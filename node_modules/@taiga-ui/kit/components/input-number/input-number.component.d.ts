import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, TuiFocusableElementAccessor, TuiInputMode, TuiMapper } from '@taiga-ui/cdk';
import { TuiDecimal, TuiTextMaskOptions } from '@taiga-ui/core';
export declare class TuiInputNumberComponent extends AbstractTuiNullableControl<number> implements TuiFocusableElementAccessor {
    min: number;
    max: number;
    decimal: TuiDecimal;
    precision: number;
    postfix: string;
    mask: TuiMapper<boolean, TuiTextMaskOptions>;
    private readonly primitiveTextfield?;
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef);
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    get isNegativeAllowed(): boolean;
    get inputMode(): TuiInputMode;
    get calculatedMaxLength(): number;
    get formattedValue(): string;
    get computedValue(): string;
    onValue(value: string): void;
    onKeyDown(event: KeyboardEvent): void;
    onFocused(focused: boolean): void;
    onHovered(hovered: boolean): void;
    onPressed(pressed: boolean): void;
    private get isNativeValueInLimit();
    private get isNativeValueNotFinished();
    private get nativeValue();
    private set nativeValue(value);
    private clear;
    private absoluteCapInputValue;
    private setCaretAfterComma;
}
