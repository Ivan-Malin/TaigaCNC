import { ChangeDetectorRef, EventEmitter, TemplateRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiControl, TuiActiveZoneDirective, TuiContextWithImplicit, TuiFocusableElementAccessor, TuiInputMode } from '@taiga-ui/cdk';
import { TuiDataListHost, TuiTextMaskOptions } from '@taiga-ui/core';
import { Observable } from 'rxjs';
export declare class TuiInputPhoneComponent extends AbstractTuiControl<string> implements TuiFocusableElementAccessor, TuiDataListHost<string> {
    set countryCodeSetter(countryCode: string);
    phoneMaskAfterCountryCode: string;
    allowText: boolean;
    search: string;
    readonly searchChange: EventEmitter<string>;
    readonly textMaskOptions: TuiTextMaskOptions;
    countryCode: string;
    open: boolean;
    readonly datalist?: TemplateRef<TuiContextWithImplicit<TuiActiveZoneDirective>>;
    private readonly dropdown?;
    private readonly textfield?;
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef, selection$: Observable<unknown>);
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    get nativeValue(): string;
    get inputMode(): TuiInputMode;
    onHovered(hovered: boolean): void;
    onDrop(event: DragEvent): void;
    onPaste(event: ClipboardEvent): void;
    onActiveZone(active: boolean): void;
    onBackspace(event: Event & {
        target: HTMLInputElement;
    }): void;
    onValueChange(value: string): void;
    handleOption(item: string): void;
    setDisabledState(): void;
    writeValue(value: string | null): void;
    protected getFallbackValue(): string;
    private get caretIsInForbiddenArea();
    private get nonRemovableLength();
    private get maxPhoneLength();
    private get isTextValue();
    private setCaretPosition;
    private setValueWithoutPrefix;
    private cleanValue;
    private focusInput;
    private updateSearch;
    private updateValueWithNewContryCode;
}
