import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { TuiFocusableElementAccessor, TuiNativeFocusableElement } from '@taiga-ui/cdk';
import { TuiModeDirective } from '@taiga-ui/core';
import { AbstractTuiInputSlider } from '@taiga-ui/kit/abstract';
export declare class TuiInputRangeComponent extends AbstractTuiInputSlider<[number, number]> implements TuiFocusableElementAccessor {
    protected readonly modeDirective: TuiModeDirective | null;
    private readonly isMobile;
    private readonly nativeLeft?;
    private readonly nativeRight?;
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef, modeDirective: TuiModeDirective | null, isMobile: boolean);
    get nativeFocusableElement(): TuiNativeFocusableElement | null;
    get focused(): boolean;
    get focusedLeft(): boolean;
    get focusedRight(): boolean;
    get showMinLabel(): boolean;
    get showMaxLabel(): boolean;
    get inputValueLeft(): string;
    get inputValueRight(): string;
    get computedValueLeft(): string;
    get computedValueRight(): string;
    onActiveZone(active: boolean): void;
    onMouseDown(): void;
    onKeyDownArrowUpLeft(event: KeyboardEvent): void;
    onKeyDownArrowDownLeft(event: KeyboardEvent): void;
    onKeyDownArrowUpRight(event: KeyboardEvent): void;
    onKeyDownArrowDownRight(event: KeyboardEvent): void;
    onInputLeft(): void;
    onInputRight(): void;
    onRangeValue(value: [number, number]): void;
    onLeftFocused(focused: boolean): void;
    onRightFocused(focused: boolean): void;
    protected getFallbackValue(): [number, number];
    private processStep;
}
