import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { TuiFocusableElementAccessor, TuiNativeFocusableElement } from '@taiga-ui/cdk';
import { TuiHintControllerDirective, TuiModeDirective } from '@taiga-ui/core';
import { AbstractTuiInputSlider } from '@taiga-ui/kit/abstract';
export declare class TuiInputSliderComponent extends AbstractTuiInputSlider<number> implements TuiFocusableElementAccessor {
    protected readonly modeDirective: TuiModeDirective | null;
    readonly hintController: TuiHintControllerDirective;
    secondary: string;
    private readonly focusableElement?;
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef, modeDirective: TuiModeDirective | null, hintController: TuiHintControllerDirective);
    get nativeFocusableElement(): TuiNativeFocusableElement | null;
    get focused(): boolean;
    get hasTooltip(): boolean;
    get showMinLabel(): boolean;
    get showMaxLabel(): boolean;
    get computedValue(): string;
    get showValue(): boolean;
    get inputValue(): string;
    set inputValue(value: string);
    onMouseDown(): void;
    onKeyDownArrowUp(event: KeyboardEvent): void;
    onKeyDownArrowDown(event: KeyboardEvent): void;
    onFocused(focused: boolean): void;
    onValue(value: string): void;
    onSliderValue(value: number): void;
    protected getFallbackValue(): number;
    private get formattedValue();
    private get isInputValueNotFinished();
    private processStep;
}
