import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, TuiFocusableElementAccessor, TuiIdentityMatcher, TuiNativeFocusableElement } from '@taiga-ui/cdk';
import { TuiAppearance, TuiHorizontalDirection, TuiModeDirective, TuiSizeL, TuiSizeS } from '@taiga-ui/core';
export declare class TuiRadioBlockComponent<T> extends AbstractTuiNullableControl<T> implements TuiFocusableElementAccessor {
    private readonly modeDirective;
    item?: T;
    identityMatcher: TuiIdentityMatcher<T>;
    contentAlign: TuiHorizontalDirection;
    size: TuiSizeS | TuiSizeL;
    hideRadio: boolean;
    pseudoDisabled: boolean;
    private readonly radio?;
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef, modeDirective: TuiModeDirective | null);
    get nativeFocusableElement(): TuiNativeFocusableElement | null;
    get focused(): boolean;
    get computedDisabled(): boolean;
    get checked(): boolean;
    get checkboxSize(): TuiSizeL;
    get appearance(): TuiAppearance;
    onFocused(focused: boolean): void;
    onHovered(hovered: boolean): void;
    onPressed(pressed: boolean): void;
    onFocusVisible(focusVisible: boolean): void;
    onModelChange(value: T): void;
}
