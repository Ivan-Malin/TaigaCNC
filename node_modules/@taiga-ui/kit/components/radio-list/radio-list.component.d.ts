import { ChangeDetectorRef, ElementRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, TuiBooleanHandler, TuiIdentityMatcher, TuiNativeFocusableElement } from '@taiga-ui/cdk';
import { TuiOrientation, TuiSizeL, TuiValueContentContext } from '@taiga-ui/core';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
export declare class TuiRadioListComponent<T> extends AbstractTuiNullableControl<T> {
    private readonly elementRef;
    items: ReadonlyArray<T>;
    size: TuiSizeL;
    identityMatcher: TuiIdentityMatcher<T>;
    orientation: TuiOrientation;
    itemContent: PolymorpheusContent<TuiValueContentContext<T> & {
        index: number;
    }>;
    disabledItemHandler: TuiBooleanHandler<T>;
    private readonly radioButtons;
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef<HTMLElement>);
    get nativeFocusableElement(): TuiNativeFocusableElement | null;
    get focused(): boolean;
    computeId(index: number): string;
    itemIsDisabled(item: T): boolean;
    getContentContext(item: T, index: number, active: boolean): TuiValueContentContext<T> & {
        index: number;
    };
    onModelChange(value: T): void;
    itemIsActive(item: T): boolean;
}
