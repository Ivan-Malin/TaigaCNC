import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, TuiFocusableElementAccessor, TuiIdentityMatcher, TuiNativeFocusableElement } from '@taiga-ui/cdk';
import { TuiSizeL } from '@taiga-ui/core';
import { TuiRadioGroupComponent } from '@taiga-ui/kit/components/radio-group';
import { RadioOptions } from './radio-options';
export declare class TuiRadioComponent<T> extends AbstractTuiNullableControl<T> implements TuiFocusableElementAccessor {
    private readonly options;
    private readonly radioGroup;
    item?: T;
    identityMatcher: TuiIdentityMatcher<T>;
    name: string | null;
    size: TuiSizeL;
    pseudoDisabled: boolean;
    private readonly focusableElement?;
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef, options: RadioOptions, radioGroup: TuiRadioGroupComponent | null);
    get appearance(): string;
    get computedDisabled(): boolean;
    get nativeFocusableElement(): TuiNativeFocusableElement | null;
    get focused(): boolean;
    get checked(): boolean;
    get computedName(): string | number | null;
    get isFocusable(): boolean;
    onChecked(checked: boolean): void;
    onFocused(focused: boolean): void;
    onHovered(hovered: boolean): void;
    onPressed(pressed: boolean): void;
    onFocusVisible(focusVisible: boolean): void;
    private get radioGroupName();
}
