import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiControl, TuiFocusableElementAccessor } from '@taiga-ui/cdk';
import { TuiBrightness, TuiHintControllerDirective, TuiModeDirective, TuiSizeL, TuiSizeS, TuiTextfieldController } from '@taiga-ui/core';
export declare const DEFAULT_ROWS = 20;
export declare const LINE_HEIGHT_M = 20;
export declare const LINE_HEIGHT_L = 24;
export declare class TuiTextAreaComponent extends AbstractTuiControl<string> implements TuiFocusableElementAccessor {
    readonly appearance: string;
    private readonly modeDirective;
    readonly controller: TuiTextfieldController;
    readonly hintController: TuiHintControllerDirective;
    rows: number;
    expandable: boolean;
    readonly isIOS: boolean;
    private readonly focusableElement?;
    constructor(control: NgControl | null, changeDetectorRef: ChangeDetectorRef, appearance: string, isIOS: boolean, modeDirective: TuiModeDirective | null, controller: TuiTextfieldController, hintController: TuiHintControllerDirective);
    get labelOutside(): boolean;
    get nativeFocusableElement(): HTMLTextAreaElement | null;
    get focused(): boolean;
    get size(): TuiSizeL | TuiSizeS;
    get hasTooltip(): boolean;
    get hasValue(): boolean;
    get hasCounter(): boolean;
    get hasPlaceholder(): boolean;
    get hasExampleText(): boolean;
    get computeMaxHeight(): number | null;
    get hostMode(): TuiBrightness | null;
    get placeholderRaised(): boolean;
    onFocused(focused: boolean): void;
    onHovered(hovered: boolean): void;
    onPressed(pressed: boolean): void;
    onValue(value: string): void;
    onMouseDown(event: MouseEvent): void;
    protected getFallbackValue(): string;
    private get lineHeight();
}
