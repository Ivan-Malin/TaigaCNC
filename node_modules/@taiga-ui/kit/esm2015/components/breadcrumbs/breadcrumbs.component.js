import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';
import { tuiDefaultProp } from '@taiga-ui/cdk';
import { DEFAULT_ROUTER_LINK_OPTIONS } from '@taiga-ui/kit/constants';
let TuiBreadcrumbsComponent = class TuiBreadcrumbsComponent {
    constructor() {
        this.items = [];
        this.size = 'm';
        this.routerLinkOptions = ({ routerLinkOptions, }) => routerLinkOptions || DEFAULT_ROUTER_LINK_OPTIONS;
    }
};
__decorate([
    Input(),
    tuiDefaultProp()
], TuiBreadcrumbsComponent.prototype, "items", void 0);
__decorate([
    Input(),
    HostBinding('attr.data-tui-host-size'),
    tuiDefaultProp()
], TuiBreadcrumbsComponent.prototype, "size", void 0);
TuiBreadcrumbsComponent = __decorate([
    Component({
        selector: 'tui-breadcrumbs',
        changeDetection: ChangeDetectionStrategy.OnPush,
        template: "<ng-container *ngFor=\"let item of items; last as lastItem\">\n    <ng-container *tuiLet=\"item | tuiMapper: routerLinkOptions as options\">\n        <a\n            tuiLink\n            tuiMode=\"onLight\"\n            routerLinkActive=\"active-link\"\n            #rla=\"routerLinkActive\"\n            [attr.tabindex]=\"rla.isActive ? -1 : null\"\n            [fragment]=\"options.fragment\"\n            [preserveFragment]=\"options.preserveFragment\"\n            [replaceUrl]=\"options.replaceUrl\"\n            [routerLink]=\"item.routerLink\"\n            [routerLinkActiveOptions]=\"item.routerLinkActiveOptions || {exact: false}\"\n            [skipLocationChange]=\"options.skipLocationChange\"\n            [queryParams]=\"options.queryParams\"\n            [target]=\"options.target\"\n        >\n            {{item.caption}}\n        </a>\n        <tui-svg\n            *ngIf=\"!lastItem\"\n            class=\"icon\"\n            src=\"tuiIconChevronRight\"\n        ></tui-svg>\n    </ng-container>\n</ng-container>\n",
        styles: [":host{display:flex;align-items:center;height:40px}:host[data-tui-host-size='m']{font:var(--tui-font-text-s)}:host[data-tui-host-size='l']{font:var(--tui-font-text-m)}.icon{margin:0 4px;color:var(--tui-text-03)}a.active-link[data-mode=onLight]{color:var(--tui-text-03);pointer-events:none}"]
    })
], TuiBreadcrumbsComponent);
export { TuiBreadcrumbsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL2JyZWFkY3J1bWJzLyIsInNvdXJjZXMiOlsiYnJlYWRjcnVtYnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckYsT0FBTyxFQUFDLGNBQWMsRUFBWSxNQUFNLGVBQWUsQ0FBQztBQUV4RCxPQUFPLEVBQUMsMkJBQTJCLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQVNwRSxJQUFhLHVCQUF1QixHQUFwQyxNQUFhLHVCQUF1QjtJQUFwQztRQUdJLFVBQUssR0FBc0MsRUFBRSxDQUFDO1FBSzlDLFNBQUksR0FBYSxHQUFHLENBQUM7UUFFWixzQkFBaUIsR0FBdUMsQ0FBQyxFQUM5RCxpQkFBaUIsR0FDcEIsRUFBRSxFQUFFLENBQUMsaUJBQWlCLElBQUksMkJBQTJCLENBQUM7SUFDM0QsQ0FBQztDQUFBLENBQUE7QUFWRztJQUZDLEtBQUssRUFBRTtJQUNQLGNBQWMsRUFBRTtzREFDNkI7QUFLOUM7SUFIQyxLQUFLLEVBQUU7SUFDUCxXQUFXLENBQUMseUJBQXlCLENBQUM7SUFDdEMsY0FBYyxFQUFFO3FEQUNJO0FBUlosdUJBQXVCO0lBTm5DLFNBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxpQkFBaUI7UUFDM0IsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07UUFDL0MscWhDQUEwQzs7S0FFN0MsQ0FBQztHQUNXLHVCQUF1QixDQWFuQztTQWJZLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpRGVmYXVsdFByb3AsIFR1aU1hcHBlcn0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1R1aVNpemVMfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge0RFRkFVTFRfUk9VVEVSX0xJTktfT1BUSU9OU30gZnJvbSAnQHRhaWdhLXVpL2tpdC9jb25zdGFudHMnO1xuaW1wb3J0IHtUdWlCcmVhZENydW1ic0l0ZW19IGZyb20gJ0B0YWlnYS11aS9raXQvaW50ZXJmYWNlcyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLWJyZWFkY3J1bWJzJyxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICB0ZW1wbGF0ZVVybDogJy4vYnJlYWRjcnVtYnMudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vYnJlYWRjcnVtYnMuc3R5bGUubGVzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlCcmVhZGNydW1ic0NvbXBvbmVudCB7XG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGl0ZW1zOiBSZWFkb25seUFycmF5PFR1aUJyZWFkQ3J1bWJzSXRlbT4gPSBbXTtcblxuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtdHVpLWhvc3Qtc2l6ZScpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBzaXplOiBUdWlTaXplTCA9ICdtJztcblxuICAgIHJlYWRvbmx5IHJvdXRlckxpbmtPcHRpb25zOiBUdWlNYXBwZXI8VHVpQnJlYWRDcnVtYnNJdGVtLCBhbnk+ID0gKHtcbiAgICAgICAgcm91dGVyTGlua09wdGlvbnMsXG4gICAgfSkgPT4gcm91dGVyTGlua09wdGlvbnMgfHwgREVGQVVMVF9ST1VURVJfTElOS19PUFRJT05TO1xufVxuIl19