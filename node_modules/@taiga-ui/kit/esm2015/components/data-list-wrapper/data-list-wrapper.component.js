var TuiDataListWrapperComponent_1;
import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, forwardRef, Input, ViewChildren, } from '@angular/core';
import { ALWAYS_FALSE_HANDLER, EMPTY_QUERY, isNativeFocused, isPresent, TUI_DEFAULT_STRINGIFY, tuiDefaultProp, } from '@taiga-ui/cdk';
import { TUI_DATA_LIST_ACCESSOR, TuiOptionComponent, } from '@taiga-ui/core';
let TuiDataListWrapperComponent = TuiDataListWrapperComponent_1 = class TuiDataListWrapperComponent {
    constructor() {
        this.items = [];
        this.disabledItemHandler = ALWAYS_FALSE_HANDLER;
        this.emptyContent = '';
        this.itemContent = ({ $implicit }) => TUI_DEFAULT_STRINGIFY($implicit);
        this.size = 'm';
        this.options = EMPTY_QUERY;
    }
    getContext($implicit, { nativeElement }) {
        return { $implicit, active: isNativeFocused(nativeElement) };
    }
    getOptions(includeDisabled = false) {
        return this.options
            .toArray()
            .filter(({ disabled }) => includeDisabled || !disabled)
            .map(({ value }) => value)
            .filter(isPresent);
    }
};
__decorate([
    Input(),
    tuiDefaultProp()
], TuiDataListWrapperComponent.prototype, "items", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiDataListWrapperComponent.prototype, "disabledItemHandler", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiDataListWrapperComponent.prototype, "emptyContent", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiDataListWrapperComponent.prototype, "itemContent", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiDataListWrapperComponent.prototype, "size", void 0);
__decorate([
    ViewChildren(forwardRef(() => TuiOptionComponent))
], TuiDataListWrapperComponent.prototype, "options", void 0);
TuiDataListWrapperComponent = TuiDataListWrapperComponent_1 = __decorate([
    Component({
        selector: 'tui-data-list-wrapper:not([labels])',
        template: "<tui-data-list *ngIf=\"items else loading\" [emptyContent]=\"emptyContent\">\n    <button\n        *ngFor=\"let item of items\"\n        #elementRef=\"elementRef\"\n        tuiElement\n        tuiOption\n        automation-id=\"tui-data-list-wrapper__option\"\n        [size]=\"size\"\n        [value]=\"item\"\n        [disabled]=\"disabledItemHandler(item)\"\n    >\n        <span\n            polymorpheus-outlet\n            class=\"content\"\n            [content]=\"itemContent\"\n            [context]=\"getContext(item, elementRef)\"\n        ></span>\n    </button>\n</tui-data-list>\n<ng-template #loading>\n    <tui-loader\n        class=\"tui-space_vertical-3\"\n        automation-id=\"tui-data-list-wrapper__loader\"\n    ></tui-loader>\n</ng-template>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        providers: [
            {
                provide: TUI_DATA_LIST_ACCESSOR,
                useExisting: forwardRef(() => TuiDataListWrapperComponent_1),
            },
        ],
        styles: [":host{display:block}.content{flex:1}"]
    })
], TuiDataListWrapperComponent);
export { TuiDataListWrapperComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1saXN0LXdyYXBwZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL2RhdGEtbGlzdC13cmFwcGVyLyIsInNvdXJjZXMiOlsiZGF0YS1saXN0LXdyYXBwZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBRVQsVUFBVSxFQUNWLEtBQUssRUFFTCxZQUFZLEdBQ2YsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUNILG9CQUFvQixFQUNwQixXQUFXLEVBQ1gsZUFBZSxFQUNmLFNBQVMsRUFDVCxxQkFBcUIsRUFFckIsY0FBYyxHQUNqQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQ0gsc0JBQXNCLEVBRXRCLGtCQUFrQixHQUlyQixNQUFNLGdCQUFnQixDQUFDO0FBZXhCLElBQWEsMkJBQTJCLG1DQUF4QyxNQUFhLDJCQUEyQjtJQUF4QztRQUdJLFVBQUssR0FBOEQsRUFBRSxDQUFDO1FBSXRFLHdCQUFtQixHQUF5QixvQkFBb0IsQ0FBQztRQUlqRSxpQkFBWSxHQUF3QixFQUFFLENBQUM7UUFJdkMsZ0JBQVcsR0FBbUQsQ0FBQyxFQUFDLFNBQVMsRUFBQyxFQUFFLEVBQUUsQ0FDMUUscUJBQXFCLENBQUMsU0FBUyxDQUFDLENBQUM7UUFJckMsU0FBSSxHQUF5QixHQUFHLENBQUM7UUFHaEIsWUFBTyxHQUFxQyxXQUFXLENBQUM7SUFnQjdFLENBQUM7SUFkRyxVQUFVLENBQ04sU0FBWSxFQUNaLEVBQUMsYUFBYSxFQUEwQjtRQUV4QyxPQUFPLEVBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxlQUFlLENBQUMsYUFBYSxDQUFDLEVBQUMsQ0FBQztJQUMvRCxDQUFDO0lBRUQsVUFBVSxDQUFDLGtCQUEyQixLQUFLO1FBQ3ZDLE9BQU8sSUFBSSxDQUFDLE9BQU87YUFDZCxPQUFPLEVBQUU7YUFDVCxNQUFNLENBQUMsQ0FBQyxFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUUsQ0FBQyxlQUFlLElBQUksQ0FBQyxRQUFRLENBQUM7YUFDcEQsR0FBRyxDQUFDLENBQUMsRUFBQyxLQUFLLEVBQUMsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDO2FBQ3ZCLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMzQixDQUFDO0NBQ0osQ0FBQTtBQXBDRztJQUZDLEtBQUssRUFBRTtJQUNQLGNBQWMsRUFBRTswREFDcUQ7QUFJdEU7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7d0VBQ2dEO0FBSWpFO0lBRkMsS0FBSyxFQUFFO0lBQ1AsY0FBYyxFQUFFO2lFQUNzQjtBQUl2QztJQUZDLEtBQUssRUFBRTtJQUNQLGNBQWMsRUFBRTtnRUFFb0I7QUFJckM7SUFGQyxLQUFLLEVBQUU7SUFDUCxjQUFjLEVBQUU7eURBQ2dCO0FBR2pDO0lBREMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDOzREQUNzQjtBQXZCaEUsMkJBQTJCO0lBWnZDLFNBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxxQ0FBcUM7UUFDL0MsNHdCQUFnRDtRQUVoRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtRQUMvQyxTQUFTLEVBQUU7WUFDUDtnQkFDSSxPQUFPLEVBQUUsc0JBQXNCO2dCQUMvQixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLDZCQUEyQixDQUFDO2FBQzdEO1NBQ0o7O0tBQ0osQ0FBQztHQUNXLDJCQUEyQixDQXVDdkM7U0F2Q1ksMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgRWxlbWVudFJlZixcbiAgICBmb3J3YXJkUmVmLFxuICAgIElucHV0LFxuICAgIFF1ZXJ5TGlzdCxcbiAgICBWaWV3Q2hpbGRyZW4sXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgICBBTFdBWVNfRkFMU0VfSEFORExFUixcbiAgICBFTVBUWV9RVUVSWSxcbiAgICBpc05hdGl2ZUZvY3VzZWQsXG4gICAgaXNQcmVzZW50LFxuICAgIFRVSV9ERUZBVUxUX1NUUklOR0lGWSxcbiAgICBUdWlCb29sZWFuSGFuZGxlcixcbiAgICB0dWlEZWZhdWx0UHJvcCxcbn0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1xuICAgIFRVSV9EQVRBX0xJU1RfQUNDRVNTT1IsXG4gICAgVHVpRGF0YUxpc3RBY2Nlc3NvcixcbiAgICBUdWlPcHRpb25Db21wb25lbnQsXG4gICAgVHVpU2l6ZUwsXG4gICAgVHVpU2l6ZVhTLFxuICAgIFR1aVZhbHVlQ29udGVudENvbnRleHQsXG59IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7UG9seW1vcnBoZXVzQ29udGVudH0gZnJvbSAnQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktZGF0YS1saXN0LXdyYXBwZXI6bm90KFtsYWJlbHNdKScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2RhdGEtbGlzdC13cmFwcGVyLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2RhdGEtbGlzdC13cmFwcGVyLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogVFVJX0RBVEFfTElTVF9BQ0NFU1NPUixcbiAgICAgICAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFR1aURhdGFMaXN0V3JhcHBlckNvbXBvbmVudCksXG4gICAgICAgIH0sXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpRGF0YUxpc3RXcmFwcGVyQ29tcG9uZW50PFQ+IGltcGxlbWVudHMgVHVpRGF0YUxpc3RBY2Nlc3NvcjxUPiB7XG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGl0ZW1zOiBSZWFkb25seUFycmF5PFJlYWRvbmx5QXJyYXk8VD4+IHwgUmVhZG9ubHlBcnJheTxUPiB8IG51bGwgPSBbXTtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBkaXNhYmxlZEl0ZW1IYW5kbGVyOiBUdWlCb29sZWFuSGFuZGxlcjxUPiA9IEFMV0FZU19GQUxTRV9IQU5ETEVSO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGVtcHR5Q29udGVudDogUG9seW1vcnBoZXVzQ29udGVudCA9ICcnO1xuXG4gICAgQElucHV0KClcbiAgICBAdHVpRGVmYXVsdFByb3AoKVxuICAgIGl0ZW1Db250ZW50OiBQb2x5bW9ycGhldXNDb250ZW50PFR1aVZhbHVlQ29udGVudENvbnRleHQ8VD4+ID0gKHskaW1wbGljaXR9KSA9PlxuICAgICAgICBUVUlfREVGQVVMVF9TVFJJTkdJRlkoJGltcGxpY2l0KTtcblxuICAgIEBJbnB1dCgpXG4gICAgQHR1aURlZmF1bHRQcm9wKClcbiAgICBzaXplOiBUdWlTaXplWFMgfCBUdWlTaXplTCA9ICdtJztcblxuICAgIEBWaWV3Q2hpbGRyZW4oZm9yd2FyZFJlZigoKSA9PiBUdWlPcHRpb25Db21wb25lbnQpKVxuICAgIHByaXZhdGUgcmVhZG9ubHkgb3B0aW9uczogUXVlcnlMaXN0PFR1aU9wdGlvbkNvbXBvbmVudDxUPj4gPSBFTVBUWV9RVUVSWTtcblxuICAgIGdldENvbnRleHQoXG4gICAgICAgICRpbXBsaWNpdDogVCxcbiAgICAgICAge25hdGl2ZUVsZW1lbnR9OiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcbiAgICApOiBUdWlWYWx1ZUNvbnRlbnRDb250ZXh0PFQ+IHtcbiAgICAgICAgcmV0dXJuIHskaW1wbGljaXQsIGFjdGl2ZTogaXNOYXRpdmVGb2N1c2VkKG5hdGl2ZUVsZW1lbnQpfTtcbiAgICB9XG5cbiAgICBnZXRPcHRpb25zKGluY2x1ZGVEaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlKTogUmVhZG9ubHlBcnJheTxUPiB7XG4gICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnNcbiAgICAgICAgICAgIC50b0FycmF5KClcbiAgICAgICAgICAgIC5maWx0ZXIoKHtkaXNhYmxlZH0pID0+IGluY2x1ZGVEaXNhYmxlZCB8fCAhZGlzYWJsZWQpXG4gICAgICAgICAgICAubWFwKCh7dmFsdWV9KSA9PiB2YWx1ZSlcbiAgICAgICAgICAgIC5maWx0ZXIoaXNQcmVzZW50KTtcbiAgICB9XG59XG4iXX0=