import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, Input, Output, } from '@angular/core';
import { DomSanitizer, SafeValue } from '@angular/platform-browser';
import { TUI_IS_MOBILE, tuiDefaultProp, tuiPure } from '@taiga-ui/cdk';
import { TUI_DIGITAL_INFORMATION_UNITS, TUI_FILE_TEXTS } from '@taiga-ui/kit/tokens';
import { formatSize } from '@taiga-ui/kit/utils/files';
import { Observable, of } from 'rxjs';
import { map } from 'rxjs/operators';
// @dynamic
let TuiFileComponent = class TuiFileComponent {
    constructor(isMobile, sanitizer, fileTexts$, units$) {
        this.isMobile = isMobile;
        this.sanitizer = sanitizer;
        this.fileTexts$ = fileTexts$;
        this.units$ = units$;
        this.file = { name: '' };
        this.state = "normal" /* Normal */;
        this.size = 'm';
        this.allowDelete = true;
        this.showSize = true;
        this.fileRemoved = new EventEmitter();
        this.focused = false;
    }
    get preview() {
        return this.isBig ? this.createPreview(this.file, this.sanitizer) : '';
    }
    get isBig() {
        return this.size === 'l';
    }
    get isLoading() {
        return this.state === "loading" /* Loading */;
    }
    get isError() {
        return this.state === "error" /* Error */;
    }
    get isDeleted() {
        return this.state === "deleted" /* Deleted */;
    }
    get icon() {
        if (this.state === "normal" /* Normal */ && this.isBig) {
            return 'tuiIconDefaultDocLarge';
        }
        switch (this.state) {
            case "deleted" /* Deleted */:
                return 'tuiIconTrashLarge';
            case "error" /* Error */:
                return 'tuiIconAlertCircleLarge';
            default:
                return 'tuiIconCheckCircleLarge';
        }
    }
    get src() {
        return this.file.src || '';
    }
    get name() {
        return this.file.name.split('.').slice(0, -1).join('.');
    }
    get type() {
        return '.' + this.file.name.split('.').pop() || '';
    }
    get content$() {
        return this.calculateContent$(this.state, this.file, this.fileTexts$);
    }
    get fileSize$() {
        return this.calculateFileSize$(this.file, this.units$);
    }
    onRemoveClick() {
        this.fileRemoved.emit();
    }
    onFocusVisible(focusVisible) {
        this.focused = focusVisible;
    }
    calculateContent$(state, file, fileTexts$) {
        return state === "error" /* Error */ && !file.content
            ? fileTexts$.pipe(map(texts => texts.loadingError))
            : of(this.file.content || '');
    }
    calculateFileSize$(file, units$) {
        return units$.pipe(map(units => formatSize(units, file.size)));
    }
    createPreview(file, sanitizer) {
        if (file.src) {
            return file.src;
        }
        if (file instanceof File && file.type && file.type.startsWith('image/')) {
            return sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(file));
        }
        return '';
    }
};
TuiFileComponent.ctorParameters = () => [
    { type: Boolean, decorators: [{ type: Inject, args: [TUI_IS_MOBILE,] }] },
    { type: DomSanitizer, decorators: [{ type: Inject, args: [DomSanitizer,] }] },
    { type: Observable, decorators: [{ type: Inject, args: [TUI_FILE_TEXTS,] }] },
    { type: Observable, decorators: [{ type: Inject, args: [TUI_DIGITAL_INFORMATION_UNITS,] }] }
];
__decorate([
    Input(),
    tuiDefaultProp()
], TuiFileComponent.prototype, "file", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiFileComponent.prototype, "state", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiFileComponent.prototype, "size", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiFileComponent.prototype, "allowDelete", void 0);
__decorate([
    Input(),
    tuiDefaultProp()
], TuiFileComponent.prototype, "showSize", void 0);
__decorate([
    Output()
], TuiFileComponent.prototype, "fileRemoved", void 0);
__decorate([
    HostBinding('class._focused')
], TuiFileComponent.prototype, "focused", void 0);
__decorate([
    HostBinding('class._link')
], TuiFileComponent.prototype, "src", null);
__decorate([
    tuiPure
], TuiFileComponent.prototype, "calculateContent$", null);
__decorate([
    tuiPure
], TuiFileComponent.prototype, "calculateFileSize$", null);
__decorate([
    tuiPure
], TuiFileComponent.prototype, "createPreview", null);
TuiFileComponent = __decorate([
    Component({
        selector: 'tui-file',
        changeDetection: ChangeDetectionStrategy.OnPush,
        template: "<ng-container *ngIf=\"!src; else withLink\">\n    <ng-container *ngTemplateOutlet=\"fileInfoTemplate\"></ng-container>\n</ng-container>\n\n<ng-template #withLink>\n    <a\n        class=\"link\"\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        [href]=\"src\"\n        (tuiFocusVisibleChange)=\"onFocusVisible($event)\"\n    >\n        <ng-container *ngTemplateOutlet=\"fileInfoTemplate\"></ng-container>\n    </a>\n</ng-template>\n\n<ng-template #fileInfoTemplate>\n    <div class=\"preview\" [class.preview_big]=\"isBig\">\n        <img\n            *ngIf=\"preview && (fileTexts$ | async) as texts; else loader\"\n            automation-id=\"tui-file__preview\"\n            class=\"image\"\n            [alt]=\"texts.preview\"\n            [src]=\"preview\"\n        />\n        <ng-template #loader>\n            <tui-loader\n                *ngIf=\"isLoading; else svg\"\n                automation-id=\"tui-file__loader\"\n                class=\"loader\"\n                [inheritColor]=\"isBig\"\n            ></tui-loader>\n        </ng-template>\n        <ng-template #svg>\n            <tui-svg\n                class=\"icon\"\n                automation-id=\"tui-file__icon\"\n                [class.icon_deleted]=\"isDeleted\"\n                [class.icon_error]=\"isError\"\n                [src]=\"icon\"\n            ></tui-svg>\n        </ng-template>\n    </div>\n    <div class=\"wrapper\">\n        <div class=\"text\">\n            <div automation-id=\"tui-file__name\" class=\"name\">{{name}}</div>\n            <div automation-id=\"tui-file__type\" class=\"type\">{{type}}</div>\n            <div\n                *ngIf=\"showSize && (fileSize$ | async) as fileSize\"\n                automation-id=\"tui-file__size\"\n                class=\"size\"\n            >\n                {{fileSize}}\n            </div>\n        </div>\n        <div\n            polymorpheus-outlet\n            *ngIf=\"content$ | async as content\"\n            automation-id=\"tui-file__content\"\n            class=\"content\"\n            [content]=\"content\"\n        ></div>\n    </div>\n    <button\n        *ngIf=\"allowDelete && (fileTexts$ | async) as texts\"\n        automation-id=\"tui-file__remove\"\n        tuiIconButton\n        type=\"button\"\n        size=\"xs\"\n        icon=\"tuiIconCloseLarge\"\n        appearance=\"icon\"\n        class=\"remove\"\n        [title]=\"texts.remove\"\n        [class.remove_mobile]=\"isMobile\"\n        (click.prevent)=\"onRemoveClick()\"\n    ></button>\n</ng-template>\n",
        styles: [":host{font:var(--tui-font-text-m);position:relative;display:flex;border:1px solid var(--tui-base-03);border-radius:var(--tui-radius-m)}:host[data-mode=onDark]{color:var(--tui-text-01-night)}:host:not(._link){padding:9px 35px 9px 9px}:host:hover .remove{opacity:1}:host._focused{border-color:var(--tui-focus);box-shadow:0 0 0 1px inset var(--tui-focus)}.link{display:flex;flex:1;padding:9px 35px 9px 9px;text-decoration:none;outline:0;cursor:pointer;color:var(--tui-text-01);max-width:calc(100% - 44px)}.link:hover{background-color:var(--tui-base-02)}.preview{position:relative;display:flex;align-items:center;justify-content:center;flex-shrink:0;width:24px;height:24px;margin-right:12px;border-radius:var(--tui-radius-m);overflow:hidden;color:rgba(0,0,0,.24)}.preview_big{width:64px;height:64px;margin-right:16px}.preview_big:before{position:absolute;top:0;left:0;width:100%;height:100%;content:'';background:#333;opacity:.08}.image{max-width:100%;max-height:100%}.loader{position:absolute;top:0;left:0;width:100%;height:100%}.icon{position:absolute;top:0;left:0;width:100%;height:100%;color:var(--tui-success-fill)}.icon_error{color:var(--tui-error-fill)}.icon_deleted{color:var(--tui-base-06)}.remove{transition-property:opacity;transition-duration:.3s;transition-timing-function:ease-in-out;position:absolute;top:10px;right:10px;opacity:0}.remove:focus,.remove_mobile{opacity:1}.wrapper{display:flex;flex-direction:column;justify-content:center;overflow:hidden}.text{display:flex}.size{flex-shrink:0;opacity:var(--tui-disabled-opacity);margin-left:8px}.type{flex-shrink:0}.name{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.content{font:var(--tui-font-text-s);color:var(--tui-error-fill)}"]
    }),
    __param(0, Inject(TUI_IS_MOBILE)),
    __param(1, Inject(DomSanitizer)),
    __param(2, Inject(TUI_FILE_TEXTS)),
    __param(3, Inject(TUI_DIGITAL_INFORMATION_UNITS))
], TuiFileComponent);
export { TuiFileComponent };
//# sourceMappingURL=data:application/json;base64,