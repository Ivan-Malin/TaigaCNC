import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { isPresent, tuiReplayedValueChangesFrom } from '@taiga-ui/cdk';
import { sizeBigger } from '@taiga-ui/core';
import { TuiSelectOptionComponent } from '@taiga-ui/kit/components/select-option';
import { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus';
import { map } from 'rxjs/operators';
let TuiMultiSelectOptionComponent = class TuiMultiSelectOptionComponent extends TuiSelectOptionComponent {
    constructor() {
        super(...arguments);
        this.selected$ = tuiReplayedValueChangesFrom(this.control).pipe(map(value => isPresent(this.option.value) &&
            !!value &&
            !!value.find(item => this.matcher(item, this.option.value))));
    }
    get size() {
        return sizeBigger(this.option.size) ? 'l' : 'm';
    }
};
TuiMultiSelectOptionComponent = __decorate([
    Component({
        selector: 'tui-multi-select-option',
        template: "<tui-primitive-checkbox\n    class=\"tui-space_right-3\"\n    [size]=\"size\"\n    [value]=\"selected$ | async\"\n></tui-primitive-checkbox>\n<ng-container *ngTemplateOutlet=\"context.$implicit\"></ng-container>\n",
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: [":host{display:flex;flex:1;align-items:center}"]
    })
], TuiMultiSelectOptionComponent);
export { TuiMultiSelectOptionComponent };
export const TUI_MULTI_SELECT_OPTION = new PolymorpheusComponent(TuiMultiSelectOptionComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc2VsZWN0LW9wdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkva2l0L2NvbXBvbmVudHMvbXVsdGktc2VsZWN0LW9wdGlvbi8iLCJzb3VyY2VzIjpbIm11bHRpLXNlbGVjdC1vcHRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2pFLE9BQU8sRUFBQyxTQUFTLEVBQUUsMkJBQTJCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFDLFVBQVUsRUFBVyxNQUFNLGdCQUFnQixDQUFDO0FBQ3BELE9BQU8sRUFBQyx3QkFBd0IsRUFBQyxNQUFNLHdDQUF3QyxDQUFDO0FBQ2hGLE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQy9ELE9BQU8sRUFBQyxHQUFHLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQVFuQyxJQUFhLDZCQUE2QixHQUExQyxNQUFhLDZCQUFpQyxTQUFRLHdCQUEyQjtJQUFqRjs7UUFDYSxjQUFTLEdBQUcsMkJBQTJCLENBQW1CLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQ2pGLEdBQUcsQ0FDQyxLQUFLLENBQUMsRUFBRSxDQUNKLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUM1QixDQUFDLENBQUMsS0FBSztZQUNQLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFNLENBQUMsQ0FBQyxDQUNuRSxDQUNKLENBQUM7SUFLTixDQUFDO0lBSEcsSUFBSSxJQUFJO1FBQ0osT0FBTyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDcEQsQ0FBQztDQUNKLENBQUE7QUFiWSw2QkFBNkI7SUFOekMsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLHlCQUF5QjtRQUNuQyxpT0FBa0Q7UUFFbEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O0tBQ2xELENBQUM7R0FDVyw2QkFBNkIsQ0FhekM7U0FiWSw2QkFBNkI7QUFlMUMsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsSUFBSSxxQkFBcUIsQ0FDNUQsNkJBQTZCLENBQ2hDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtpc1ByZXNlbnQsIHR1aVJlcGxheWVkVmFsdWVDaGFuZ2VzRnJvbX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge3NpemVCaWdnZXIsIFR1aVNpemVMfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge1R1aVNlbGVjdE9wdGlvbkNvbXBvbmVudH0gZnJvbSAnQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL3NlbGVjdC1vcHRpb24nO1xuaW1wb3J0IHtQb2x5bW9ycGhldXNDb21wb25lbnR9IGZyb20gJ0B0aW5rb2ZmL25nLXBvbHltb3JwaGV1cyc7XG5pbXBvcnQge21hcH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1tdWx0aS1zZWxlY3Qtb3B0aW9uJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbXVsdGktc2VsZWN0LW9wdGlvbi50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9tdWx0aS1zZWxlY3Qtb3B0aW9uLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgVHVpTXVsdGlTZWxlY3RPcHRpb25Db21wb25lbnQ8VD4gZXh0ZW5kcyBUdWlTZWxlY3RPcHRpb25Db21wb25lbnQ8VD4ge1xuICAgIHJlYWRvbmx5IHNlbGVjdGVkJCA9IHR1aVJlcGxheWVkVmFsdWVDaGFuZ2VzRnJvbTxSZWFkb25seUFycmF5PFQ+Pih0aGlzLmNvbnRyb2wpLnBpcGUoXG4gICAgICAgIG1hcChcbiAgICAgICAgICAgIHZhbHVlID0+XG4gICAgICAgICAgICAgICAgaXNQcmVzZW50KHRoaXMub3B0aW9uLnZhbHVlKSAmJlxuICAgICAgICAgICAgICAgICEhdmFsdWUgJiZcbiAgICAgICAgICAgICAgICAhIXZhbHVlLmZpbmQoaXRlbSA9PiB0aGlzLm1hdGNoZXIoaXRlbSwgdGhpcy5vcHRpb24udmFsdWUhKSksXG4gICAgICAgICksXG4gICAgKTtcblxuICAgIGdldCBzaXplKCk6IFR1aVNpemVMIHtcbiAgICAgICAgcmV0dXJuIHNpemVCaWdnZXIodGhpcy5vcHRpb24uc2l6ZSkgPyAnbCcgOiAnbSc7XG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgVFVJX01VTFRJX1NFTEVDVF9PUFRJT04gPSBuZXcgUG9seW1vcnBoZXVzQ29tcG9uZW50KFxuICAgIFR1aU11bHRpU2VsZWN0T3B0aW9uQ29tcG9uZW50LFxuKTtcbiJdfQ==