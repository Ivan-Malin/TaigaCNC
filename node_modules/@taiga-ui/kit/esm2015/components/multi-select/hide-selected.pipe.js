import { __decorate, __param } from "tslib";
import { Inject, Optional, Pipe } from '@angular/core';
import { tuiPure } from '@taiga-ui/cdk';
import { TuiMultiSelectComponent } from './multi-select.component';
// TODO: Remove Optional and second argument when Angular is upgraded to 9+
let TuiHideSelectedPipe = class TuiHideSelectedPipe {
    constructor(component) {
        this.component = component;
    }
    transform(items, { value, identityMatcher } = this.component) {
        return items && this.filter(items, value, identityMatcher);
    }
    filter(items, value, matcher) {
        return items.filter(item => value.every(selected => !matcher(selected, item)));
    }
};
TuiHideSelectedPipe.ctorParameters = () => [
    { type: TuiMultiSelectComponent, decorators: [{ type: Optional }, { type: Inject, args: [TuiMultiSelectComponent,] }] }
];
__decorate([
    tuiPure
], TuiHideSelectedPipe.prototype, "filter", null);
TuiHideSelectedPipe = __decorate([
    Pipe({
        name: 'tuiHideSelected',
        pure: false,
    }),
    __param(0, Optional()),
    __param(0, Inject(TuiMultiSelectComponent))
], TuiHideSelectedPipe);
export { TuiHideSelectedPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlkZS1zZWxlY3RlZC5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL211bHRpLXNlbGVjdC8iLCJzb3VyY2VzIjpbImhpZGUtc2VsZWN0ZWQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFnQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQXFCLE9BQU8sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMxRCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUVqRSwyRUFBMkU7QUFLM0UsSUFBYSxtQkFBbUIsR0FBaEMsTUFBYSxtQkFBbUI7SUFDNUIsWUFHcUIsU0FBcUM7UUFBckMsY0FBUyxHQUFULFNBQVMsQ0FBNEI7SUFDdkQsQ0FBQztJQUlKLFNBQVMsQ0FDTCxLQUE4QixFQUM5QixFQUFDLEtBQUssRUFBRSxlQUFlLEtBQWdDLElBQUksQ0FBQyxTQUFTO1FBRXJFLE9BQU8sS0FBSyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxlQUFlLENBQUMsQ0FBQztJQUMvRCxDQUFDO0lBR08sTUFBTSxDQUNWLEtBQXVCLEVBQ3ZCLEtBQXVCLEVBQ3ZCLE9BQThCO1FBRTlCLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ25GLENBQUM7Q0FDSixDQUFBOztZQXBCbUMsdUJBQXVCLHVCQUZsRCxRQUFRLFlBQ1IsTUFBTSxTQUFDLHVCQUF1Qjs7QUFjbkM7SUFEQyxPQUFPO2lEQU9QO0FBdkJRLG1CQUFtQjtJQUovQixJQUFJLENBQUM7UUFDRixJQUFJLEVBQUUsaUJBQWlCO1FBQ3ZCLElBQUksRUFBRSxLQUFLO0tBQ2QsQ0FBQztJQUdPLFdBQUEsUUFBUSxFQUFFLENBQUE7SUFDVixXQUFBLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFBO0dBSDNCLG1CQUFtQixDQXdCL0I7U0F4QlksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3QsIE9wdGlvbmFsLCBQaXBlLCBQaXBlVHJhbnNmb3JtfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpSWRlbnRpdHlNYXRjaGVyLCB0dWlQdXJlfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VHVpTXVsdGlTZWxlY3RDb21wb25lbnR9IGZyb20gJy4vbXVsdGktc2VsZWN0LmNvbXBvbmVudCc7XG5cbi8vIFRPRE86IFJlbW92ZSBPcHRpb25hbCBhbmQgc2Vjb25kIGFyZ3VtZW50IHdoZW4gQW5ndWxhciBpcyB1cGdyYWRlZCB0byA5K1xuQFBpcGUoe1xuICAgIG5hbWU6ICd0dWlIaWRlU2VsZWN0ZWQnLFxuICAgIHB1cmU6IGZhbHNlLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlIaWRlU2VsZWN0ZWRQaXBlPFQ+IGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBPcHRpb25hbCgpXG4gICAgICAgIEBJbmplY3QoVHVpTXVsdGlTZWxlY3RDb21wb25lbnQpXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgY29tcG9uZW50OiBUdWlNdWx0aVNlbGVjdENvbXBvbmVudDxUPixcbiAgICApIHt9XG5cbiAgICB0cmFuc2Zvcm0oaXRlbXM6IG51bGwsIGNvbXBvbmVudD86IHVua25vd24pOiBudWxsO1xuICAgIHRyYW5zZm9ybShpdGVtczogUmVhZG9ubHlBcnJheTxUPiwgY29tcG9uZW50PzogVHVpTXVsdGlTZWxlY3RDb21wb25lbnQ8VD4pOiBudWxsO1xuICAgIHRyYW5zZm9ybShcbiAgICAgICAgaXRlbXM6IFJlYWRvbmx5QXJyYXk8VD4gfCBudWxsLFxuICAgICAgICB7dmFsdWUsIGlkZW50aXR5TWF0Y2hlcn06IFR1aU11bHRpU2VsZWN0Q29tcG9uZW50PFQ+ID0gdGhpcy5jb21wb25lbnQsXG4gICAgKTogUmVhZG9ubHlBcnJheTxUPiB8IG51bGwge1xuICAgICAgICByZXR1cm4gaXRlbXMgJiYgdGhpcy5maWx0ZXIoaXRlbXMsIHZhbHVlLCBpZGVudGl0eU1hdGNoZXIpO1xuICAgIH1cblxuICAgIEB0dWlQdXJlXG4gICAgcHJpdmF0ZSBmaWx0ZXIoXG4gICAgICAgIGl0ZW1zOiBSZWFkb25seUFycmF5PFQ+LFxuICAgICAgICB2YWx1ZTogUmVhZG9ubHlBcnJheTxUPixcbiAgICAgICAgbWF0Y2hlcjogVHVpSWRlbnRpdHlNYXRjaGVyPFQ+LFxuICAgICk6IFJlYWRvbmx5QXJyYXk8VD4ge1xuICAgICAgICByZXR1cm4gaXRlbXMuZmlsdGVyKGl0ZW0gPT4gdmFsdWUuZXZlcnkoc2VsZWN0ZWQgPT4gIW1hdGNoZXIoc2VsZWN0ZWQsIGl0ZW0pKSk7XG4gICAgfVxufVxuIl19