import { DATE_TIME_SEPARATOR } from '@taiga-ui/kit/constants';
import { normalizeDateValue } from './create-auto-corrected-date-pipe';
import { tuiCreateAutoCorrectedTimePipe } from './create-auto-corrected-time-pipe';
export function tuiCreateAutoCorrectedDateTimePipe(config, timeMode) {
    const timePipe = tuiCreateAutoCorrectedTimePipe(timeMode);
    return value => {
        if (value.length < config.filler.length) {
            return { value };
        }
        const [date, time] = value.split(DATE_TIME_SEPARATOR);
        const formattedDate = normalizeDateValue(date, config);
        if (!time) {
            return { value: formattedDate };
        }
        const pipedTime = timePipe(time, {});
        if (!pipedTime || typeof pipedTime === 'string') {
            return false;
        }
        return {
            value: `${formattedDate}${DATE_TIME_SEPARATOR}${pipedTime.value}`,
            indexesOfPipedChars: !!pipedTime.indexesOfPipedChars
                ? pipedTime.indexesOfPipedChars.map(i => i + date.length + 2)
                : undefined,
        };
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLWF1dG8tY29ycmVjdGVkLWRhdGUtdGltZS1waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC91dGlscy9tYXNrLyIsInNvdXJjZXMiOlsiY3JlYXRlLWF1dG8tY29ycmVjdGVkLWRhdGUtdGltZS1waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBRzVELE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBQ3JFLE9BQU8sRUFBQyw4QkFBOEIsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBRWpGLE1BQU0sVUFBVSxrQ0FBa0MsQ0FDOUMsTUFBcUQsRUFDckQsUUFBcUI7SUFFckIsTUFBTSxRQUFRLEdBQUcsOEJBQThCLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFMUQsT0FBTyxLQUFLLENBQUMsRUFBRTtRQUNYLElBQUksS0FBSyxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRTtZQUNyQyxPQUFPLEVBQUMsS0FBSyxFQUFDLENBQUM7U0FDbEI7UUFFRCxNQUFNLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUV0RCxNQUFNLGFBQWEsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFFdkQsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNQLE9BQU8sRUFBQyxLQUFLLEVBQUUsYUFBYSxFQUFDLENBQUM7U0FDakM7UUFFRCxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsSUFBSSxFQUFFLEVBQVMsQ0FBQyxDQUFDO1FBRTVDLElBQUksQ0FBQyxTQUFTLElBQUksT0FBTyxTQUFTLEtBQUssUUFBUSxFQUFFO1lBQzdDLE9BQU8sS0FBSyxDQUFDO1NBQ2hCO1FBRUQsT0FBTztZQUNILEtBQUssRUFBRSxHQUFHLGFBQWEsR0FBRyxtQkFBbUIsR0FBRyxTQUFTLENBQUMsS0FBSyxFQUFFO1lBQ2pFLG1CQUFtQixFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsbUJBQW1CO2dCQUNoRCxDQUFDLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztnQkFDN0QsQ0FBQyxDQUFDLFNBQVM7U0FDbEIsQ0FBQztJQUNOLENBQUMsQ0FBQztBQUNOLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1R1aURheSwgVHVpVGltZU1vZGV9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlUZXh0TWFza1BpcGVIYW5kbGVyfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge0RBVEVfVElNRV9TRVBBUkFUT1J9IGZyb20gJ0B0YWlnYS11aS9raXQvY29uc3RhbnRzJztcbmltcG9ydCB7V2l0aERhdGVNYXNrUGlwZUNvbmZpZ30gZnJvbSAnQHRhaWdhLXVpL2tpdC9pbnRlcmZhY2VzJztcblxuaW1wb3J0IHtub3JtYWxpemVEYXRlVmFsdWV9IGZyb20gJy4vY3JlYXRlLWF1dG8tY29ycmVjdGVkLWRhdGUtcGlwZSc7XG5pbXBvcnQge3R1aUNyZWF0ZUF1dG9Db3JyZWN0ZWRUaW1lUGlwZX0gZnJvbSAnLi9jcmVhdGUtYXV0by1jb3JyZWN0ZWQtdGltZS1waXBlJztcblxuZXhwb3J0IGZ1bmN0aW9uIHR1aUNyZWF0ZUF1dG9Db3JyZWN0ZWREYXRlVGltZVBpcGUoXG4gICAgY29uZmlnOiBXaXRoRGF0ZU1hc2tQaXBlQ29uZmlnPFR1aURheSB8IG51bGwsIFR1aURheT4sXG4gICAgdGltZU1vZGU6IFR1aVRpbWVNb2RlLFxuKTogVHVpVGV4dE1hc2tQaXBlSGFuZGxlciB7XG4gICAgY29uc3QgdGltZVBpcGUgPSB0dWlDcmVhdGVBdXRvQ29ycmVjdGVkVGltZVBpcGUodGltZU1vZGUpO1xuXG4gICAgcmV0dXJuIHZhbHVlID0+IHtcbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA8IGNvbmZpZy5maWxsZXIubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4ge3ZhbHVlfTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IFtkYXRlLCB0aW1lXSA9IHZhbHVlLnNwbGl0KERBVEVfVElNRV9TRVBBUkFUT1IpO1xuXG4gICAgICAgIGNvbnN0IGZvcm1hdHRlZERhdGUgPSBub3JtYWxpemVEYXRlVmFsdWUoZGF0ZSwgY29uZmlnKTtcblxuICAgICAgICBpZiAoIXRpbWUpIHtcbiAgICAgICAgICAgIHJldHVybiB7dmFsdWU6IGZvcm1hdHRlZERhdGV9O1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgcGlwZWRUaW1lID0gdGltZVBpcGUodGltZSwge30gYXMgYW55KTtcblxuICAgICAgICBpZiAoIXBpcGVkVGltZSB8fCB0eXBlb2YgcGlwZWRUaW1lID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiBgJHtmb3JtYXR0ZWREYXRlfSR7REFURV9USU1FX1NFUEFSQVRPUn0ke3BpcGVkVGltZS52YWx1ZX1gLFxuICAgICAgICAgICAgaW5kZXhlc09mUGlwZWRDaGFyczogISFwaXBlZFRpbWUuaW5kZXhlc09mUGlwZWRDaGFyc1xuICAgICAgICAgICAgICAgID8gcGlwZWRUaW1lLmluZGV4ZXNPZlBpcGVkQ2hhcnMubWFwKGkgPT4gaSArIGRhdGUubGVuZ3RoICsgMilcbiAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZCxcbiAgICAgICAgfTtcbiAgICB9O1xufVxuIl19