import { TUI_FIRST_DAY, TuiDay, TuiDayRange } from '@taiga-ui/cdk';
import { TuiDayRangePeriod } from '@taiga-ui/kit/classes';
export function tuiCreateDefaultDayRangePeriods(periodTitles = [
    'For all the time',
    'Today',
    'Yesterday',
    'Current week',
    'Current month',
    'Previous month',
]) {
    const today = TuiDay.currentLocal();
    const yesterday = today.append({ day: -1 });
    const startOfWeek = today.append({ day: -today.dayOfWeek() });
    const endOfWeek = startOfWeek.append({ day: 6 });
    const startOfMonth = today.append({ day: 1 - today.day });
    const endOfMonth = startOfMonth.append({ month: 1, day: -1 });
    const startOfLastMonth = startOfMonth.append({ month: -1 });
    return [
        new TuiDayRangePeriod(new TuiDayRange(TUI_FIRST_DAY, today), periodTitles[0]),
        new TuiDayRangePeriod(new TuiDayRange(today, today), periodTitles[1]),
        new TuiDayRangePeriod(new TuiDayRange(yesterday, yesterday), periodTitles[2]),
        new TuiDayRangePeriod(new TuiDayRange(startOfWeek, endOfWeek), periodTitles[3]),
        new TuiDayRangePeriod(new TuiDayRange(startOfMonth, endOfMonth), periodTitles[4]),
        new TuiDayRangePeriod(new TuiDayRange(startOfLastMonth, startOfMonth.append({ day: -1 })), periodTitles[5]),
    ];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLWRlZmF1bHQtZGF5LXJhbmdlLXBlcmlvZHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkva2l0L3V0aWxzL21pc2NlbGxhbmVvdXMvIiwic291cmNlcyI6WyJjcmVhdGUtZGVmYXVsdC1kYXktcmFuZ2UtcGVyaW9kcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsYUFBYSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDakUsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFeEQsTUFBTSxVQUFVLCtCQUErQixDQUMzQyxlQUFpRTtJQUM3RCxrQkFBa0I7SUFDbEIsT0FBTztJQUNQLFdBQVc7SUFDWCxjQUFjO0lBQ2QsZUFBZTtJQUNmLGdCQUFnQjtDQUNuQjtJQUVELE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNwQyxNQUFNLFNBQVMsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztJQUMxQyxNQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUMsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxFQUFDLENBQUMsQ0FBQztJQUM1RCxNQUFNLFNBQVMsR0FBRyxXQUFXLENBQUMsTUFBTSxDQUFDLEVBQUMsR0FBRyxFQUFFLENBQUMsRUFBQyxDQUFDLENBQUM7SUFDL0MsTUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBQyxDQUFDLENBQUM7SUFDeEQsTUFBTSxVQUFVLEdBQUcsWUFBWSxDQUFDLE1BQU0sQ0FBQyxFQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztJQUM1RCxNQUFNLGdCQUFnQixHQUFHLFlBQVksQ0FBQyxNQUFNLENBQUMsRUFBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDO0lBRTFELE9BQU87UUFDSCxJQUFJLGlCQUFpQixDQUFDLElBQUksV0FBVyxDQUFDLGFBQWEsRUFBRSxLQUFLLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0UsSUFBSSxpQkFBaUIsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3JFLElBQUksaUJBQWlCLENBQUMsSUFBSSxXQUFXLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM3RSxJQUFJLGlCQUFpQixDQUFDLElBQUksV0FBVyxDQUFDLFdBQVcsRUFBRSxTQUFTLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0UsSUFBSSxpQkFBaUIsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxZQUFZLEVBQUUsVUFBVSxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pGLElBQUksaUJBQWlCLENBQ2pCLElBQUksV0FBVyxDQUFDLGdCQUFnQixFQUFFLFlBQVksQ0FBQyxNQUFNLENBQUMsRUFBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEVBQ2pFLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FDbEI7S0FDSixDQUFDO0FBQ04sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7VFVJX0ZJUlNUX0RBWSwgVHVpRGF5LCBUdWlEYXlSYW5nZX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1R1aURheVJhbmdlUGVyaW9kfSBmcm9tICdAdGFpZ2EtdWkva2l0L2NsYXNzZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gdHVpQ3JlYXRlRGVmYXVsdERheVJhbmdlUGVyaW9kcyhcbiAgICBwZXJpb2RUaXRsZXM6IFtzdHJpbmcsIHN0cmluZywgc3RyaW5nLCBzdHJpbmcsIHN0cmluZywgc3RyaW5nXSA9IFtcbiAgICAgICAgJ0ZvciBhbGwgdGhlIHRpbWUnLFxuICAgICAgICAnVG9kYXknLFxuICAgICAgICAnWWVzdGVyZGF5JyxcbiAgICAgICAgJ0N1cnJlbnQgd2VlaycsXG4gICAgICAgICdDdXJyZW50IG1vbnRoJyxcbiAgICAgICAgJ1ByZXZpb3VzIG1vbnRoJyxcbiAgICBdLFxuKTogUmVhZG9ubHlBcnJheTxUdWlEYXlSYW5nZVBlcmlvZD4ge1xuICAgIGNvbnN0IHRvZGF5ID0gVHVpRGF5LmN1cnJlbnRMb2NhbCgpO1xuICAgIGNvbnN0IHllc3RlcmRheSA9IHRvZGF5LmFwcGVuZCh7ZGF5OiAtMX0pO1xuICAgIGNvbnN0IHN0YXJ0T2ZXZWVrID0gdG9kYXkuYXBwZW5kKHtkYXk6IC10b2RheS5kYXlPZldlZWsoKX0pO1xuICAgIGNvbnN0IGVuZE9mV2VlayA9IHN0YXJ0T2ZXZWVrLmFwcGVuZCh7ZGF5OiA2fSk7XG4gICAgY29uc3Qgc3RhcnRPZk1vbnRoID0gdG9kYXkuYXBwZW5kKHtkYXk6IDEgLSB0b2RheS5kYXl9KTtcbiAgICBjb25zdCBlbmRPZk1vbnRoID0gc3RhcnRPZk1vbnRoLmFwcGVuZCh7bW9udGg6IDEsIGRheTogLTF9KTtcbiAgICBjb25zdCBzdGFydE9mTGFzdE1vbnRoID0gc3RhcnRPZk1vbnRoLmFwcGVuZCh7bW9udGg6IC0xfSk7XG5cbiAgICByZXR1cm4gW1xuICAgICAgICBuZXcgVHVpRGF5UmFuZ2VQZXJpb2QobmV3IFR1aURheVJhbmdlKFRVSV9GSVJTVF9EQVksIHRvZGF5KSwgcGVyaW9kVGl0bGVzWzBdKSxcbiAgICAgICAgbmV3IFR1aURheVJhbmdlUGVyaW9kKG5ldyBUdWlEYXlSYW5nZSh0b2RheSwgdG9kYXkpLCBwZXJpb2RUaXRsZXNbMV0pLFxuICAgICAgICBuZXcgVHVpRGF5UmFuZ2VQZXJpb2QobmV3IFR1aURheVJhbmdlKHllc3RlcmRheSwgeWVzdGVyZGF5KSwgcGVyaW9kVGl0bGVzWzJdKSxcbiAgICAgICAgbmV3IFR1aURheVJhbmdlUGVyaW9kKG5ldyBUdWlEYXlSYW5nZShzdGFydE9mV2VlaywgZW5kT2ZXZWVrKSwgcGVyaW9kVGl0bGVzWzNdKSxcbiAgICAgICAgbmV3IFR1aURheVJhbmdlUGVyaW9kKG5ldyBUdWlEYXlSYW5nZShzdGFydE9mTW9udGgsIGVuZE9mTW9udGgpLCBwZXJpb2RUaXRsZXNbNF0pLFxuICAgICAgICBuZXcgVHVpRGF5UmFuZ2VQZXJpb2QoXG4gICAgICAgICAgICBuZXcgVHVpRGF5UmFuZ2Uoc3RhcnRPZkxhc3RNb250aCwgc3RhcnRPZk1vbnRoLmFwcGVuZCh7ZGF5OiAtMX0pKSxcbiAgICAgICAgICAgIHBlcmlvZFRpdGxlc1s1XSxcbiAgICAgICAgKSxcbiAgICBdO1xufVxuIl19