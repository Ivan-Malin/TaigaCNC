import { __decorate, __param } from "tslib";
import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';
import { sizeBigger, TUI_TEXTFIELD_SIZE, TuiHostedDropdownComponent, TuiTextfieldSizeDirective, } from '@taiga-ui/core';
import { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus';
var TuiArrowComponent = /** @class */ (function () {
    function TuiArrowComponent(dropdown, textfieldSize) {
        this.dropdown = dropdown;
        this.textfieldSize = textfieldSize;
    }
    Object.defineProperty(TuiArrowComponent.prototype, "arrowIcon", {
        get: function () {
            return sizeBigger(this.textfieldSize.size)
                ? 'tuiIconChevronDownLarge'
                : 'tuiIconChevronDown';
        },
        enumerable: true,
        configurable: true
    });
    TuiArrowComponent.ctorParameters = function () { return [
        { type: TuiHostedDropdownComponent, decorators: [{ type: Inject, args: [TuiHostedDropdownComponent,] }] },
        { type: TuiTextfieldSizeDirective, decorators: [{ type: Inject, args: [TUI_TEXTFIELD_SIZE,] }] }
    ]; };
    TuiArrowComponent = __decorate([
        Component({
            selector: 'tui-arrow',
            template: "<tui-svg\n    class=\"icon\"\n    [class.icon_rotated]=\"dropdown.openChange | async\"\n    [src]=\"arrowIcon\"\n></tui-svg>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [".icon{transition-property:transform;transition-duration:.3s;transition-timing-function:ease-in-out;cursor:pointer}.icon_rotated{transform:rotate(180deg)}"]
        }),
        __param(0, Inject(TuiHostedDropdownComponent)),
        __param(1, Inject(TUI_TEXTFIELD_SIZE))
    ], TuiArrowComponent);
    return TuiArrowComponent;
}());
export { TuiArrowComponent };
export var TUI_ARROW = new PolymorpheusComponent(TuiArrowComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyb3cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL2Fycm93LyIsInNvdXJjZXMiOlsiYXJyb3cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6RSxPQUFPLEVBQ0gsVUFBVSxFQUNWLGtCQUFrQixFQUNsQiwwQkFBMEIsRUFDMUIseUJBQXlCLEdBQzVCLE1BQU0sZ0JBQWdCLENBQUM7QUFDeEIsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFRL0Q7SUFDSSwyQkFFYSxRQUFvQyxFQUU1QixhQUF3QztRQUZoRCxhQUFRLEdBQVIsUUFBUSxDQUE0QjtRQUU1QixrQkFBYSxHQUFiLGFBQWEsQ0FBMkI7SUFDMUQsQ0FBQztJQUVKLHNCQUFJLHdDQUFTO2FBQWI7WUFDSSxPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQztnQkFDdEMsQ0FBQyxDQUFDLHlCQUF5QjtnQkFDM0IsQ0FBQyxDQUFDLG9CQUFvQixDQUFDO1FBQy9CLENBQUM7OztPQUFBOztnQkFUc0IsMEJBQTBCLHVCQUQ1QyxNQUFNLFNBQUMsMEJBQTBCO2dCQUdGLHlCQUF5Qix1QkFEeEQsTUFBTSxTQUFDLGtCQUFrQjs7SUFKckIsaUJBQWlCO1FBTjdCLFNBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxXQUFXO1lBQ3JCLDBJQUFvQztZQUVwQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7U0FDbEQsQ0FBQztRQUdPLFdBQUEsTUFBTSxDQUFDLDBCQUEwQixDQUFDLENBQUE7UUFFbEMsV0FBQSxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQTtPQUp0QixpQkFBaUIsQ0FhN0I7SUFBRCx3QkFBQztDQUFBLEFBYkQsSUFhQztTQWJZLGlCQUFpQjtBQWU5QixNQUFNLENBQUMsSUFBTSxTQUFTLEdBQUcsSUFBSSxxQkFBcUIsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbmplY3R9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgICBzaXplQmlnZ2VyLFxuICAgIFRVSV9URVhURklFTERfU0laRSxcbiAgICBUdWlIb3N0ZWREcm9wZG93bkNvbXBvbmVudCxcbiAgICBUdWlUZXh0ZmllbGRTaXplRGlyZWN0aXZlLFxufSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge1BvbHltb3JwaGV1c0NvbXBvbmVudH0gZnJvbSAnQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktYXJyb3cnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9hcnJvdy50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9hcnJvdy5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFR1aUFycm93Q29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUdWlIb3N0ZWREcm9wZG93bkNvbXBvbmVudClcbiAgICAgICAgcmVhZG9ubHkgZHJvcGRvd246IFR1aUhvc3RlZERyb3Bkb3duQ29tcG9uZW50LFxuICAgICAgICBASW5qZWN0KFRVSV9URVhURklFTERfU0laRSlcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSB0ZXh0ZmllbGRTaXplOiBUdWlUZXh0ZmllbGRTaXplRGlyZWN0aXZlLFxuICAgICkge31cblxuICAgIGdldCBhcnJvd0ljb24oKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHNpemVCaWdnZXIodGhpcy50ZXh0ZmllbGRTaXplLnNpemUpXG4gICAgICAgICAgICA/ICd0dWlJY29uQ2hldnJvbkRvd25MYXJnZSdcbiAgICAgICAgICAgIDogJ3R1aUljb25DaGV2cm9uRG93bic7XG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgVFVJX0FSUk9XID0gbmV3IFBvbHltb3JwaGV1c0NvbXBvbmVudChUdWlBcnJvd0NvbXBvbmVudCk7XG4iXX0=