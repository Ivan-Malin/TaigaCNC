import { __decorate, __extends, __param } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, forwardRef, Inject, Input, Optional, Self, ViewChild, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiControl, setNativeFocused, TUI_FOCUSABLE_ITEM_ACCESSOR, tuiDefaultProp, tuiPure, } from '@taiga-ui/cdk';
import { TUI_DIGIT_REGEXP, TUI_ICONS_PATH, TuiPrimitiveTextfieldComponent, } from '@taiga-ui/core';
import { TUI_ARROW } from '@taiga-ui/kit/components/arrow';
import { TuiInputPhoneComponent } from '@taiga-ui/kit/components/input-phone';
import { FIXED_DROPDOWN_CONTROLLER_PROVIDER } from '@taiga-ui/kit/providers';
import { COUNTRIES } from './const/countries';
import { TuiCountryIsoCode } from './country-iso-code';
// @dynamic
var TuiInputPhoneInternationalComponent = /** @class */ (function (_super) {
    __extends(TuiInputPhoneInternationalComponent, _super);
    function TuiInputPhoneInternationalComponent(control, changeDetectorRef, iconsPath) {
        var _this = _super.call(this, control, changeDetectorRef) || this;
        _this.countryIsoCode = TuiCountryIsoCode.RU;
        _this.countries = [];
        _this.open = false;
        _this.arrow = TUI_ARROW;
        _this.staticPath = null;
        _this.staticPath = iconsPath('tuiIcon').replace('tuiIcon.svg#tuiIcon', '');
        return _this;
    }
    TuiInputPhoneInternationalComponent_1 = TuiInputPhoneInternationalComponent;
    Object.defineProperty(TuiInputPhoneInternationalComponent.prototype, "nativeFocusableElement", {
        get: function () {
            return this.inputPhoneComponent && !this.computedDisabled
                ? this.inputPhoneComponent.nativeFocusableElement
                : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiInputPhoneInternationalComponent.prototype, "focused", {
        get: function () {
            return ((!!this.primitiveTextfield && this.primitiveTextfield.focused) ||
                (!!this.inputPhoneComponent && this.inputPhoneComponent.focused));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiInputPhoneInternationalComponent.prototype, "inputPhoneCountryCode", {
        get: function () {
            return this.isoToCountryCode(this.countryIsoCode);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiInputPhoneInternationalComponent.prototype, "phoneMaskAfterCountryCode", {
        get: function () {
            var countryCode = this.isoToCountryCode(this.countryIsoCode);
            return this.calculateMaskAfterCountryCode(COUNTRIES[this.countryIsoCode].mask, countryCode);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TuiInputPhoneInternationalComponent.prototype, "countryFlagPath", {
        get: function () {
            return this.getFlagPath(this.countryIsoCode);
        },
        enumerable: true,
        configurable: true
    });
    TuiInputPhoneInternationalComponent.prototype.getFlagPath = function (code) {
        return "" + this.staticPath + code + ".png";
    };
    TuiInputPhoneInternationalComponent.prototype.getCountryName = function (isoCode) {
        return COUNTRIES[isoCode].name;
    };
    TuiInputPhoneInternationalComponent.prototype.onItemClick = function (isoCode) {
        this.open = false;
        this.countryIsoCode = isoCode;
        // recalculates mask inside inputPhone to prevent isoCode conflict
        this.changeDetectorRef.detectChanges();
        if (this.nativeFocusableElement) {
            setNativeFocused(this.nativeFocusableElement);
        }
    };
    TuiInputPhoneInternationalComponent.prototype.setDisabledState = function () {
        _super.prototype.setDisabledState.call(this);
        this.close();
    };
    TuiInputPhoneInternationalComponent.prototype.isoToCountryCode = function (isoCode) {
        return ('+' +
            COUNTRIES[isoCode].mask
                .split('')
                .filter(function (symbol) { return TUI_DIGIT_REGEXP.test(symbol); })
                .join(''));
    };
    TuiInputPhoneInternationalComponent.prototype.getFallbackValue = function () {
        return '';
    };
    TuiInputPhoneInternationalComponent.prototype.close = function () {
        this.open = false;
    };
    TuiInputPhoneInternationalComponent.prototype.calculateMaskAfterCountryCode = function (mask, countryCode) {
        return mask.replace(countryCode, '');
    };
    var TuiInputPhoneInternationalComponent_1;
    TuiInputPhoneInternationalComponent.ctorParameters = function () { return [
        { type: NgControl, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NgControl,] }] },
        { type: ChangeDetectorRef, decorators: [{ type: Inject, args: [ChangeDetectorRef,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [TUI_ICONS_PATH,] }] }
    ]; };
    __decorate([
        Input(),
        tuiDefaultProp()
    ], TuiInputPhoneInternationalComponent.prototype, "countryIsoCode", void 0);
    __decorate([
        Input()
    ], TuiInputPhoneInternationalComponent.prototype, "countries", void 0);
    __decorate([
        ViewChild(TuiInputPhoneComponent)
    ], TuiInputPhoneInternationalComponent.prototype, "inputPhoneComponent", void 0);
    __decorate([
        ViewChild(TuiPrimitiveTextfieldComponent)
    ], TuiInputPhoneInternationalComponent.prototype, "primitiveTextfield", void 0);
    __decorate([
        tuiPure
    ], TuiInputPhoneInternationalComponent.prototype, "isoToCountryCode", null);
    __decorate([
        tuiPure
    ], TuiInputPhoneInternationalComponent.prototype, "calculateMaskAfterCountryCode", null);
    TuiInputPhoneInternationalComponent = TuiInputPhoneInternationalComponent_1 = __decorate([
        Component({
            selector: 'tui-input-phone-international',
            template: "<tui-hosted-dropdown\n    class=\"hosted-dropdown\"\n    [content]=\"dropdown\"\n    [canOpen]=\"!readOnly\"\n    [(open)]=\"open\"\n>\n    <div tuiGroup>\n        <tui-primitive-textfield\n            tuiHostedDropdownHost\n            class=\"country-select tui-group__auto-width-item\"\n            [tuiTextfieldCustomContent]=\"countryValueContent\"\n            [tuiTextfieldLabelOutside]=\"true\"\n            [disabled]=\"disabled\"\n            [focusable]=\"focusable\"\n            [editable]=\"false\"\n            [iconContent]=\"arrow\"\n            [pseudoFocused]=\"open || null\"\n            [readOnly]=\"readOnly\"\n            [tuiHintContent]=\"null\"\n        ></tui-primitive-textfield>\n        <tui-input-phone\n            class=\"input-phone tui-group__auto-width-item\"\n            tuiTextfieldAutocomplete=\"off\"\n            [tuiTextfieldLabelOutside]=\"true\"\n            [formControl]=\"control\"\n            [focusable]=\"focusable\"\n            [countryCode]=\"inputPhoneCountryCode\"\n            [phoneMaskAfterCountryCode]=\"phoneMaskAfterCountryCode\"\n            [readOnly]=\"readOnly\"\n            [pseudoInvalid]=\"pseudoInvalid\"\n            [pseudoFocused]=\"pseudoFocused\"\n            [pseudoHovered]=\"pseudoHovered\"\n        >\n            {{inputPhoneCountryCode}}\n        </tui-input-phone>\n    </div>\n</tui-hosted-dropdown>\n\n<ng-template #dropdown>\n    <tui-data-list>\n        <button\n            *ngFor=\"let item of countries\"\n            tuiOption\n            (click)=\"onItemClick(item)\"\n        >\n            <img class=\"country-item-flag\" alt=\"\" [src]=\"getFlagPath(item)\" />\n            <span class=\"country-item-name\">{{getCountryName(item)}}</span>\n            <span class=\"country-item-code\">{{isoToCountryCode(item)}}</span>\n        </button>\n    </tui-data-list>\n</ng-template>\n\n<ng-template #countryValueContent>\n    <img\n        class=\"flag\"\n        [alt]=\"getCountryName(countryIsoCode)\"\n        [src]=\"countryFlagPath\"\n    />\n</ng-template>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            providers: [
                {
                    provide: TUI_FOCUSABLE_ITEM_ACCESSOR,
                    useExisting: forwardRef(function () { return TuiInputPhoneInternationalComponent_1; }),
                },
                FIXED_DROPDOWN_CONTROLLER_PROVIDER,
            ],
            styles: [":host{display:block}:host._disabled{pointer-events:none}.hosted-dropdown{display:block}.country-select{width:90px}.arrow-icon{transition-duration:.3s;transition-timing-function:ease-in-out;display:flex;width:24px;height:24px;align-items:center;justify-content:center;color:var(--tui-text-03);position:relative;box-sizing:border-box;cursor:pointer;transition-property:color,transform}.arrow-icon:hover{color:var(--tui-text-02)}:host._disabled .arrow-icon,:host._readonly .arrow-icon{pointer-events:none}:host[data-mode=onDark] .arrow-icon{color:var(--tui-text-03-night)}:host[data-mode=onDark] .arrow-icon:hover{color:var(--tui-text-01-night)}.arrow-icon_open{transform:rotate(180deg)}.input-phone{flex:1}.flag{width:28px;height:20px;margin-left:-8px}.country-item-flag{width:28px;height:20px}.country-item-name{margin-left:12px;margin-right:auto}.country-item-code{color:var(--tui-text-02);margin-right:4px}"]
        }),
        __param(0, Optional()),
        __param(0, Self()),
        __param(0, Inject(NgControl)),
        __param(1, Inject(ChangeDetectorRef)),
        __param(2, Inject(TUI_ICONS_PATH))
    ], TuiInputPhoneInternationalComponent);
    return TuiInputPhoneInternationalComponent;
}(AbstractTuiControl));
export { TuiInputPhoneInternationalComponent };
//# sourceMappingURL=data:application/json;base64,