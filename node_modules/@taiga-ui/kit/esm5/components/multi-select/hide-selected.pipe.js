import { __decorate, __param } from "tslib";
import { Inject, Optional, Pipe } from '@angular/core';
import { tuiPure } from '@taiga-ui/cdk';
import { TuiMultiSelectComponent } from './multi-select.component';
// TODO: Remove Optional and second argument when Angular is upgraded to 9+
var TuiHideSelectedPipe = /** @class */ (function () {
    function TuiHideSelectedPipe(component) {
        this.component = component;
    }
    TuiHideSelectedPipe.prototype.transform = function (items, _a) {
        var _b = _a === void 0 ? this.component : _a, value = _b.value, identityMatcher = _b.identityMatcher;
        return items && this.filter(items, value, identityMatcher);
    };
    TuiHideSelectedPipe.prototype.filter = function (items, value, matcher) {
        return items.filter(function (item) { return value.every(function (selected) { return !matcher(selected, item); }); });
    };
    TuiHideSelectedPipe.ctorParameters = function () { return [
        { type: TuiMultiSelectComponent, decorators: [{ type: Optional }, { type: Inject, args: [TuiMultiSelectComponent,] }] }
    ]; };
    __decorate([
        tuiPure
    ], TuiHideSelectedPipe.prototype, "filter", null);
    TuiHideSelectedPipe = __decorate([
        Pipe({
            name: 'tuiHideSelected',
            pure: false,
        }),
        __param(0, Optional()),
        __param(0, Inject(TuiMultiSelectComponent))
    ], TuiHideSelectedPipe);
    return TuiHideSelectedPipe;
}());
export { TuiHideSelectedPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlkZS1zZWxlY3RlZC5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRhaWdhLXVpL2tpdC9jb21wb25lbnRzL211bHRpLXNlbGVjdC8iLCJzb3VyY2VzIjpbImhpZGUtc2VsZWN0ZWQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFnQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQXFCLE9BQU8sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMxRCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUVqRSwyRUFBMkU7QUFLM0U7SUFDSSw2QkFHcUIsU0FBcUM7UUFBckMsY0FBUyxHQUFULFNBQVMsQ0FBNEI7SUFDdkQsQ0FBQztJQUlKLHVDQUFTLEdBQVQsVUFDSSxLQUE4QixFQUM5QixFQUFxRTtZQUFyRSx3Q0FBcUUsRUFBcEUsZ0JBQUssRUFBRSxvQ0FBZTtRQUV2QixPQUFPLEtBQUssSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQUdPLG9DQUFNLEdBQWQsVUFDSSxLQUF1QixFQUN2QixLQUF1QixFQUN2QixPQUE4QjtRQUU5QixPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsVUFBQSxJQUFJLElBQUksT0FBQSxLQUFLLENBQUMsS0FBSyxDQUFDLFVBQUEsUUFBUSxJQUFJLE9BQUEsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxFQUF4QixDQUF3QixDQUFDLEVBQWpELENBQWlELENBQUMsQ0FBQztJQUNuRixDQUFDOztnQkFuQitCLHVCQUF1Qix1QkFGbEQsUUFBUSxZQUNSLE1BQU0sU0FBQyx1QkFBdUI7O0lBY25DO1FBREMsT0FBTztxREFPUDtJQXZCUSxtQkFBbUI7UUFKL0IsSUFBSSxDQUFDO1lBQ0YsSUFBSSxFQUFFLGlCQUFpQjtZQUN2QixJQUFJLEVBQUUsS0FBSztTQUNkLENBQUM7UUFHTyxXQUFBLFFBQVEsRUFBRSxDQUFBO1FBQ1YsV0FBQSxNQUFNLENBQUMsdUJBQXVCLENBQUMsQ0FBQTtPQUgzQixtQkFBbUIsQ0F3Qi9CO0lBQUQsMEJBQUM7Q0FBQSxBQXhCRCxJQXdCQztTQXhCWSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdCwgT3B0aW9uYWwsIFBpcGUsIFBpcGVUcmFuc2Zvcm19IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlJZGVudGl0eU1hdGNoZXIsIHR1aVB1cmV9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlNdWx0aVNlbGVjdENvbXBvbmVudH0gZnJvbSAnLi9tdWx0aS1zZWxlY3QuY29tcG9uZW50JztcblxuLy8gVE9ETzogUmVtb3ZlIE9wdGlvbmFsIGFuZCBzZWNvbmQgYXJndW1lbnQgd2hlbiBBbmd1bGFyIGlzIHVwZ3JhZGVkIHRvIDkrXG5AUGlwZSh7XG4gICAgbmFtZTogJ3R1aUhpZGVTZWxlY3RlZCcsXG4gICAgcHVyZTogZmFsc2UsXG59KVxuZXhwb3J0IGNsYXNzIFR1aUhpZGVTZWxlY3RlZFBpcGU8VD4gaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQE9wdGlvbmFsKClcbiAgICAgICAgQEluamVjdChUdWlNdWx0aVNlbGVjdENvbXBvbmVudClcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBjb21wb25lbnQ6IFR1aU11bHRpU2VsZWN0Q29tcG9uZW50PFQ+LFxuICAgICkge31cblxuICAgIHRyYW5zZm9ybShpdGVtczogbnVsbCwgY29tcG9uZW50PzogdW5rbm93bik6IG51bGw7XG4gICAgdHJhbnNmb3JtKGl0ZW1zOiBSZWFkb25seUFycmF5PFQ+LCBjb21wb25lbnQ/OiBUdWlNdWx0aVNlbGVjdENvbXBvbmVudDxUPik6IG51bGw7XG4gICAgdHJhbnNmb3JtKFxuICAgICAgICBpdGVtczogUmVhZG9ubHlBcnJheTxUPiB8IG51bGwsXG4gICAgICAgIHt2YWx1ZSwgaWRlbnRpdHlNYXRjaGVyfTogVHVpTXVsdGlTZWxlY3RDb21wb25lbnQ8VD4gPSB0aGlzLmNvbXBvbmVudCxcbiAgICApOiBSZWFkb25seUFycmF5PFQ+IHwgbnVsbCB7XG4gICAgICAgIHJldHVybiBpdGVtcyAmJiB0aGlzLmZpbHRlcihpdGVtcywgdmFsdWUsIGlkZW50aXR5TWF0Y2hlcik7XG4gICAgfVxuXG4gICAgQHR1aVB1cmVcbiAgICBwcml2YXRlIGZpbHRlcihcbiAgICAgICAgaXRlbXM6IFJlYWRvbmx5QXJyYXk8VD4sXG4gICAgICAgIHZhbHVlOiBSZWFkb25seUFycmF5PFQ+LFxuICAgICAgICBtYXRjaGVyOiBUdWlJZGVudGl0eU1hdGNoZXI8VD4sXG4gICAgKTogUmVhZG9ubHlBcnJheTxUPiB7XG4gICAgICAgIHJldHVybiBpdGVtcy5maWx0ZXIoaXRlbSA9PiB2YWx1ZS5ldmVyeShzZWxlY3RlZCA9PiAhbWF0Y2hlcihzZWxlY3RlZCwgaXRlbSkpKTtcbiAgICB9XG59XG4iXX0=