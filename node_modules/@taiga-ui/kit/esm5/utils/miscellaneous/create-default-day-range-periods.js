import { TUI_FIRST_DAY, TuiDay, TuiDayRange } from '@taiga-ui/cdk';
import { TuiDayRangePeriod } from '@taiga-ui/kit/classes';
export function tuiCreateDefaultDayRangePeriods(periodTitles) {
    if (periodTitles === void 0) { periodTitles = [
        'For all the time',
        'Today',
        'Yesterday',
        'Current week',
        'Current month',
        'Previous month',
    ]; }
    var today = TuiDay.currentLocal();
    var yesterday = today.append({ day: -1 });
    var startOfWeek = today.append({ day: -today.dayOfWeek() });
    var endOfWeek = startOfWeek.append({ day: 6 });
    var startOfMonth = today.append({ day: 1 - today.day });
    var endOfMonth = startOfMonth.append({ month: 1, day: -1 });
    var startOfLastMonth = startOfMonth.append({ month: -1 });
    return [
        new TuiDayRangePeriod(new TuiDayRange(TUI_FIRST_DAY, today), periodTitles[0]),
        new TuiDayRangePeriod(new TuiDayRange(today, today), periodTitles[1]),
        new TuiDayRangePeriod(new TuiDayRange(yesterday, yesterday), periodTitles[2]),
        new TuiDayRangePeriod(new TuiDayRange(startOfWeek, endOfWeek), periodTitles[3]),
        new TuiDayRangePeriod(new TuiDayRange(startOfMonth, endOfMonth), periodTitles[4]),
        new TuiDayRangePeriod(new TuiDayRange(startOfLastMonth, startOfMonth.append({ day: -1 })), periodTitles[5]),
    ];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLWRlZmF1bHQtZGF5LXJhbmdlLXBlcmlvZHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGFpZ2EtdWkva2l0L3V0aWxzL21pc2NlbGxhbmVvdXMvIiwic291cmNlcyI6WyJjcmVhdGUtZGVmYXVsdC1kYXktcmFuZ2UtcGVyaW9kcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsYUFBYSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDakUsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFeEQsTUFBTSxVQUFVLCtCQUErQixDQUMzQyxZQU9DO0lBUEQsNkJBQUEsRUFBQTtRQUNJLGtCQUFrQjtRQUNsQixPQUFPO1FBQ1AsV0FBVztRQUNYLGNBQWM7UUFDZCxlQUFlO1FBQ2YsZ0JBQWdCO0tBQ25CO0lBRUQsSUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3BDLElBQU0sU0FBUyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQzFDLElBQU0sV0FBVyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBQyxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLEVBQUMsQ0FBQyxDQUFDO0lBQzVELElBQU0sU0FBUyxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUMsRUFBQyxHQUFHLEVBQUUsQ0FBQyxFQUFDLENBQUMsQ0FBQztJQUMvQyxJQUFNLFlBQVksR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFDLENBQUMsQ0FBQztJQUN4RCxJQUFNLFVBQVUsR0FBRyxZQUFZLENBQUMsTUFBTSxDQUFDLEVBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDO0lBQzVELElBQU0sZ0JBQWdCLEdBQUcsWUFBWSxDQUFDLE1BQU0sQ0FBQyxFQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUM7SUFFMUQsT0FBTztRQUNILElBQUksaUJBQWlCLENBQUMsSUFBSSxXQUFXLENBQUMsYUFBYSxFQUFFLEtBQUssQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM3RSxJQUFJLGlCQUFpQixDQUFDLElBQUksV0FBVyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDckUsSUFBSSxpQkFBaUIsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdFLElBQUksaUJBQWlCLENBQUMsSUFBSSxXQUFXLENBQUMsV0FBVyxFQUFFLFNBQVMsQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMvRSxJQUFJLGlCQUFpQixDQUFDLElBQUksV0FBVyxDQUFDLFlBQVksRUFBRSxVQUFVLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDakYsSUFBSSxpQkFBaUIsQ0FDakIsSUFBSSxXQUFXLENBQUMsZ0JBQWdCLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxFQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsRUFDakUsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUNsQjtLQUNKLENBQUM7QUFDTixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUVUlfRklSU1RfREFZLCBUdWlEYXksIFR1aURheVJhbmdlfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VHVpRGF5UmFuZ2VQZXJpb2R9IGZyb20gJ0B0YWlnYS11aS9raXQvY2xhc3Nlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiB0dWlDcmVhdGVEZWZhdWx0RGF5UmFuZ2VQZXJpb2RzKFxuICAgIHBlcmlvZFRpdGxlczogW3N0cmluZywgc3RyaW5nLCBzdHJpbmcsIHN0cmluZywgc3RyaW5nLCBzdHJpbmddID0gW1xuICAgICAgICAnRm9yIGFsbCB0aGUgdGltZScsXG4gICAgICAgICdUb2RheScsXG4gICAgICAgICdZZXN0ZXJkYXknLFxuICAgICAgICAnQ3VycmVudCB3ZWVrJyxcbiAgICAgICAgJ0N1cnJlbnQgbW9udGgnLFxuICAgICAgICAnUHJldmlvdXMgbW9udGgnLFxuICAgIF0sXG4pOiBSZWFkb25seUFycmF5PFR1aURheVJhbmdlUGVyaW9kPiB7XG4gICAgY29uc3QgdG9kYXkgPSBUdWlEYXkuY3VycmVudExvY2FsKCk7XG4gICAgY29uc3QgeWVzdGVyZGF5ID0gdG9kYXkuYXBwZW5kKHtkYXk6IC0xfSk7XG4gICAgY29uc3Qgc3RhcnRPZldlZWsgPSB0b2RheS5hcHBlbmQoe2RheTogLXRvZGF5LmRheU9mV2VlaygpfSk7XG4gICAgY29uc3QgZW5kT2ZXZWVrID0gc3RhcnRPZldlZWsuYXBwZW5kKHtkYXk6IDZ9KTtcbiAgICBjb25zdCBzdGFydE9mTW9udGggPSB0b2RheS5hcHBlbmQoe2RheTogMSAtIHRvZGF5LmRheX0pO1xuICAgIGNvbnN0IGVuZE9mTW9udGggPSBzdGFydE9mTW9udGguYXBwZW5kKHttb250aDogMSwgZGF5OiAtMX0pO1xuICAgIGNvbnN0IHN0YXJ0T2ZMYXN0TW9udGggPSBzdGFydE9mTW9udGguYXBwZW5kKHttb250aDogLTF9KTtcblxuICAgIHJldHVybiBbXG4gICAgICAgIG5ldyBUdWlEYXlSYW5nZVBlcmlvZChuZXcgVHVpRGF5UmFuZ2UoVFVJX0ZJUlNUX0RBWSwgdG9kYXkpLCBwZXJpb2RUaXRsZXNbMF0pLFxuICAgICAgICBuZXcgVHVpRGF5UmFuZ2VQZXJpb2QobmV3IFR1aURheVJhbmdlKHRvZGF5LCB0b2RheSksIHBlcmlvZFRpdGxlc1sxXSksXG4gICAgICAgIG5ldyBUdWlEYXlSYW5nZVBlcmlvZChuZXcgVHVpRGF5UmFuZ2UoeWVzdGVyZGF5LCB5ZXN0ZXJkYXkpLCBwZXJpb2RUaXRsZXNbMl0pLFxuICAgICAgICBuZXcgVHVpRGF5UmFuZ2VQZXJpb2QobmV3IFR1aURheVJhbmdlKHN0YXJ0T2ZXZWVrLCBlbmRPZldlZWspLCBwZXJpb2RUaXRsZXNbM10pLFxuICAgICAgICBuZXcgVHVpRGF5UmFuZ2VQZXJpb2QobmV3IFR1aURheVJhbmdlKHN0YXJ0T2ZNb250aCwgZW5kT2ZNb250aCksIHBlcmlvZFRpdGxlc1s0XSksXG4gICAgICAgIG5ldyBUdWlEYXlSYW5nZVBlcmlvZChcbiAgICAgICAgICAgIG5ldyBUdWlEYXlSYW5nZShzdGFydE9mTGFzdE1vbnRoLCBzdGFydE9mTW9udGguYXBwZW5kKHtkYXk6IC0xfSkpLFxuICAgICAgICAgICAgcGVyaW9kVGl0bGVzWzVdLFxuICAgICAgICApLFxuICAgIF07XG59XG4iXX0=