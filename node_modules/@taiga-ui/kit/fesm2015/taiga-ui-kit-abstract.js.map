{"version":3,"file":"taiga-ui-kit-abstract.js","sources":["ng://@taiga-ui/kit/abstract/input-slider.ts","ng://@taiga-ui/kit/abstract/slider/slider.ts","ng://@taiga-ui/kit/abstract/taiga-ui-kit-abstract.ts"],"sourcesContent":["import {Directive, HostBinding, Input} from '@angular/core';\nimport {\n    AbstractTuiControl,\n    clamp,\n    round,\n    tuiDefaultProp,\n    TuiInputMode,\n    TuiMapper,\n} from '@taiga-ui/cdk';\nimport {\n    maskedNumberStringToNumber,\n    TuiBrightness,\n    tuiCreateAutoCorrectedNumberPipe,\n    tuiCreateNumberMask,\n    TuiModeDirective,\n    TuiPluralize,\n    TuiSizeL,\n    TuiTextMaskOptions,\n    TuiWithOptionalMinMax,\n} from '@taiga-ui/core';\nimport {TUI_FLOATING_PRECISION} from '@taiga-ui/kit/constants';\nimport {TuiKeySteps} from '@taiga-ui/kit/types';\n\nexport function quantumAssertion(quantum: number): boolean {\n    return quantum > 0;\n}\n\n/**\n * @internal\n */\n@Directive()\nexport abstract class AbstractTuiInputSlider<T>\n    extends AbstractTuiControl<T>\n    implements TuiWithOptionalMinMax<number> {\n    @Input()\n    @tuiDefaultProp()\n    min = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    max = Infinity;\n\n    @Input()\n    @tuiDefaultProp()\n    minLabel = '';\n\n    @Input()\n    @tuiDefaultProp()\n    maxLabel = '';\n\n    @Input()\n    @tuiDefaultProp()\n    pluralize: TuiPluralize | null = null;\n\n    @Input()\n    @tuiDefaultProp()\n    segmentsPluralize: TuiPluralize | null = null;\n\n    @Input()\n    @tuiDefaultProp()\n    segments = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    steps = 0;\n\n    @Input()\n    @tuiDefaultProp(quantumAssertion, 'Quantum must be positive')\n    quantum = 1;\n\n    @Input()\n    @tuiDefaultProp()\n    keySteps: TuiKeySteps | null = null;\n\n    @Input()\n    @HostBinding('attr.data-tui-host-size')\n    size: TuiSizeL = 'l';\n\n    mask: TuiMapper<number, TuiTextMaskOptions> = (quantum: number, min: number) => ({\n        mask: tuiCreateNumberMask({\n            allowNegative: min < 0,\n            allowDecimal: !Number.isInteger(quantum),\n        }),\n        pipe: tuiCreateAutoCorrectedNumberPipe(),\n        guide: false,\n    });\n\n    protected abstract readonly modeDirective: TuiModeDirective | null;\n\n    @HostBinding('class._segmented')\n    get segmented(): boolean {\n        return this.segments > 0;\n    }\n\n    get hasPlaceholder(): boolean {\n        return this.size === 'l';\n    }\n\n    get inputMode(): TuiInputMode {\n        return Number.isInteger(this.quantum)\n            ? TuiInputMode.Numeric\n            : TuiInputMode.Decimal;\n    }\n\n    get length(): number {\n        return this.max - this.min;\n    }\n\n    get computedSteps(): number {\n        return this.steps || this.length / this.quantum;\n    }\n\n    get step(): number {\n        return this.length / this.computedSteps;\n    }\n\n    @HostBinding('attr.data-mode')\n    get hostMode(): TuiBrightness | null {\n        return this.modeDirective && this.modeDirective.mode;\n    }\n\n    abstract get showMinLabel(): boolean;\n\n    abstract get showMaxLabel(): boolean;\n\n    onHovered(hovered: boolean) {\n        this.updateHovered(hovered);\n    }\n\n    isPluralized(pluralize: TuiPluralize | null): pluralize is TuiPluralize {\n        return pluralize !== null && pluralize.length === 3;\n    }\n\n    protected valueGuard(value: number): number {\n        return this.quantum\n            ? clamp(\n                  round(\n                      Math.round(value / this.quantum) * this.quantum,\n                      TUI_FLOATING_PRECISION,\n                  ),\n                  this.min,\n                  this.max,\n              )\n            : clamp(value, this.min, this.max);\n    }\n\n    protected capInputValue(value: string, max: number = this.max): number | null {\n        const capped = Math.min(maskedNumberStringToNumber(value), max);\n\n        if (this.min < 0 && capped < this.min) {\n            return this.min;\n        }\n\n        return isNaN(capped) || capped < this.min ? null : capped;\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    HostBinding,\n    Inject,\n    Input,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    clamp,\n    quantize,\n    round,\n    setNativeFocused,\n    tuiDefaultProp,\n    TuiEventWith,\n    TuiNativeFocusableElement,\n    typedFromEvent,\n} from '@taiga-ui/cdk';\nimport {TuiPluralize, TuiSizeS, TuiWithOptionalMinMax} from '@taiga-ui/core';\nimport {TUI_FLOATING_PRECISION} from '@taiga-ui/kit/constants';\nimport {TUI_FROM_TO_TEXTS} from '@taiga-ui/kit/tokens';\nimport {TuiKeySteps} from '@taiga-ui/kit/types';\nimport {Observable, race, Subject} from 'rxjs';\nimport {map, switchMap, takeUntil} from 'rxjs/operators';\n\nexport const SLIDER_KEYBOARD_STEP = 0.05;\nexport const DOT_WIDTH: {[key: string]: number} = {\n    s: 8,\n    m: 16,\n};\n\n/**\n * @awful TODO: refactor\n * @internal\n * @dynamic\n */\n@Directive()\nexport abstract class AbstractTuiSlider<T>\n    extends AbstractTuiControl<T>\n    implements TuiWithOptionalMinMax<number> {\n    @Input()\n    @tuiDefaultProp()\n    min = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    max = Infinity;\n\n    @Input()\n    @tuiDefaultProp()\n    segments = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    steps = 0;\n\n    @Input()\n    @tuiDefaultProp()\n    pluralize: TuiPluralize | null = null;\n\n    @Input()\n    @HostBinding('attr.data-tui-host-size')\n    @tuiDefaultProp()\n    size: TuiSizeS = 'm';\n\n    @Input()\n    @tuiDefaultProp()\n    keySteps: TuiKeySteps | null = null;\n\n    focusVisibleLeft = false;\n\n    focusVisibleRight = false;\n\n    @ViewChild('dotLeft')\n    protected dotLeft?: ElementRef<TuiNativeFocusableElement>;\n\n    @ViewChild('dotRight')\n    protected dotRight?: ElementRef<TuiNativeFocusableElement>;\n\n    // @bad TODO: handle pointer events instead of mouse and touch events\n    private pointerDown$ = new Subject<\n        TuiEventWith<MouseEvent | TouchEvent, HTMLElement>\n    >();\n\n    protected constructor(\n        ngControl: NgControl | null,\n        changeDetectorRef: ChangeDetectorRef,\n        private readonly documentRef: Document,\n        @Inject(TUI_FROM_TO_TEXTS)\n        readonly fromToTexts$: Observable<[string, string]>,\n    ) {\n        super(ngControl, changeDetectorRef);\n    }\n\n    @HostBinding('class._segmented')\n    get segmented(): boolean {\n        return this.segments > 0;\n    }\n\n    get discrete(): boolean {\n        return this.steps > 0;\n    }\n\n    get length(): number {\n        return this.max - this.min;\n    }\n\n    get isLeftFocusable(): boolean {\n        return !this.disabled && this.focusable && this.right !== 100;\n    }\n\n    get isRightFocusable(): boolean {\n        return !this.disabled && this.focusable && this.left !== 100;\n    }\n\n    abstract get left(): number;\n\n    abstract get right(): number;\n\n    ngOnInit() {\n        super.ngOnInit();\n\n        const mouseMoves$ = typedFromEvent(this.documentRef, 'mousemove');\n        const mouseUps$ = typedFromEvent(this.documentRef, 'mouseup');\n        const touchMoves$ = typedFromEvent(this.documentRef, 'touchmove');\n        const touchEnds$ = typedFromEvent(this.documentRef, 'touchend');\n        let isPointerDownRight: boolean;\n\n        this.pointerDown$\n            .pipe(\n                map((event: MouseEvent | TouchEvent) => {\n                    const rect = (event.currentTarget as HTMLElement).getBoundingClientRect();\n                    const clientX =\n                        event instanceof MouseEvent\n                            ? event.clientX\n                            : event.touches[0].clientX;\n                    const fraction = clamp(\n                        this.getFractionFromEvents(rect, clientX),\n                        0,\n                        1,\n                    );\n                    const deltaLeft = fraction * 100 - this.left;\n                    const deltaRight = fraction * 100 - 100 + this.right;\n\n                    isPointerDownRight =\n                        Math.abs(deltaLeft) > Math.abs(deltaRight) ||\n                        deltaRight > 0 ||\n                        (this.left === 0 && this.right === 100);\n\n                    const calibratedFraction = clamp(\n                        this.getCalibratedFractionFromEvents(\n                            rect,\n                            clientX,\n                            isPointerDownRight,\n                        ),\n                        0,\n                        1,\n                    );\n                    const value = this.getValueFromFraction(\n                        this.fractionGuard(calibratedFraction),\n                    );\n\n                    this.processValue(value, isPointerDownRight);\n                    this.processFocus(isPointerDownRight);\n\n                    return rect;\n                }),\n                switchMap(rect =>\n                    race([touchMoves$, mouseMoves$]).pipe(\n                        map((event: any) =>\n                            this.getCalibratedFractionFromEvents(\n                                rect,\n                                event instanceof MouseEvent\n                                    ? event.clientX\n                                    : event.touches[0].clientX,\n                                isPointerDownRight,\n                            ),\n                        ),\n                        takeUntil(race([mouseUps$, touchEnds$])),\n                    ),\n                ),\n                map(fraction => this.fractionGuard(fraction)),\n            )\n            .subscribe(fraction => {\n                this.processValue(\n                    this.getValueFromFraction(fraction),\n                    isPointerDownRight,\n                );\n            });\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.pointerDown$.complete();\n    }\n\n    onMouseDown(event: TuiEventWith<MouseEvent, HTMLElement>) {\n        if (this.disabled) {\n            return;\n        }\n\n        event.preventDefault();\n        this.pointerDown$.next(event);\n    }\n\n    onTouchStart(event: TuiEventWith<TouchEvent, HTMLElement>) {\n        if (this.disabled) {\n            return;\n        }\n\n        event.preventDefault();\n        this.pointerDown$.next(event);\n    }\n\n    isPluralized(pluralize: TuiPluralize | null): pluralize is TuiPluralize {\n        return pluralize !== null && pluralize.length === 3;\n    }\n\n    decrement(right: boolean) {\n        this.processStep(false, right);\n    }\n\n    increment(right: boolean) {\n        this.processStep(true, right);\n    }\n\n    getSegmentLabel(segment: number): number {\n        return round(this.getValueFromFraction(segment / this.segments), 2);\n    }\n\n    getSegmentPrefix(segment: number, texts: [string, string]): string {\n        if (this.segments !== 1) {\n            return '';\n        }\n\n        if (segment === 0) {\n            return `${texts[0]} `;\n        }\n\n        return `${texts[1]} `;\n    }\n\n    onActiveZone(active: boolean) {\n        this.updateFocused(active);\n    }\n\n    onLeftFocusVisible(focusVisible: boolean) {\n        this.focusVisibleLeft = focusVisible;\n    }\n\n    onRightFocusVisible(focusVisible: boolean) {\n        this.focusVisibleRight = focusVisible;\n    }\n\n    protected abstract processValue(value: number, right?: boolean): void;\n\n    protected abstract processStep(increment: boolean, right?: boolean): void;\n\n    protected getFractionFromValue(value: number): number {\n        const fraction = (value - this.min) / this.length;\n\n        return this.keySteps !== null\n            ? this.fractionValueKeyStepConverter(value, false)\n            : clamp(Number.isFinite(fraction) ? fraction : 1, 0, 1);\n    }\n\n    protected getValueFromFraction(fraction: number): number {\n        return this.keySteps !== null\n            ? this.fractionValueKeyStepConverter(fraction, true)\n            : round(\n                  this.fractionGuard(fraction) * this.length + this.min,\n                  TUI_FLOATING_PRECISION,\n              );\n    }\n\n    protected getCalibratedFractionFromEvents(\n        rect: ClientRect,\n        clientX: number,\n        _: boolean,\n    ): number {\n        return this.getFractionFromEvents(rect, clientX);\n    }\n\n    private processFocus(right: boolean) {\n        if (!this.focusable || !this.dotRight || !this.dotLeft) {\n            return;\n        }\n\n        if (right) {\n            setNativeFocused(this.dotRight.nativeElement);\n        } else {\n            setNativeFocused(this.dotLeft.nativeElement);\n        }\n    }\n\n    /**\n     * Function for converting the fullness of the slider to a value and vice versa\n     * taking into account the steps of linear dependence.\n     *\n     * @param value passed value\n     * @param isFraction translation is carried out from fullness to value\n     */\n    private fractionValueKeyStepConverter(value: number, isFraction: boolean): number {\n        const steps = [[0, this.min]].concat(this.keySteps as TuiKeySteps, [\n            [100, this.max],\n        ]);\n\n        let prevFraction = 0;\n        let nextFraction = 100;\n        let prevValue = this.min;\n        let nextValue = this.max;\n\n        for (let i = 1; i < steps.length; i++) {\n            if (\n                (isFraction && steps[i][0] / 100 > value) ||\n                (!isFraction && steps[i][1] > value)\n            ) {\n                prevFraction = steps[i - 1][0] || 0;\n                nextFraction = steps[i][0];\n                prevValue = steps[i - 1][1];\n                nextValue = steps[i][1];\n                break;\n            }\n        }\n\n        const deltaFraction = nextFraction - prevFraction;\n        const deltaValue = nextValue - prevValue;\n\n        return isFraction\n            ? round(\n                  ((value * 100 - prevFraction) / deltaFraction) * deltaValue + prevValue,\n                  TUI_FLOATING_PRECISION,\n              )\n            : clamp(\n                  ((value - prevValue) / deltaValue) * deltaFraction + prevFraction,\n                  0,\n                  100,\n              ) / 100;\n    }\n\n    private fractionGuard(fraction: number): number {\n        return this.discrete\n            ? clamp(quantize(fraction, 1 / this.steps), 0, 1)\n            : clamp(fraction, 0, 1);\n    }\n\n    private getFractionFromEvents(rect: ClientRect, clientX: number): number {\n        const value = clientX - rect.left - DOT_WIDTH[this.size] / 2;\n        const total = rect.width - DOT_WIDTH[this.size];\n\n        return round(value / total, TUI_FLOATING_PRECISION);\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}