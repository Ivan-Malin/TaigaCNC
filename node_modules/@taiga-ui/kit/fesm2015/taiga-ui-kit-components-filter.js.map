{"version":3,"file":"taiga-ui-kit-components-filter.js","sources":["ng://@taiga-ui/kit/components/filter/filter.component.ts","ng://@taiga-ui/kit/components/filter/filter.module.ts","ng://@taiga-ui/kit/components/filter/taiga-ui-kit-components-filter.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    Self,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiMultipleControl,\n    ALWAYS_FALSE_HANDLER,\n    isNativeFocusedIn,\n    TUI_DEFAULT_IDENTITY_MATCHER,\n    TUI_DEFAULT_STRINGIFY,\n    TuiBooleanHandler,\n    TuiContextWithImplicit,\n    tuiDefaultProp,\n    TuiHandler,\n    TuiIdentityMatcher,\n    tuiPure,\n} from '@taiga-ui/cdk';\nimport {TuiSizeL, TuiSizeS} from '@taiga-ui/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nconst TUI_DEFAULT_CONTENT_STRINGIFY: PolymorpheusContent<\n    TuiContextWithImplicit<any>\n> = item => TUI_DEFAULT_STRINGIFY(item.$implicit);\n\n// @bad TODO: Add active zone to track focus\n@Component({\n    selector: 'tui-filter',\n    templateUrl: './filter.template.html',\n    styleUrls: ['./filter.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiFilterComponent<T> extends AbstractTuiMultipleControl<T> {\n    @Input()\n    @tuiDefaultProp()\n    identityMatcher: TuiIdentityMatcher<T> = TUI_DEFAULT_IDENTITY_MATCHER;\n\n    @Input()\n    @tuiDefaultProp()\n    items: ReadonlyArray<T> = [];\n\n    @Input()\n    @HostBinding('attr.data-tui-host-size')\n    @tuiDefaultProp()\n    size: TuiSizeS | TuiSizeL = 'm';\n\n    @Input()\n    @tuiDefaultProp()\n    content: PolymorpheusContent<any> = TUI_DEFAULT_CONTENT_STRINGIFY;\n\n    @Input()\n    @tuiDefaultProp()\n    badgeHandler: TuiHandler<T, number> = item => Number(item);\n\n    @Input()\n    @tuiDefaultProp()\n    disabledItemHandler: TuiBooleanHandler<T> = ALWAYS_FALSE_HANDLER;\n\n    @Output()\n    readonly toggledItem = new EventEmitter<T>();\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLElement>,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get focused(): boolean {\n        return isNativeFocusedIn(this.elementRef.nativeElement);\n    }\n\n    @tuiPure\n    getItemContentContext($implicit: T): TuiContextWithImplicit<T> {\n        return {\n            $implicit,\n        };\n    }\n\n    onCheckbox(value: boolean, item: T) {\n        this.toggledItem.emit(item);\n        this.updateValue(\n            value\n                ? [...this.value, item]\n                : this.value.filter(arrItem => !this.identityMatcher(arrItem, item)),\n        );\n    }\n\n    isCheckboxEnabled(item: T): boolean {\n        return this.value.some(arrItem => this.identityMatcher(arrItem, item));\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TuiBadgeModule} from '@taiga-ui/kit/components/badge';\nimport {TuiCheckboxBlockModule} from '@taiga-ui/kit/components/checkbox-block';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiFilterComponent} from './filter.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PolymorpheusModule,\n        TuiCheckboxBlockModule,\n        TuiBadgeModule,\n        FormsModule,\n    ],\n    declarations: [TuiFilterComponent],\n    exports: [TuiFilterComponent],\n})\nexport class TuiFilterModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}