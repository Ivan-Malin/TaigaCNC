{"version":3,"file":"taiga-ui-kit-components-input-copy.js","sources":["ng://@taiga-ui/kit/components/input-copy/input-copy.component.ts","ng://@taiga-ui/kit/components/input-copy/input-copy.module.ts","ng://@taiga-ui/kit/components/input-copy/taiga-ui-kit-components-input-copy.ts"],"sourcesContent":["import {DOCUMENT} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    forwardRef,\n    HostBinding,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiNativeFocusableElement,\n    tuiPure,\n} from '@taiga-ui/cdk';\nimport {\n    TUI_TEXTFIELD_SIZE,\n    TuiDirection,\n    TuiHintMode,\n    TuiPrimitiveTextfieldComponent,\n    TuiTextfieldSizeDirective,\n} from '@taiga-ui/core';\nimport {TUI_COPY_TEXTS} from '@taiga-ui/kit/tokens';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {merge, Observable, of, Subject, timer} from 'rxjs';\nimport {mapTo, startWith, switchMap} from 'rxjs/operators';\n\n// @dynamic\n@Component({\n    selector: 'tui-input-copy',\n    templateUrl: './input-copy.template.html',\n    styleUrls: ['./input-copy.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiInputCopyComponent),\n        },\n    ],\n})\nexport class TuiInputCopyComponent\n    extends AbstractTuiControl<string>\n    implements TuiFocusableElementAccessor {\n    @Input()\n    @tuiDefaultProp()\n    successMessage: PolymorpheusContent = '';\n\n    @Input()\n    @tuiDefaultProp()\n    messageDirection: TuiDirection = 'bottom-left';\n\n    @Input()\n    @tuiDefaultProp()\n    messageMode: TuiHintMode | null = null;\n\n    private readonly copy$ = new Subject<void>();\n\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(DOCUMENT) private readonly documentRef: Document,\n        @Inject(TUI_TEXTFIELD_SIZE)\n        private readonly textfieldSize: TuiTextfieldSizeDirective,\n        @Inject(TUI_COPY_TEXTS) private readonly copyTexts$: Observable<[string, string]>,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    @HostBinding('class._has-value')\n    get hasValue(): boolean {\n        return !!this.value;\n    }\n\n    @tuiPure\n    get hintText$(): Observable<PolymorpheusContent> {\n        return this.copyTexts$.pipe(\n            switchMap(texts =>\n                this.copy$.pipe(\n                    switchMap(() =>\n                        merge(\n                            of(this.successMessage || texts[1]),\n                            timer(3000).pipe(mapTo(texts[0])),\n                        ),\n                    ),\n                    startWith(texts[0]),\n                ),\n            ),\n        );\n    }\n\n    get nativeFocusableElement(): TuiNativeFocusableElement | null {\n        return this.computedDisabled || !this.textfield\n            ? null\n            : this.textfield.nativeFocusableElement;\n    }\n\n    get focused(): boolean {\n        return !!this.textfield && this.textfield.focused;\n    }\n\n    get icon(): string {\n        return this.textfieldSize.size === 's' ? 'tuiIconCopy' : 'tuiIconCopyLarge';\n    }\n\n    onValueChange(value: string) {\n        this.updateValue(value);\n    }\n\n    onFocused(focused: boolean) {\n        this.updateFocused(focused);\n    }\n\n    onHovered(hovered: boolean) {\n        this.updateHovered(hovered);\n    }\n\n    onPressed(pressed: boolean) {\n        this.updatePressed(pressed);\n    }\n\n    copy() {\n        if (!this.textfield || !this.textfield.nativeFocusableElement) {\n            return;\n        }\n\n        this.textfield.nativeFocusableElement.select();\n        this.documentRef.execCommand('copy');\n        this.copy$.next();\n    }\n\n    protected getFallbackValue(): string {\n        return '';\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {\n    TuiHintModule,\n    TuiNotificationsModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n} from '@taiga-ui/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\nimport {TuiInputCopyComponent} from './input-copy.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PolymorpheusModule,\n        TuiSvgModule,\n        TuiHintModule,\n        TuiPrimitiveTextfieldModule,\n        TuiNotificationsModule,\n    ],\n    declarations: [TuiInputCopyComponent],\n    exports: [TuiInputCopyComponent],\n})\nexport class TuiInputCopyModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}