{"version":3,"file":"taiga-ui-kit-components-input-number.js","sources":["ng://@taiga-ui/kit/components/input-number/input-number.component.ts","ng://@taiga-ui/kit/components/input-number/input-number.module.ts","ng://@taiga-ui/kit/components/input-number/taiga-ui-kit-components-input-number.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiNullableControl,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiInputMode,\n    TuiMapper,\n} from '@taiga-ui/cdk';\nimport {\n    formatNumber,\n    maskedMoneyValueIsEmpty,\n    maskedNumberStringToNumber,\n    tuiCreateAutoCorrectedNumberPipe,\n    tuiCreateNumberMask,\n    TuiDecimal,\n    TuiPrimitiveTextfieldComponent,\n    TuiTextMaskOptions,\n} from '@taiga-ui/core';\n\nconst DEFAULT_MAX_LENGTH = 18;\n\n// @dynamic\n@Component({\n    selector: 'tui-input-number',\n    templateUrl: './input-number.template.html',\n    styleUrls: ['./input-number.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiInputNumberComponent),\n        },\n    ],\n})\nexport class TuiInputNumberComponent\n    extends AbstractTuiNullableControl<number>\n    implements TuiFocusableElementAccessor {\n    @Input()\n    @tuiDefaultProp()\n    min = -Infinity;\n\n    @Input()\n    @tuiDefaultProp()\n    max = Infinity;\n\n    @Input()\n    @tuiDefaultProp()\n    decimal: TuiDecimal = TuiDecimal.NotZero;\n\n    @Input()\n    @tuiDefaultProp()\n    precision = 2;\n\n    @Input()\n    @tuiDefaultProp()\n    postfix = '';\n\n    mask: TuiMapper<boolean, TuiTextMaskOptions> = (\n        allowNegative: boolean,\n        decimal: TuiDecimal,\n        precision: number,\n        nativeFocusableElement: HTMLInputElement | null,\n    ) => ({\n        mask: tuiCreateNumberMask({\n            allowNegative: allowNegative,\n            allowDecimal: decimal !== 'never',\n            decimalLimit: precision,\n            requireDecimal: decimal === 'always',\n        }),\n        pipe: tuiCreateAutoCorrectedNumberPipe(\n            decimal === 'always' ? precision : 0,\n            ',',\n            nativeFocusableElement || undefined,\n        ),\n        guide: false,\n    });\n\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly primitiveTextfield?: TuiPrimitiveTextfieldComponent;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return !this.primitiveTextfield || this.computedDisabled\n            ? null\n            : this.primitiveTextfield.nativeFocusableElement;\n    }\n\n    get focused(): boolean {\n        return !!this.primitiveTextfield && this.primitiveTextfield.focused;\n    }\n\n    get isNegativeAllowed(): boolean {\n        return this.min < 0;\n    }\n\n    get inputMode(): TuiInputMode {\n        return this.decimal === 'never' ? TuiInputMode.Numeric : TuiInputMode.Decimal;\n    }\n\n    get calculatedMaxLength(): number {\n        return (\n            DEFAULT_MAX_LENGTH +\n            (this.decimal !== TuiDecimal.Never && this.nativeValue.includes(',')\n                ? this.precision + 1\n                : 0)\n        );\n    }\n\n    get formattedValue(): string {\n        const value = this.value || 0;\n        const absValue = Math.abs(value);\n        const hasFraction = absValue % 1 > 0;\n        let limit = this.decimal === 'always' || hasFraction ? this.precision : 0;\n\n        const fraction = hasFraction\n            ? value.toString().split('.')[1].substr(0, this.precision)\n            : '';\n\n        if (this.focused && this.decimal !== 'always') {\n            limit = fraction.length;\n        }\n\n        return formatNumber(value, limit);\n    }\n\n    get computedValue(): string {\n        if (this.focused || !this.isNativeValueInLimit) {\n            return this.nativeValue;\n        }\n\n        if (this.value === null) {\n            return maskedMoneyValueIsEmpty(this.nativeValue) ? this.nativeValue : '';\n        }\n\n        return this.formattedValue;\n    }\n\n    onValue(value: string) {\n        if (maskedMoneyValueIsEmpty(value)) {\n            this.updateValue(null);\n\n            return;\n        }\n\n        if (this.isNativeValueNotFinished) {\n            return;\n        }\n\n        const capped = this.absoluteCapInputValue(value);\n\n        if (capped === null || isNaN(capped)) {\n            return;\n        }\n\n        this.updateValue(capped);\n\n        if (capped !== maskedNumberStringToNumber(value)) {\n            this.nativeValue = this.formattedValue;\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        if (event.key !== ',' && event.key !== '.') {\n            return;\n        }\n\n        if (this.decimal === 'never') {\n            event.preventDefault();\n\n            return;\n        }\n\n        if (this.nativeValue.includes(',')) {\n            event.preventDefault();\n            this.setCaretAfterComma();\n        }\n    }\n\n    onFocused(focused: boolean) {\n        this.updateFocused(focused);\n\n        if (focused) {\n            return;\n        }\n\n        const nativeNumberValue = maskedNumberStringToNumber(this.nativeValue);\n\n        if (isNaN(nativeNumberValue)) {\n            this.clear();\n\n            return;\n        }\n\n        const clamped = Math.min(this.max, Math.max(this.min, nativeNumberValue));\n\n        this.updateValue(clamped);\n        this.nativeValue = this.formattedValue;\n    }\n\n    onHovered(hovered: boolean) {\n        this.updateHovered(hovered);\n    }\n\n    onPressed(pressed: boolean) {\n        this.updatePressed(pressed);\n    }\n\n    private get isNativeValueInLimit(): boolean {\n        if (this.nativeValue === '') {\n            return true;\n        }\n\n        const nativeNumberValue = maskedNumberStringToNumber(this.nativeValue);\n\n        return nativeNumberValue >= this.min && nativeNumberValue <= this.max;\n    }\n\n    private get isNativeValueNotFinished(): boolean {\n        const nativeNumberValue = maskedNumberStringToNumber(this.nativeValue);\n\n        return nativeNumberValue < 0\n            ? nativeNumberValue > this.max\n            : nativeNumberValue < this.min;\n    }\n\n    private get nativeValue(): string {\n        return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';\n    }\n\n    private set nativeValue(value: string) {\n        if (!this.primitiveTextfield || !this.nativeFocusableElement) {\n            return;\n        }\n\n        this.primitiveTextfield.value = value;\n        this.nativeFocusableElement.value = value;\n    }\n\n    private clear() {\n        this.nativeValue = '';\n        this.updateValue(null);\n    }\n\n    private absoluteCapInputValue(inputValue: string): number | null {\n        const value = maskedNumberStringToNumber(inputValue);\n        const capped = value < 0 ? Math.max(this.min, value) : Math.min(value, this.max);\n        const ineligibleValue = isNaN(capped) || capped < this.min || capped > this.max;\n\n        return ineligibleValue ? null : capped;\n    }\n\n    private setCaretAfterComma() {\n        if (!this.nativeFocusableElement) {\n            return;\n        }\n\n        const afterCommaPosition = this.nativeValue.length - this.precision;\n\n        this.nativeFocusableElement.setSelectionRange(\n            afterCommaPosition,\n            afterCommaPosition,\n        );\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {TuiMapperPipeModule} from '@taiga-ui/cdk';\nimport {TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule} from '@taiga-ui/core';\nimport {TextMaskModule} from 'angular2-text-mask';\nimport {TuiInputNumberComponent} from './input-number.component';\n\n@NgModule({\n    imports: [\n        TextMaskModule,\n        TuiMapperPipeModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n    ],\n    declarations: [TuiInputNumberComponent],\n    exports: [TuiInputNumberComponent],\n})\nexport class TuiInputNumberModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}