{"version":3,"file":"taiga-ui-kit-components-input-time.js","sources":["ng://@taiga-ui/kit/components/input-time/input-time.component.ts","ng://@taiga-ui/kit/components/input-time/input-time.module.ts","ng://@taiga-ui/kit/components/input-time/taiga-ui-kit-components-input-time.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiNullableControl,\n    ALWAYS_FALSE_HANDLER,\n    isNativeFocused,\n    setNativeFocused,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    TUI_STRICT_MATCHER,\n    TuiBooleanHandler,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    tuiPure,\n    TuiTime,\n    TuiTimeLike,\n    TuiTimeMode,\n} from '@taiga-ui/cdk';\nimport {\n    sizeBigger,\n    TUI_TEXTFIELD_SIZE,\n    TuiPrimitiveTextfieldComponent,\n    TuiSizeL,\n    TuiSizeS,\n    TuiTextfieldSizeDirective,\n    TuiTextMaskOptions,\n} from '@taiga-ui/core';\nimport {FIXED_DROPDOWN_CONTROLLER_PROVIDER} from '@taiga-ui/kit/providers';\nimport {TUI_TIME_TEXTS} from '@taiga-ui/kit/tokens';\nimport {\n    tuiCreateAutoCorrectedTimePipe,\n    tuiCreateTimeMask,\n} from '@taiga-ui/kit/utils/mask';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n// @dynamic\n@Component({\n    selector: 'tui-input-time',\n    templateUrl: './input-time.template.html',\n    styleUrls: ['./input-time.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiInputTimeComponent),\n        },\n        FIXED_DROPDOWN_CONTROLLER_PROVIDER,\n    ],\n})\nexport class TuiInputTimeComponent\n    extends AbstractTuiNullableControl<TuiTime>\n    implements TuiFocusableElementAccessor {\n    @Input()\n    @tuiDefaultProp()\n    disabledItemHandler: TuiBooleanHandler<TuiTime> = ALWAYS_FALSE_HANDLER;\n\n    @Input()\n    @tuiDefaultProp()\n    items: ReadonlyArray<TuiTime> = [];\n\n    @Input()\n    @tuiDefaultProp()\n    itemSize: TuiSizeS | TuiSizeL = 'm';\n\n    @Input()\n    @tuiDefaultProp()\n    strict = false;\n\n    @Input()\n    @tuiDefaultProp()\n    mode: TuiTimeMode = 'HH:MM';\n\n    open = false;\n\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(TUI_TEXTFIELD_SIZE)\n        private readonly textfieldSize: TuiTextfieldSizeDirective,\n        @Inject(TUI_TIME_TEXTS)\n        private readonly timeTexts$: Observable<Record<TuiTimeMode, string>>,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return this.textfield ? this.textfield.nativeFocusableElement : null;\n    }\n\n    get focused(): boolean {\n        return isNativeFocused(this.nativeFocusableElement);\n    }\n\n    get filtered(): ReadonlyArray<TuiTime> {\n        return this.filter(this.items, this.mode, this.computedSearch);\n    }\n\n    get textMaskOptions(): TuiTextMaskOptions {\n        return this.calculateMask(this.mode);\n    }\n\n    get computedValue(): string {\n        return this.value ? this.value.toString(this.mode) : this.nativeValue;\n    }\n\n    get computedSearch(): string {\n        return this.computedValue.length !== this.mode.length ? this.computedValue : '';\n    }\n\n    get interactive(): boolean {\n        return !this.disabled && !this.readOnly;\n    }\n\n    get innerPseudoFocused(): boolean | null {\n        if (this.pseudoFocused === false) {\n            return false;\n        }\n\n        if (this.open || this.computedFocused) {\n            return true;\n        }\n\n        return null;\n    }\n\n    get icon(): string {\n        return sizeBigger(this.textfieldSize.size) ? 'tuiIconTimeLarge' : 'tuiIconTime';\n    }\n\n    get nativeValue(): string {\n        return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';\n    }\n\n    set nativeValue(value: string) {\n        if (!this.nativeFocusableElement) {\n            return;\n        }\n\n        this.nativeFocusableElement.value = value;\n    }\n\n    @tuiPure\n    getFiller$(mode: TuiTimeMode): Observable<string> {\n        return this.timeTexts$.pipe(map(texts => texts[mode]));\n    }\n\n    onValueChange(value: string) {\n        this.open = !!this.items.length;\n\n        if (value && this.control) {\n            this.control.updateValueAndValidity();\n        }\n\n        const match = this.getMatch(value);\n\n        if (match !== undefined) {\n            this.updateValue(match);\n\n            return;\n        }\n\n        if (value.length !== this.mode.length) {\n            this.updateValue(null);\n\n            return;\n        }\n\n        const time = TuiTime.fromString(value);\n\n        this.updateValue(this.strict ? this.findNearestTimeFromItems(time) : time);\n    }\n\n    onFocused(focused: boolean) {\n        this.updateFocused(focused);\n\n        if (\n            focused ||\n            this.value !== null ||\n            this.nativeValue === '' ||\n            this.mode === 'HH:MM'\n        ) {\n            return;\n        }\n\n        const parsedTime = TuiTime.fromString(this.nativeValue);\n\n        this.updateValue(parsedTime);\n\n        setTimeout(() => {\n            if (this.nativeValue.endsWith('.') || this.nativeValue.endsWith(':')) {\n                this.nativeValue = this.nativeValue.slice(0, -1);\n            }\n        });\n    }\n\n    onHovered(hovered: boolean) {\n        this.updateHovered(hovered);\n    }\n\n    onArrowUp(event: KeyboardEvent) {\n        if (this.items.length) {\n            return;\n        }\n\n        this.processArrow(event, 1);\n    }\n\n    onArrowDown(event: KeyboardEvent) {\n        if (this.items.length) {\n            return;\n        }\n\n        this.processArrow(event, -1);\n    }\n\n    onMenuClick(item: TuiTime) {\n        this.focusInput();\n        this.updateValue(item);\n    }\n\n    onOpen(open: boolean) {\n        this.open = open;\n    }\n\n    writeValue(value: TuiTime | null) {\n        super.writeValue(value);\n        this.nativeValue = value ? this.computedValue : '';\n    }\n\n    private findNearestTimeFromItems(value: TuiTime): TuiTime | null {\n        return this.items.reduce((previous, current) =>\n            Math.abs(current.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds()) <\n            Math.abs(previous.toAbsoluteMilliseconds() - value.toAbsoluteMilliseconds())\n                ? current\n                : previous,\n        );\n    }\n\n    private getMatch(value: string): TuiTime | undefined {\n        return this.items.find(item => TUI_STRICT_MATCHER(item, value));\n    }\n\n    private close() {\n        this.open = false;\n    }\n\n    private processArrow(event: KeyboardEvent, shift: -1 | 1) {\n        const {target} = event;\n\n        if (this.readOnly || !(target instanceof HTMLInputElement)) {\n            return;\n        }\n\n        const selectionStart = target.selectionStart || 0;\n\n        this.shiftTime(this.calculateShift(selectionStart, shift));\n\n        target.setSelectionRange(selectionStart, selectionStart);\n        event.preventDefault();\n    }\n\n    private calculateShift(selectionStart: number, shift: number): TuiTimeLike {\n        if (selectionStart <= 2) {\n            return {hours: shift};\n        }\n\n        if (selectionStart <= 5) {\n            return {minutes: shift};\n        }\n\n        if (selectionStart <= 8) {\n            return {seconds: shift};\n        }\n\n        return {ms: shift};\n    }\n\n    private shiftTime(shift: TuiTimeLike) {\n        if (this.value === null) {\n            return;\n        }\n\n        const increasedTime = this.value.shift(shift);\n\n        // Manual update so we can set caret position properly\n        this.nativeValue = increasedTime.toString(this.mode);\n        this.updateValue(increasedTime);\n    }\n\n    private focusInput(preventScroll: boolean = false) {\n        if (this.nativeFocusableElement) {\n            setNativeFocused(this.nativeFocusableElement, true, preventScroll);\n            this.close();\n        }\n    }\n\n    @tuiPure\n    private calculateMask(mode: TuiTimeMode): TuiTextMaskOptions {\n        return {\n            mask: tuiCreateTimeMask(mode),\n            pipe: tuiCreateAutoCorrectedTimePipe(mode),\n            guide: false,\n        };\n    }\n\n    @tuiPure\n    private filter(\n        items: ReadonlyArray<TuiTime>,\n        mode: TuiTimeMode,\n        search: string,\n    ): ReadonlyArray<TuiTime> {\n        return items.filter(item => item.toString(mode).includes(search));\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {\n    TuiDataListModule,\n    TuiHostedDropdownModule,\n    TuiPrimitiveTextfieldModule,\n} from '@taiga-ui/core';\nimport {TextMaskModule} from 'angular2-text-mask';\nimport {TuiInputTimeComponent} from './input-time.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TextMaskModule,\n        TuiDataListModule,\n        TuiHostedDropdownModule,\n        TuiPrimitiveTextfieldModule,\n    ],\n    declarations: [TuiInputTimeComponent],\n    exports: [TuiInputTimeComponent],\n})\nexport class TuiInputTimeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}