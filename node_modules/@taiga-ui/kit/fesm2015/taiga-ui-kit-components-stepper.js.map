{"version":3,"file":"taiga-ui-kit-components-stepper.js","sources":["ng://@taiga-ui/kit/components/stepper/stepper.component.ts","ng://@taiga-ui/kit/components/stepper/step/step.component.ts","ng://@taiga-ui/kit/components/stepper/stepper.module.ts","ng://@taiga-ui/kit/components/stepper/taiga-ui-kit-components-stepper.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    HostListener,\n    Input,\n    Output,\n    QueryList,\n} from '@angular/core';\nimport {\n    EMPTY_QUERY,\n    getOriginalArrayFromQueryList,\n    itemsQueryListObservable,\n    moveFocus,\n    tuiDefaultProp,\n    tuiPure,\n} from '@taiga-ui/cdk';\nimport {TuiOrientation} from '@taiga-ui/core';\nimport {Observable} from 'rxjs';\nimport {delay} from 'rxjs/operators';\nimport {TuiStepComponent} from './step/step.component';\n\n@Component({\n    selector: 'tui-stepper, nav[tuiStepper]',\n    templateUrl: './stepper.template.html',\n    styleUrls: ['./stepper.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'tui-zero-scrollbar',\n    },\n})\nexport class TuiStepperComponent {\n    @Input()\n    @HostBinding('attr.data-orientation')\n    @tuiDefaultProp()\n    orientation: TuiOrientation = TuiOrientation.Horizontal;\n\n    @Input()\n    @tuiDefaultProp()\n    activeItemIndex = 0;\n\n    @Output()\n    readonly activeItemIndexChange = new EventEmitter<number>();\n\n    @ContentChildren(forwardRef(() => TuiStepComponent), {read: ElementRef})\n    private readonly steps: QueryList<ElementRef<HTMLElement>> = EMPTY_QUERY;\n\n    @tuiPure\n    get changes$(): Observable<unknown> {\n        // Delay is required to trigger change detection after steps are rendered\n        // so they can update their \"active\" status\n        return itemsQueryListObservable(this.steps).pipe(delay(0));\n    }\n\n    indexOf(step: HTMLElement): number {\n        return getOriginalArrayFromQueryList(this.steps).findIndex(\n            ({nativeElement}) => nativeElement === step,\n        );\n    }\n\n    isActive(index: number): boolean {\n        return index === this.activeItemIndex;\n    }\n\n    activate(index: number) {\n        if (this.activeItemIndex === index) {\n            return;\n        }\n\n        this.activeItemIndex = index;\n        this.activeItemIndexChange.emit(index);\n    }\n\n    @HostListener('keydown.arrowRight', ['$event', '1'])\n    @HostListener('keydown.arrowLeft', ['$event', '-1'])\n    onHorizontal(event: Event, step: number) {\n        if (this.orientation !== TuiOrientation.Horizontal || !event.target) {\n            return;\n        }\n\n        event.preventDefault();\n        this.moveFocus(event.target, step);\n    }\n\n    @HostListener('keydown.arrowDown', ['$event', '1'])\n    @HostListener('keydown.arrowUp', ['$event', '-1'])\n    onVertical(event: Event, step: number) {\n        if (this.orientation !== TuiOrientation.Vertical || !event.target) {\n            return;\n        }\n\n        event.preventDefault();\n        this.moveFocus(event.target, step);\n    }\n\n    private moveFocus(current: EventTarget, step: number) {\n        const steps = getOriginalArrayFromQueryList(this.steps).map(\n            ({nativeElement}) => nativeElement,\n        );\n\n        moveFocus(steps.indexOf(current as HTMLElement), steps, step);\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    HostBinding,\n    HostListener,\n    Inject,\n    Input,\n} from '@angular/core';\nimport {\n    identity,\n    tuiDefaultProp,\n    TuiDestroyService,\n    TuiFocusVisibleService,\n} from '@taiga-ui/cdk';\nimport {TuiOrientation, TuiRouterLinkActiveService} from '@taiga-ui/core';\nimport {TuiStepState} from '@taiga-ui/kit/enums';\nimport {Observable} from 'rxjs';\nimport {filter} from 'rxjs/operators';\nimport {TuiStepperComponent} from '../stepper.component';\n\n@Component({\n    selector:\n        'button[tuiStep], a[tuiStep]:not([routerLink]), a[tuiStep][routerLink][routerLinkActive]',\n    templateUrl: './step.template.html',\n    styleUrls: ['./step.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [TuiDestroyService, TuiRouterLinkActiveService, TuiFocusVisibleService],\n    host: {\n        type: 'button',\n    },\n})\nexport class TuiStepComponent {\n    @Input()\n    @HostBinding('attr.data-state')\n    @tuiDefaultProp()\n    state = TuiStepState.Normal;\n\n    @Input()\n    @tuiDefaultProp()\n    icon = '';\n\n    @HostBinding('class._focus-visible')\n    focusVisible = false;\n\n    constructor(\n        @Inject(TuiFocusVisibleService) focusVisible$: TuiFocusVisibleService,\n        @Inject(TuiRouterLinkActiveService) routerLinkActive$: Observable<boolean>,\n        @Inject(TuiStepperComponent) private readonly stepper: TuiStepperComponent,\n        @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLElement>,\n    ) {\n        routerLinkActive$.pipe(filter(identity)).subscribe(() => {\n            this.activate();\n        });\n\n        focusVisible$.subscribe(visible => {\n            this.focusVisible = visible;\n        });\n    }\n\n    @HostBinding('class._active')\n    get isActive(): boolean {\n        return this.stepper.isActive(this.index);\n    }\n\n    @HostBinding('class._vertical')\n    get isVertical(): boolean {\n        return this.stepper.orientation === TuiOrientation.Vertical;\n    }\n\n    @HostBinding('tabIndex')\n    get tabIndex(): number {\n        return this.isActive ? 0 : -1;\n    }\n\n    get index(): number {\n        return this.stepper.indexOf(this.elementRef.nativeElement);\n    }\n\n    @HostListener('click')\n    activate() {\n        this.stepper.activate(this.index);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiSvgModule} from '@taiga-ui/core';\nimport {TuiStepComponent} from './step/step.component';\nimport {TuiStepperComponent} from './stepper.component';\n\n@NgModule({\n    imports: [CommonModule, TuiSvgModule],\n    declarations: [TuiStepperComponent, TuiStepComponent],\n    exports: [TuiStepperComponent, TuiStepComponent],\n})\nexport class TuiStepperModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}