{"version":3,"file":"taiga-ui-kit-components-field-error.js","sources":["ng://@taiga-ui/kit/components/field-error/field-error.component.ts","ng://@taiga-ui/kit/components/field-error/field-error.module.ts","ng://@taiga-ui/kit/components/field-error/taiga-ui-kit-components-field-error.ts"],"sourcesContent":["import {\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Self,\n} from '@angular/core';\nimport {\n    AbstractControl,\n    FormArrayName,\n    FormGroupDirective,\n    FormGroupName,\n    NgControl,\n} from '@angular/forms';\nimport {tuiAssert, tuiRequiredSetter, TuiValidationError} from '@taiga-ui/cdk';\nimport {tuiFadeIn, tuiHeightCollapse} from '@taiga-ui/core';\nimport {TUI_VALIDATION_ERRORS} from '@taiga-ui/kit/tokens';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\n// TODO: Refactor\n// @dynamic\n@Component({\n    selector: 'tui-field-error',\n    // @bad TODO: find a way to get 'touched' state change\n    // https://github.com/angular/angular/issues/10887\n    // changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './field-error.template.html',\n    styleUrls: ['./field-error.style.less'],\n    animations: [tuiHeightCollapse, tuiFadeIn],\n})\nexport class TuiFieldErrorComponent implements OnInit, OnDestroy {\n    @Input()\n    @tuiRequiredSetter()\n    set order(value: readonly string[]) {\n        this.errorsOrder = value;\n        this.updateErrorText();\n    }\n\n    private firstError: TuiValidationError | null = null;\n    private errorsOrder: readonly string[] = [];\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        private ngControl: NgControl | null,\n        @Optional()\n        @Self()\n        @Inject(FormArrayName)\n        private formArrayName: FormArrayName | null,\n        @Optional()\n        @Self()\n        @Inject(FormGroupName)\n        private formGroupName: FormGroupName | null,\n        @Optional()\n        @Self()\n        @Inject(FormGroupDirective)\n        private formGroup: FormGroupDirective | null,\n        @Inject(ChangeDetectorRef) private changeDetectorRef: ChangeDetectorRef,\n        @Inject(TUI_VALIDATION_ERRORS)\n        private readonly validationErrors: Record<string, PolymorpheusContent>,\n    ) {\n        tuiAssert.assert(\n            !!this.ngControl,\n            `NgControl not injected in ${this.constructor.name}!` +\n                ' Use [(ngModel)] or [formControl] or formControlName for correct work.',\n        );\n\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n\n    ngOnInit() {\n        const control = this.control;\n\n        if (!control) {\n            return;\n        }\n\n        // Temporary workaround until issue with async validators will be resolved.\n        // https://github.com/angular/angular/issues/13200\n        if (control.asyncValidator) {\n            control.updateValueAndValidity();\n        }\n\n        this.updateErrorText();\n\n        control.statusChanges.pipe(takeUntil(this.destroy$)).subscribe(() => {\n            this.updateErrorText();\n        });\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    get computedError(): TuiValidationError | null {\n        return this.invalid && this.touched && this.firstError ? this.firstError : null;\n    }\n\n    get invalid(): boolean {\n        const control = this.control;\n\n        return control && control.invalid !== null ? control.invalid : false;\n    }\n\n    get touched(): boolean {\n        const control = this.control;\n\n        return control && control.touched !== null ? control.touched : false;\n    }\n\n    get control(): AbstractControl | null {\n        if (this.ngControl) {\n            return this.ngControl.control;\n        }\n\n        if (this.formArrayName) {\n            return this.formArrayName.control;\n        }\n\n        if (this.formGroupName) {\n            return this.formGroupName.control;\n        }\n\n        if (this.formGroup) {\n            return this.formGroup.control;\n        }\n\n        return null;\n    }\n\n    registerOnChange() {\n        this.markForCheck();\n    }\n\n    registerOnTouched() {\n        this.markForCheck();\n    }\n\n    setDisabledState() {\n        this.markForCheck();\n    }\n\n    writeValue() {\n        this.markForCheck();\n    }\n\n    private get firstErrorIdByOrder(): string | null {\n        const firstErrorId =\n            this.errorsOrder &&\n            this.errorsOrder.find(errorId => !!this.controlErrors[errorId]);\n\n        return firstErrorId || null;\n    }\n\n    private get firstErrorId(): string | null {\n        const errorIds = Object.keys(this.controlErrors);\n\n        return errorIds[0];\n    }\n\n    private get controlErrors(): {[key: string]: any} {\n        const control = this.control;\n\n        return (control && control.errors) || {};\n    }\n\n    private updateErrorText() {\n        this.firstError = this.getErrorText();\n    }\n\n    private getErrorText(): TuiValidationError | null {\n        const firstErrorId = this.firstErrorIdByOrder || this.firstErrorId;\n        const firstError = firstErrorId && this.controlErrors[firstErrorId];\n\n        // @bad TODO: Remove firstError.message check after everybody migrates to TuiValidationError\n        if (\n            firstError &&\n            (firstError instanceof TuiValidationError ||\n                typeof firstError.message === 'string')\n        ) {\n            return firstError;\n        }\n\n        return firstErrorId\n            ? new TuiValidationError(this.validationErrors[firstErrorId], firstError)\n            : null;\n    }\n\n    private markForCheck() {\n        this.changeDetectorRef.markForCheck();\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {TuiErrorModule} from '@taiga-ui/core';\nimport {TuiFieldErrorComponent} from './field-error.component';\n\n@NgModule({\n    imports: [CommonModule, ReactiveFormsModule, TuiErrorModule],\n    declarations: [TuiFieldErrorComponent],\n    exports: [TuiFieldErrorComponent],\n})\nexport class TuiFieldErrorModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}