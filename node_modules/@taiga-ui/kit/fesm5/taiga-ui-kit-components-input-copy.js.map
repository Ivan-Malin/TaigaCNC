{"version":3,"file":"taiga-ui-kit-components-input-copy.js","sources":["ng://@taiga-ui/kit/components/input-copy/input-copy.component.ts","ng://@taiga-ui/kit/components/input-copy/input-copy.module.ts","ng://@taiga-ui/kit/components/input-copy/taiga-ui-kit-components-input-copy.ts"],"sourcesContent":["import {DOCUMENT} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    forwardRef,\n    HostBinding,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiNativeFocusableElement,\n    tuiPure,\n} from '@taiga-ui/cdk';\nimport {\n    TUI_TEXTFIELD_SIZE,\n    TuiDirection,\n    TuiHintMode,\n    TuiPrimitiveTextfieldComponent,\n    TuiTextfieldSizeDirective,\n} from '@taiga-ui/core';\nimport {TUI_COPY_TEXTS} from '@taiga-ui/kit/tokens';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {merge, Observable, of, Subject, timer} from 'rxjs';\nimport {mapTo, startWith, switchMap} from 'rxjs/operators';\n\n// @dynamic\n@Component({\n    selector: 'tui-input-copy',\n    templateUrl: './input-copy.template.html',\n    styleUrls: ['./input-copy.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiInputCopyComponent),\n        },\n    ],\n})\nexport class TuiInputCopyComponent\n    extends AbstractTuiControl<string>\n    implements TuiFocusableElementAccessor {\n    @Input()\n    @tuiDefaultProp()\n    successMessage: PolymorpheusContent = '';\n\n    @Input()\n    @tuiDefaultProp()\n    messageDirection: TuiDirection = 'bottom-left';\n\n    @Input()\n    @tuiDefaultProp()\n    messageMode: TuiHintMode | null = null;\n\n    private readonly copy$ = new Subject<void>();\n\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(DOCUMENT) private readonly documentRef: Document,\n        @Inject(TUI_TEXTFIELD_SIZE)\n        private readonly textfieldSize: TuiTextfieldSizeDirective,\n        @Inject(TUI_COPY_TEXTS) private readonly copyTexts$: Observable<[string, string]>,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    @HostBinding('class._has-value')\n    get hasValue(): boolean {\n        return !!this.value;\n    }\n\n    @tuiPure\n    get hintText$(): Observable<PolymorpheusContent> {\n        return this.copyTexts$.pipe(\n            switchMap(texts =>\n                this.copy$.pipe(\n                    switchMap(() =>\n                        merge(\n                            of(this.successMessage || texts[1]),\n                            timer(3000).pipe(mapTo(texts[0])),\n                        ),\n                    ),\n                    startWith(texts[0]),\n                ),\n            ),\n        );\n    }\n\n    get nativeFocusableElement(): TuiNativeFocusableElement | null {\n        return this.computedDisabled || !this.textfield\n            ? null\n            : this.textfield.nativeFocusableElement;\n    }\n\n    get focused(): boolean {\n        return !!this.textfield && this.textfield.focused;\n    }\n\n    get icon(): string {\n        return this.textfieldSize.size === 's' ? 'tuiIconCopy' : 'tuiIconCopyLarge';\n    }\n\n    onValueChange(value: string) {\n        this.updateValue(value);\n    }\n\n    onFocused(focused: boolean) {\n        this.updateFocused(focused);\n    }\n\n    onHovered(hovered: boolean) {\n        this.updateHovered(hovered);\n    }\n\n    onPressed(pressed: boolean) {\n        this.updatePressed(pressed);\n    }\n\n    copy() {\n        if (!this.textfield || !this.textfield.nativeFocusableElement) {\n            return;\n        }\n\n        this.textfield.nativeFocusableElement.select();\n        this.documentRef.execCommand('copy');\n        this.copy$.next();\n    }\n\n    protected getFallbackValue(): string {\n        return '';\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {\n    TuiHintModule,\n    TuiNotificationsModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n} from '@taiga-ui/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\nimport {TuiInputCopyComponent} from './input-copy.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PolymorpheusModule,\n        TuiSvgModule,\n        TuiHintModule,\n        TuiPrimitiveTextfieldModule,\n        TuiNotificationsModule,\n    ],\n    declarations: [TuiInputCopyComponent],\n    exports: [TuiInputCopyComponent],\n})\nexport class TuiInputCopyModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}