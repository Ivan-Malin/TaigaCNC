{"version":3,"file":"taiga-ui-kit-components-input-date-time.js","sources":["ng://@taiga-ui/kit/components/input-date-time/input-date-time.component.ts","ng://@taiga-ui/kit/components/input-date-time/input-date-time.module.ts","ng://@taiga-ui/kit/components/input-date-time/taiga-ui-kit-components-input-date-time.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    ALWAYS_FALSE_HANDLER,\n    nullableSame,\n    TUI_DATE_FILLER,\n    TUI_FIRST_DAY,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    TUI_LAST_DAY,\n    TuiBooleanHandler,\n    TuiDay,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiMonth,\n    tuiPure,\n    TuiTime,\n    TuiTimeMode,\n} from '@taiga-ui/cdk';\nimport {\n    sizeBigger,\n    TUI_TEXTFIELD_SIZE,\n    TuiPrimitiveTextfieldComponent,\n    TuiTextfieldSizeDirective,\n    TuiTextMaskOptions,\n    TuiWithOptionalMinMax,\n} from '@taiga-ui/core';\nimport {DATE_TIME_SEPARATOR, TUI_DATE_MASK} from '@taiga-ui/kit/constants';\nimport {LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER} from '@taiga-ui/kit/providers';\nimport {TUI_CALENDAR_DATA_STREAM, TUI_TIME_TEXTS} from '@taiga-ui/kit/tokens';\nimport {\n    tuiCreateAutoCorrectedDateTimePipe,\n    tuiCreateTimeMask,\n} from '@taiga-ui/kit/utils/mask';\nimport {TuiReplayControlValueChangesFactory} from '@taiga-ui/kit/utils/miscellaneous';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n// @dynamic\n@Component({\n    selector: 'tui-input-date-time',\n    templateUrl: './input-date-time.template.html',\n    styleUrls: ['./input-date-time.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiInputDateTimeComponent),\n        },\n        {\n            provide: TUI_CALENDAR_DATA_STREAM,\n            deps: [[new Optional(), new Self(), NgControl]],\n            useFactory: TuiReplayControlValueChangesFactory,\n        },\n        LEFT_ALIGNED_DROPDOWN_CONTROLLER_PROVIDER,\n    ],\n})\nexport class TuiInputDateTimeComponent\n    extends AbstractTuiControl<[TuiDay | null, TuiTime | null]>\n    implements TuiWithOptionalMinMax<TuiDay>, TuiFocusableElementAccessor {\n    @Input()\n    @tuiDefaultProp()\n    min = TUI_FIRST_DAY;\n\n    @Input()\n    @tuiDefaultProp()\n    max = TUI_LAST_DAY;\n\n    @Input()\n    @tuiDefaultProp()\n    disabledItemHandler: TuiBooleanHandler<TuiDay> = ALWAYS_FALSE_HANDLER;\n\n    @Input()\n    @tuiDefaultProp()\n    defaultActiveYearMonth = TuiMonth.currentLocal();\n\n    @Input()\n    @tuiDefaultProp()\n    timeMode: TuiTimeMode = 'HH:MM';\n\n    open = false;\n\n    private month: TuiMonth | null = null;\n\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(TUI_TEXTFIELD_SIZE)\n        private readonly textfieldSize: TuiTextfieldSizeDirective,\n        @Inject(TUI_DATE_FILLER) readonly dateFiller: string,\n        @Inject(TUI_TIME_TEXTS)\n        readonly timeTexts$: Observable<Record<TuiTimeMode, string>>,\n    ) {\n        super(control, changeDetectorRef);\n    }\n\n    get fillerLength(): number {\n        return this.dateFiller.length + DATE_TIME_SEPARATOR.length + this.timeMode.length;\n    }\n\n    get textMaskOptions(): TuiTextMaskOptions {\n        return this.calculateMask(\n            this.value[0],\n            this.min,\n            this.max,\n            this.timeMode,\n            this.dateFiller,\n        );\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return this.textfield ? this.textfield.nativeFocusableElement : null;\n    }\n\n    get focused(): boolean {\n        return !!this.textfield && this.textfield.focused;\n    }\n\n    get calendarIcon(): string {\n        return sizeBigger(this.textfieldSize.size)\n            ? 'tuiIconCalendarLarge'\n            : 'tuiIconCalendar';\n    }\n\n    get computedValue(): string {\n        const {value, nativeValue, focused, touched} = this;\n        const [date, time] = value;\n\n        if (\n            (date && !nativeValue) ||\n            (date && nativeValue.length === this.fillerLength) ||\n            (date && time)\n        ) {\n            return `${date.toString()}${DATE_TIME_SEPARATOR}${\n                time ? time.toString(this.timeMode) : ''\n            }`;\n        }\n\n        if (touched || focused) {\n            return nativeValue;\n        }\n\n        return date !== null ? date.toString() : '';\n    }\n\n    get calendarValue(): TuiDay | null {\n        return this.value[0];\n    }\n\n    get computedActiveYearMonth(): TuiMonth {\n        return this.month || this.value[0] || this.defaultActiveYearMonth;\n    }\n\n    get nativeValue(): string {\n        return this.nativeFocusableElement ? this.nativeFocusableElement.value : '';\n    }\n\n    set nativeValue(value: string) {\n        if (!this.nativeFocusableElement) {\n            return;\n        }\n\n        this.nativeFocusableElement.value = value;\n    }\n\n    get canOpen(): boolean {\n        return !this.computedDisabled && !this.readOnly;\n    }\n\n    @tuiPure\n    getFiller$(dateFiller: string, timeMode: TuiTimeMode): Observable<string> {\n        return this.timeTexts$.pipe(\n            map(texts => `${dateFiller}${DATE_TIME_SEPARATOR}${texts[timeMode]}`),\n        );\n    }\n\n    onClick() {\n        this.open = !this.open;\n    }\n\n    onValueChange(value: string) {\n        if (value.length < this.fillerLength) {\n            this.updateValue([null, null]);\n\n            return;\n        }\n\n        const [date, time] = value.split(DATE_TIME_SEPARATOR);\n\n        const parsedDate = TuiDay.normalizeParse(date);\n        const parsedTime =\n            time && time.length === this.timeMode.length\n                ? TuiTime.fromString(time)\n                : null;\n\n        if (parsedDate !== null) {\n            this.open = false;\n        }\n\n        this.updateValue([parsedDate, parsedTime]);\n    }\n\n    onDayClick(day: TuiDay) {\n        this.updateValue([day, this.value[1]]);\n        this.open = false;\n    }\n\n    onHovered(hovered: boolean) {\n        this.updateHovered(hovered);\n    }\n\n    onMonthChange(month: TuiMonth) {\n        this.month = month;\n    }\n\n    onOpenChange(open: boolean) {\n        this.open = open;\n    }\n\n    onFocused(focused: boolean) {\n        this.updateFocused(focused);\n\n        if (\n            focused ||\n            this.value[0] === null ||\n            this.value[1] !== null ||\n            this.nativeValue.length <= this.fillerLength + DATE_TIME_SEPARATOR.length ||\n            this.timeMode === 'HH:MM'\n        ) {\n            return;\n        }\n\n        const [, time] = this.nativeValue.split(DATE_TIME_SEPARATOR);\n\n        if (!time) {\n            return;\n        }\n\n        const parsedTime = TuiTime.fromString(time);\n\n        this.updateValue([this.value[0], parsedTime]);\n\n        setTimeout(() => {\n            if (this.nativeValue.endsWith('.') || this.nativeValue.endsWith(':')) {\n                this.nativeValue = this.nativeValue.slice(0, -1);\n            }\n        });\n    }\n\n    setDisabledState() {\n        super.setDisabledState();\n        this.open = false;\n    }\n\n    writeValue(value: [TuiDay | null, TuiTime | null] | null) {\n        super.writeValue(value);\n\n        this.nativeValue = value && (value[0] || value[1]) ? this.computedValue : '';\n    }\n\n    protected getFallbackValue(): [TuiDay | null, TuiTime | null] {\n        return [null, null];\n    }\n\n    protected valueIdenticalComparator(\n        oldValue: [TuiDay | null, TuiTime | null],\n        newValue: [TuiDay | null, TuiTime | null],\n    ): boolean {\n        return (\n            nullableSame(oldValue[0], newValue[0], (a, b) => a.daySame(b)) &&\n            nullableSame(\n                oldValue[1],\n                newValue[1],\n                (a, b) => a.toString() === b.toString(),\n            )\n        );\n    }\n\n    @tuiPure\n    private calculateMask(\n        day: TuiDay | null,\n        min: TuiDay,\n        max: TuiDay,\n        timeMode: TuiTimeMode,\n        filler: string,\n    ): TuiTextMaskOptions {\n        return {\n            mask: [...TUI_DATE_MASK, ',', ' ', ...tuiCreateTimeMask(timeMode)],\n            pipe: tuiCreateAutoCorrectedDateTimePipe(\n                {value: day, min, max, filler},\n                timeMode,\n            ),\n            guide: false,\n        };\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiPreventDefaultModule} from '@taiga-ui/cdk';\nimport {\n    TuiCalendarModule,\n    TuiHostedDropdownModule,\n    TuiLinkModule,\n    TuiPrimitiveTextfieldModule,\n    TuiSvgModule,\n} from '@taiga-ui/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\nimport {TextMaskModule} from 'angular2-text-mask';\nimport {TuiInputDateTimeComponent} from './input-date-time.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TextMaskModule,\n        PolymorpheusModule,\n        TuiPreventDefaultModule,\n        TuiCalendarModule,\n        TuiSvgModule,\n        TuiLinkModule,\n        TuiHostedDropdownModule,\n        TuiPrimitiveTextfieldModule,\n    ],\n    declarations: [TuiInputDateTimeComponent],\n    exports: [TuiInputDateTimeComponent],\n})\nexport class TuiInputDateTimeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}