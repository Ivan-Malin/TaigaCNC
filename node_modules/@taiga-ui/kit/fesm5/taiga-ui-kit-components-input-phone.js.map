{"version":3,"file":"taiga-ui-kit-components-input-phone.js","sources":["ng://@taiga-ui/kit/components/input-phone/input-phone.providers.ts","ng://@taiga-ui/kit/components/input-phone/input-phone.component.ts","ng://@taiga-ui/kit/components/input-phone/input-phone.module.ts","ng://@taiga-ui/kit/components/input-phone/taiga-ui-kit-components-input-phone.ts"],"sourcesContent":["import {DOCUMENT} from '@angular/common';\nimport {InjectionToken} from '@angular/core';\nimport {TuiDestroyService} from '@taiga-ui/cdk';\nimport {FIXED_DROPDOWN_CONTROLLER_PROVIDER} from '@taiga-ui/kit/providers';\nimport {fromEvent, merge, Observable} from 'rxjs';\nimport {flatMap, startWith, takeUntil, windowToggle} from 'rxjs/operators';\n\nexport const SELECTION_STREAM = new InjectionToken<Observable<unknown>>(\n    'A stream of selection changes',\n);\nexport const INPUT_PHONE_PROVIDERS = [\n    TuiDestroyService,\n    FIXED_DROPDOWN_CONTROLLER_PROVIDER,\n    {\n        provide: SELECTION_STREAM,\n        deps: [TuiDestroyService, DOCUMENT],\n        useFactory: selectionStreamFactory,\n    },\n];\n\nexport function selectionStreamFactory(\n    destroy$: Observable<unknown>,\n    documentRef: Document,\n): Observable<unknown> {\n    return fromEvent(documentRef, 'selectionchange').pipe(\n        windowToggle(\n            merge(fromEvent(documentRef, 'mouseup'), fromEvent(documentRef, 'keydown')),\n            () => fromEvent(documentRef, 'mousedown'),\n        ),\n        flatMap(windowed$ => windowed$.pipe(startWith(null))),\n        takeUntil(destroy$),\n    );\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    Self,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    getClipboardDataText,\n    isNativeFocused,\n    setNativeFocused,\n    TUI_FOCUSABLE_ITEM_ACCESSOR,\n    TuiActiveZoneDirective,\n    TuiContextWithImplicit,\n    tuiDefaultProp,\n    TuiFocusableElementAccessor,\n    TuiInputMode,\n    tuiRequiredSetter,\n} from '@taiga-ui/cdk';\nimport {\n    formatPhone,\n    TUI_DATA_LIST_HOST,\n    TuiDataListDirective,\n    TuiDataListHost,\n    TuiHostedDropdownComponent,\n    TuiPrimitiveTextfieldComponent,\n    TuiTextMaskOptions,\n} from '@taiga-ui/core';\nimport {Observable} from 'rxjs';\nimport {INPUT_PHONE_PROVIDERS, SELECTION_STREAM} from './input-phone.providers';\n\nconst NON_PLUS_AND_DIGITS_REGEX = /[ \\-_\\(\\)]/g;\n\n// @dynamic\n@Component({\n    selector: 'tui-input-phone',\n    templateUrl: './input-phone.template.html',\n    styleUrls: ['./input-phone.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n            useExisting: forwardRef(() => TuiInputPhoneComponent),\n        },\n        {\n            provide: TUI_DATA_LIST_HOST,\n            useExisting: forwardRef(() => TuiInputPhoneComponent),\n        },\n        INPUT_PHONE_PROVIDERS,\n    ],\n})\nexport class TuiInputPhoneComponent\n    extends AbstractTuiControl<string>\n    implements TuiFocusableElementAccessor, TuiDataListHost<string> {\n    @Input('countryCode')\n    @tuiRequiredSetter()\n    set countryCodeSetter(countryCode: string) {\n        this.updateValueWithNewContryCode(countryCode);\n        this.countryCode = countryCode;\n    }\n\n    @Input()\n    @tuiDefaultProp()\n    phoneMaskAfterCountryCode = '(###) ###-##-##';\n\n    @Input()\n    @tuiDefaultProp()\n    allowText = false;\n\n    @Input()\n    @tuiDefaultProp()\n    search = '';\n\n    @Output()\n    readonly searchChange = new EventEmitter<string>();\n\n    readonly textMaskOptions: TuiTextMaskOptions = {\n        mask: value =>\n            this.allowText && !this.value && isText(value) && value !== '+'\n                ? false\n                : [\n                      ...this.countryCode.split(''),\n                      ' ',\n                      ...this.phoneMaskAfterCountryCode\n                          .replace(/[^#\\- \\(\\)]+/g, '')\n                          .split('')\n                          .map(item => (item === '#' ? /\\d/ : item)),\n                  ],\n        pipe: value => {\n            if (this.allowText) {\n                return value;\n            }\n\n            return value === '' && this.focused && !this.readOnly\n                ? `${this.countryCode} `\n                : value.replace(/-$/, '');\n        },\n        guide: false,\n    };\n\n    countryCode = '+7';\n\n    open = false;\n\n    @ContentChild(TuiDataListDirective, {read: TemplateRef})\n    readonly datalist?: TemplateRef<TuiContextWithImplicit<TuiActiveZoneDirective>>;\n\n    @ViewChild(TuiHostedDropdownComponent)\n    private readonly dropdown?: TuiHostedDropdownComponent;\n\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) changeDetectorRef: ChangeDetectorRef,\n        @Inject(SELECTION_STREAM)\n        selection$: Observable<unknown>,\n    ) {\n        super(control, changeDetectorRef);\n\n        selection$.subscribe(() => {\n            this.setCaretPosition();\n        });\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return !this.textfield || this.computedDisabled\n            ? null\n            : this.textfield.nativeFocusableElement;\n    }\n\n    get focused(): boolean {\n        return (\n            isNativeFocused(this.nativeFocusableElement) ||\n            (!!this.dropdown && this.dropdown.focused)\n        );\n    }\n\n    get nativeValue(): string {\n        return this.value\n            ? formatPhone(this.value, this.countryCode, this.phoneMaskAfterCountryCode)\n            : this.search || '';\n    }\n\n    get inputMode(): TuiInputMode {\n        return this.allowText ? TuiInputMode.Text : TuiInputMode.Numeric;\n    }\n\n    onHovered(hovered: boolean) {\n        this.updateHovered(hovered);\n    }\n\n    onDrop(event: DragEvent) {\n        if (!event.dataTransfer) {\n            return;\n        }\n\n        this.setValueWithoutPrefix(event.dataTransfer.getData('text'));\n        event.preventDefault();\n    }\n\n    onPaste(event: ClipboardEvent) {\n        this.setValueWithoutPrefix(getClipboardDataText(event));\n    }\n\n    onActiveZone(active: boolean) {\n        this.updateFocused(active);\n\n        if (active && !this.nativeValue && !this.readOnly && !this.allowText) {\n            this.updateSearch(this.countryCode);\n\n            return;\n        }\n\n        if (\n            this.nativeValue === this.countryCode ||\n            (this.search !== null &&\n                isNaN(parseInt(this.search.replace(NON_PLUS_AND_DIGITS_REGEX, ''), 10)))\n        ) {\n            this.updateSearch('');\n        }\n    }\n\n    onBackspace(event: Event & {target: HTMLInputElement}) {\n        if (\n            (event.target.selectionStart || 0) <= this.nonRemovableLength &&\n            event.target.selectionStart === event.target.selectionEnd\n        ) {\n            event.preventDefault();\n        }\n    }\n\n    onValueChange(value: string) {\n        const parsed = isText(value)\n            ? value\n            : value.replace(NON_PLUS_AND_DIGITS_REGEX, '');\n\n        this.updateSearch(parsed);\n        this.updateValue(parsed === this.countryCode || isText(parsed) ? '' : parsed);\n        this.open = true;\n    }\n\n    handleOption(item: string) {\n        this.focusInput();\n        this.updateValue(item);\n        this.updateSearch('');\n        this.open = false;\n    }\n\n    setDisabledState() {\n        super.setDisabledState();\n        this.open = false;\n    }\n\n    writeValue(value: string | null) {\n        super.writeValue(value);\n        this.updateSearch('');\n    }\n\n    protected getFallbackValue(): string {\n        return '';\n    }\n\n    private get caretIsInForbiddenArea(): boolean {\n        const {nativeFocusableElement} = this;\n\n        if (!nativeFocusableElement) {\n            return false;\n        }\n\n        const {selectionStart, selectionEnd} = nativeFocusableElement;\n\n        return (\n            isNativeFocused(nativeFocusableElement) &&\n            selectionStart !== null &&\n            selectionStart < this.nonRemovableLength &&\n            selectionStart === selectionEnd\n        );\n    }\n\n    private get nonRemovableLength(): number {\n        return this.isTextValue ? 0 : this.countryCode.length + 1;\n    }\n\n    private get maxPhoneLength(): number {\n        return (\n            this.countryCode.length +\n            this.phoneMaskAfterCountryCode.replace(/[^#]+/g, '').length\n        );\n    }\n\n    private get isTextValue(): boolean {\n        return !!this.search && isText(this.search);\n    }\n\n    private setCaretPosition() {\n        if (this.caretIsInForbiddenArea && !!this.nativeFocusableElement) {\n            this.nativeFocusableElement.setSelectionRange(\n                this.nonRemovableLength,\n                this.nonRemovableLength,\n            );\n        }\n    }\n\n    private setValueWithoutPrefix(value: string) {\n        if (this.readOnly) {\n            return;\n        }\n\n        this.open = true;\n        this.updateValue(this.cleanValue(value));\n        this.updateSearch(\n            this.allowText && isText(value)\n                ? value\n                : value.replace(NON_PLUS_AND_DIGITS_REGEX, ''),\n        );\n    }\n\n    private cleanValue(value: string): string {\n        const reg: RegExp =\n            this.countryCode === '+7'\n                ? /^7|^8/\n                : new RegExp(this.countryCode.substring(1));\n        const oldValueExist =\n            this.value.length > this.countryCode.length &&\n            this.value.length < this.maxPhoneLength;\n        const newValueLength = value.replace(NON_PLUS_AND_DIGITS_REGEX, '').length;\n        const cleanNewValue = value.replace(/[^0-9]+/g, '');\n        const selectionLength = getSelection()!.toString().length;\n\n        if (oldValueExist && selectionLength === 0) {\n            return `${this.value}${cleanNewValue}`.slice(0, this.maxPhoneLength);\n        }\n\n        if (newValueLength < this.maxPhoneLength - 1) {\n            return `${this.countryCode}${cleanNewValue}`.slice(0, this.maxPhoneLength);\n        }\n\n        return `${this.countryCode}${cleanNewValue.replace(reg, '')}`.slice(\n            0,\n            this.maxPhoneLength,\n        );\n    }\n\n    private focusInput() {\n        if (this.nativeFocusableElement) {\n            setNativeFocused(this.nativeFocusableElement, true, true);\n        }\n    }\n\n    private updateSearch(search: string) {\n        if (this.search === search) {\n            return;\n        }\n\n        this.search = search;\n        this.searchChange.emit(search);\n    }\n\n    private updateValueWithNewContryCode(newCountryCode: string) {\n        if (!this.isTextValue) {\n            this.updateValue(this.value.replace(this.countryCode, newCountryCode));\n        }\n    }\n}\n\nfunction isText(value: string): boolean {\n    return isNaN(parseInt(value.replace(NON_PLUS_AND_DIGITS_REGEX, ''), 10));\n}\n","import {NgModule} from '@angular/core';\nimport {TuiActiveZoneModule} from '@taiga-ui/cdk';\nimport {\n    TuiHostedDropdownModule,\n    TuiPrimitiveTextfieldModule,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {TextMaskModule} from 'angular2-text-mask';\nimport {TuiInputPhoneComponent} from './input-phone.component';\n\n@NgModule({\n    imports: [\n        TextMaskModule,\n        TuiPrimitiveTextfieldModule,\n        TuiHostedDropdownModule,\n        TuiTextfieldControllerModule,\n        TuiActiveZoneModule,\n    ],\n    declarations: [TuiInputPhoneComponent],\n    exports: [TuiInputPhoneComponent],\n})\nexport class TuiInputPhoneModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}