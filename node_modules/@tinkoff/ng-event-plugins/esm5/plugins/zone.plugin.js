/**
 * @fileoverview added by tsickle
 * Generated from: plugins/zone.plugin.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { AbstractEventPlugin } from './abstract.plugin';
/**
 * TODO: This will not be needed in Angular 10
 * when libraries are allowed to use Ivy renderer and markDirty becomes stable API
 */
var ZoneEventPlugin = /** @class */ (function (_super) {
    __extends(ZoneEventPlugin, _super);
    function ZoneEventPlugin() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.modifier = 'init';
        return _this;
    }
    /**
     * @param {?} _element
     * @param {?} _event
     * @param {?} handler
     * @return {?}
     */
    ZoneEventPlugin.prototype.addEventListener = /**
     * @param {?} _element
     * @param {?} _event
     * @param {?} handler
     * @return {?}
     */
    function (_element, _event, handler) {
        return this.handle(handler);
    };
    /**
     * @param {?} _element
     * @param {?} _event
     * @param {?} handler
     * @return {?}
     */
    ZoneEventPlugin.prototype.addGlobalEventListener = /**
     * @param {?} _element
     * @param {?} _event
     * @param {?} handler
     * @return {?}
     */
    function (_element, _event, handler) {
        return this.handle(handler);
    };
    /**
     * @private
     * @param {?} handler
     * @return {?}
     */
    ZoneEventPlugin.prototype.handle = /**
     * @private
     * @param {?} handler
     * @return {?}
     */
    function (handler) {
        /** @type {?} */
        var zone = this.manager.getZone();
        /** @type {?} */
        var subscription = zone.onStable.subscribe((/**
         * @return {?}
         */
        function () {
            subscription.unsubscribe();
            handler(zone);
        }));
        return (/**
         * @return {?}
         */
        function () { });
    };
    ZoneEventPlugin.decorators = [
        { type: Injectable }
    ];
    return ZoneEventPlugin;
}(AbstractEventPlugin));
export { ZoneEventPlugin };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    ZoneEventPlugin.prototype.modifier;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9uZS5wbHVnaW4uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AdGlua29mZi9uZy1ldmVudC1wbHVnaW5zLyIsInNvdXJjZXMiOlsicGx1Z2lucy96b25lLnBsdWdpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLG1CQUFtQixDQUFDOzs7OztBQU10RDtJQUNxQyxtQ0FBbUI7SUFEeEQ7UUFBQSxxRUF5QkM7UUF2QnNCLGNBQVEsR0FBRyxNQUFNLENBQUM7O0lBdUJ6QyxDQUFDOzs7Ozs7O0lBckJHLDBDQUFnQjs7Ozs7O0lBQWhCLFVBQWlCLFFBQXFCLEVBQUUsTUFBYyxFQUFFLE9BQWlCO1FBQ3JFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoQyxDQUFDOzs7Ozs7O0lBRUQsZ0RBQXNCOzs7Ozs7SUFBdEIsVUFDSSxRQUFnQixFQUNoQixNQUFjLEVBQ2QsT0FBaUI7UUFFakIsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2hDLENBQUM7Ozs7OztJQUVPLGdDQUFNOzs7OztJQUFkLFVBQWUsT0FBaUI7O1lBQ3RCLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRTs7WUFDN0IsWUFBWSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUzs7O1FBQUM7WUFDekMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQzNCLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQixDQUFDLEVBQUM7UUFFRjs7O1FBQU8sY0FBTyxDQUFDLEVBQUM7SUFDcEIsQ0FBQzs7Z0JBeEJKLFVBQVU7O0lBeUJYLHNCQUFDO0NBQUEsQUF6QkQsQ0FDcUMsbUJBQW1CLEdBd0J2RDtTQXhCWSxlQUFlOzs7Ozs7SUFDeEIsbUNBQXFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7QWJzdHJhY3RFdmVudFBsdWdpbn0gZnJvbSAnLi9hYnN0cmFjdC5wbHVnaW4nO1xuXG4vKipcbiAqIFRPRE86IFRoaXMgd2lsbCBub3QgYmUgbmVlZGVkIGluIEFuZ3VsYXIgMTBcbiAqIHdoZW4gbGlicmFyaWVzIGFyZSBhbGxvd2VkIHRvIHVzZSBJdnkgcmVuZGVyZXIgYW5kIG1hcmtEaXJ0eSBiZWNvbWVzIHN0YWJsZSBBUElcbiAqL1xuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFpvbmVFdmVudFBsdWdpbiBleHRlbmRzIEFic3RyYWN0RXZlbnRQbHVnaW4ge1xuICAgIHByb3RlY3RlZCByZWFkb25seSBtb2RpZmllciA9ICdpbml0JztcblxuICAgIGFkZEV2ZW50TGlzdGVuZXIoX2VsZW1lbnQ6IEhUTUxFbGVtZW50LCBfZXZlbnQ6IHN0cmluZywgaGFuZGxlcjogRnVuY3Rpb24pOiBGdW5jdGlvbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmhhbmRsZShoYW5kbGVyKTtcbiAgICB9XG5cbiAgICBhZGRHbG9iYWxFdmVudExpc3RlbmVyKFxuICAgICAgICBfZWxlbWVudDogc3RyaW5nLFxuICAgICAgICBfZXZlbnQ6IHN0cmluZyxcbiAgICAgICAgaGFuZGxlcjogRnVuY3Rpb24sXG4gICAgKTogRnVuY3Rpb24ge1xuICAgICAgICByZXR1cm4gdGhpcy5oYW5kbGUoaGFuZGxlcik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBoYW5kbGUoaGFuZGxlcjogRnVuY3Rpb24pOiBGdW5jdGlvbiB7XG4gICAgICAgIGNvbnN0IHpvbmUgPSB0aGlzLm1hbmFnZXIuZ2V0Wm9uZSgpO1xuICAgICAgICBjb25zdCBzdWJzY3JpcHRpb24gPSB6b25lLm9uU3RhYmxlLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIGhhbmRsZXIoem9uZSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiAoKSA9PiB7fTtcbiAgICB9XG59XG4iXX0=