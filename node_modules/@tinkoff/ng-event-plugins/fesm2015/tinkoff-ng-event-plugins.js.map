{"version":3,"file":"tinkoff-ng-event-plugins.js","sources":["ng://@tinkoff/ng-event-plugins/utils/dasharize.ts","ng://@tinkoff/ng-event-plugins/plugins/abstract.plugin.ts","ng://@tinkoff/ng-event-plugins/plugins/bind.plugin.ts","ng://@tinkoff/ng-event-plugins/plugins/capture.plugin.ts","ng://@tinkoff/ng-event-plugins/plugins/prevent.plugin.ts","ng://@tinkoff/ng-event-plugins/plugins/silent.plugin.ts","ng://@tinkoff/ng-event-plugins/plugins/stop.plugin.ts","ng://@tinkoff/ng-event-plugins/plugins/zone.plugin.ts","ng://@tinkoff/ng-event-plugins/constants/plugins.ts","ng://@tinkoff/ng-event-plugins/decorators/should-call.ts","ng://@tinkoff/ng-event-plugins/utils/as-callable.ts"],"sourcesContent":["export function dasharize(camel: string): string {\n    return camel.replace(/[a-z][A-Z]/g, (letterLetter) => {\n        return `${letterLetter[0]}-${letterLetter[1].toLowerCase()}`;\n    });\n}\n","import {EventManager} from '@angular/platform-browser';\n\n// TODO: A subject to change: https://github.com/angular/angular/issues/3929\ntype EventManagerArg = ConstructorParameters<typeof EventManager>[0][0];\ntype EventManagerPlugin = {\n    [K in keyof EventManagerArg]: EventManagerArg[K];\n};\n\nexport abstract class AbstractEventPlugin implements EventManagerPlugin {\n    protected abstract readonly modifier: string;\n\n    manager!: EventManager;\n\n    supports(event: string): boolean {\n        return event.split('.').indexOf(this.modifier) !== -1;\n    }\n\n    addGlobalEventListener(\n        _element: string,\n        _event: string,\n        _handler: Function,\n    ): Function {\n        throw new Error(\n            `Global event targets are not supported by ${this.modifier} plugin`,\n        );\n    }\n\n    abstract addEventListener(\n        element: HTMLElement,\n        event: string,\n        handler: Function,\n    ): Function;\n\n    protected unwrap(event: string): string {\n        return event\n            .split('.')\n            .filter(v => v !== this.modifier)\n            .join('.');\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {concat, defer, EMPTY, Observable} from 'rxjs';\nimport {takeWhile} from 'rxjs/operators';\nimport {dasharize} from '../utils/dasharize';\nimport {AbstractEventPlugin} from './abstract.plugin';\n\n@Injectable()\nexport class BindEventPlugin extends AbstractEventPlugin {\n    protected readonly modifier = '$';\n\n    addEventListener(\n        element: HTMLElement & Record<string, Observable<unknown>>,\n        event: string,\n    ): Function {\n        element[event] = element[event] ?? EMPTY;\n\n        const method = this.getMethod(element, event);\n        const zone$ = this.manager.getZone().onStable;\n        const sub = concat(\n            zone$.pipe(takeWhile(() => element[event] === EMPTY)),\n            defer(() => element[event]),\n        ).subscribe(method);\n\n        return () => sub.unsubscribe();\n    }\n\n    private getMethod(\n        element: HTMLElement & Record<string, unknown>,\n        event: string,\n    ): (v: unknown) => void {\n        const [, key, value, unit = ''] = event.split('.');\n\n        if (event.endsWith('.attr')) {\n            return v =>\n                v === null\n                    ? element.removeAttribute(key)\n                    : element.setAttribute(key, String(v));\n        }\n\n        if (key === 'class') {\n            return v => element.classList.toggle(value, !!v);\n        }\n\n        if (key === 'style') {\n            return v => element.style.setProperty(dasharize(value), `${v}${unit}`);\n        }\n\n        return v => (element[key] = v);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractEventPlugin} from './abstract.plugin';\n\n@Injectable()\nexport class CaptureEventPlugin extends AbstractEventPlugin {\n    protected readonly modifier = 'capture';\n\n    supports(event: string): boolean {\n        const split = event.split('.');\n\n        return split.length === 2 && split.indexOf(this.modifier) !== -1;\n    }\n\n    addEventListener(\n        element: HTMLElement,\n        event: string,\n        handler: EventListener,\n    ): Function {\n        element.addEventListener(this.unwrap(event), handler, true);\n\n        return () => element.removeEventListener(this.unwrap(event), handler);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractEventPlugin} from './abstract.plugin';\n\n@Injectable()\nexport class PreventEventPlugin extends AbstractEventPlugin {\n    protected readonly modifier = 'prevent';\n\n    addEventListener(element: HTMLElement, event: string, handler: Function): Function {\n        const wrapped = (event: Event) => {\n            event.preventDefault();\n            handler(event);\n        };\n\n        return this.manager.addEventListener(element, this.unwrap(event), wrapped);\n    }\n\n    addGlobalEventListener(element: string, event: string, handler: Function): Function {\n        const wrapped = (event: Event) => {\n            event.preventDefault();\n            handler(event);\n        };\n\n        return this.manager.addGlobalEventListener(element, this.unwrap(event), wrapped);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractEventPlugin} from './abstract.plugin';\n\n@Injectable()\nexport class SilentEventPlugin extends AbstractEventPlugin {\n    protected readonly modifier = 'silent';\n\n    addEventListener(element: HTMLElement, event: string, handler: Function): Function {\n        return this.manager\n            .getZone()\n            .runOutsideAngular(() =>\n                this.manager.addEventListener(element, this.unwrap(event), handler),\n            );\n    }\n\n    addGlobalEventListener(element: string, event: string, handler: Function): Function {\n        return this.manager\n            .getZone()\n            .runOutsideAngular(() =>\n                this.manager.addGlobalEventListener(element, this.unwrap(event), handler),\n            );\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractEventPlugin} from './abstract.plugin';\n\n@Injectable()\nexport class StopEventPlugin extends AbstractEventPlugin {\n    protected readonly modifier = 'stop';\n\n    addEventListener(element: HTMLElement, event: string, handler: Function): Function {\n        const wrapped = (event: Event) => {\n            event.stopPropagation();\n            handler(event);\n        };\n\n        return this.manager.addEventListener(element, this.unwrap(event), wrapped);\n    }\n\n    addGlobalEventListener(element: string, event: string, handler: Function): Function {\n        const wrapped = (event: Event) => {\n            event.stopPropagation();\n            handler(event);\n        };\n\n        return this.manager.addGlobalEventListener(element, this.unwrap(event), wrapped);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractEventPlugin} from './abstract.plugin';\n\n/**\n * TODO: This will not be needed in Angular 10\n * when libraries are allowed to use Ivy renderer and markDirty becomes stable API\n */\n@Injectable()\nexport class ZoneEventPlugin extends AbstractEventPlugin {\n    protected readonly modifier = 'init';\n\n    addEventListener(_element: HTMLElement, _event: string, handler: Function): Function {\n        return this.handle(handler);\n    }\n\n    addGlobalEventListener(\n        _element: string,\n        _event: string,\n        handler: Function,\n    ): Function {\n        return this.handle(handler);\n    }\n\n    private handle(handler: Function): Function {\n        const zone = this.manager.getZone();\n        const subscription = zone.onStable.subscribe(() => {\n            subscription.unsubscribe();\n            handler(zone);\n        });\n\n        return () => {};\n    }\n}\n","import {Provider} from '@angular/core';\nimport {EVENT_MANAGER_PLUGINS} from '@angular/platform-browser';\nimport {BindEventPlugin} from '../plugins/bind.plugin';\nimport {CaptureEventPlugin} from '../plugins/capture.plugin';\nimport {PreventEventPlugin} from '../plugins/prevent.plugin';\nimport {SilentEventPlugin} from '../plugins/silent.plugin';\nimport {StopEventPlugin} from '../plugins/stop.plugin';\nimport {ZoneEventPlugin} from '../plugins/zone.plugin';\n\nexport const NG_EVENT_PLUGINS: Provider[] = [\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: SilentEventPlugin,\n        multi: true,\n    },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: PreventEventPlugin,\n        multi: true,\n    },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: StopEventPlugin,\n        multi: true,\n    },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: ZoneEventPlugin,\n        multi: true,\n    },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: CaptureEventPlugin,\n        multi: true,\n    },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: BindEventPlugin,\n        multi: true,\n    },\n];\n","import {NgZone} from '@angular/core';\nimport {Predicate} from '../types/predicate';\n\n/**\n * TODO: This will not be needed in Angular 10\n * when libraries are allowed to use Ivy renderer and markDirty becomes stable API\n */\nexport function shouldCall<T>(predicate: Predicate<T>): MethodDecorator {\n    return (_, key, desc: PropertyDescriptor) => {\n        const {value} = desc;\n\n        desc.value = function() {\n            const zone = arguments[0] as NgZone;\n\n            Object.defineProperty(this, key, {\n                value(this: T, ...args: any[]) {\n                    if (predicate.apply(this, args)) {\n                        zone.run(() => {\n                            value.apply(this, args);\n                        });\n                    }\n                },\n            });\n        };\n    };\n}\n\n/**\n * TODO: Use this in Angular 10\n */\n// export function shouldCall<T extends object>(predicate: Predicate<T>): MethodDecorator {\n//     return (_: Object, _key: string | symbol, desc: PropertyDescriptor) => {\n//         const {value} = desc;\n//\n//         desc.value = function(this: T, ...args: any[]) {\n//             if (predicate.apply(this, args)) {\n//                 value.apply(this, args);\n//                 markDirty(this);\n//             }\n//         };\n//     };\n// }\n","export function asCallable<T>(a: T): T & Function {\n    return a as any;\n}\n"],"names":[],"mappings":"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"}