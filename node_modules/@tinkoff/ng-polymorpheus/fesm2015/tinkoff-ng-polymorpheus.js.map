{"version":3,"file":"tinkoff-ng-polymorpheus.js","sources":["ng://@tinkoff/ng-polymorpheus/tokens/context.ts","ng://@tinkoff/ng-polymorpheus/classes/component.ts","ng://@tinkoff/ng-polymorpheus/directives/template.ts","ng://@tinkoff/ng-polymorpheus/outlet/outlet.component.ts","ng://@tinkoff/ng-polymorpheus/directives/context.ts","ng://@tinkoff/ng-polymorpheus/pipes/injector.ts","ng://@tinkoff/ng-polymorpheus/polymorpheus.module.ts"],"sourcesContent":["import {InjectionToken} from '@angular/core';\r\n\r\n/**\r\n * Use this token to access context within your components when\r\n * instantiating them through {@link PolymorpheusOutletComponent}\r\n */\r\nexport const POLYMORPHEUS_CONTEXT = new InjectionToken<object>(\r\n    'Context from polymorpheus-outlet',\r\n);\r\n","import {Injector, Type} from '@angular/core';\r\nimport {POLYMORPHEUS_CONTEXT} from '../tokens/context';\r\n\r\n/**\r\n * Wrapper class for a component that will be used as content for {@link PolymorpheusOutletComponent}\r\n *\r\n * @param component — an Angular component to be dynamically created\r\n * @param injector — optional {@link Injector} for lazy loaded module case\r\n */\r\nexport class PolymorpheusComponent<T extends object, C extends object> {\r\n    constructor(\r\n        readonly component: Type<T>,\r\n        private readonly injector: Injector | null = null,\r\n    ) {}\r\n\r\n    createInjector(injector: Injector, context: C): Injector {\r\n        return Injector.create({\r\n            parent: this.injector || injector,\r\n            providers: [\r\n                {\r\n                    provide: POLYMORPHEUS_CONTEXT,\r\n                    useValue: context,\r\n                },\r\n            ],\r\n        });\r\n    }\r\n}\r\n","import {ChangeDetectorRef, Directive, Inject, Self, TemplateRef} from '@angular/core';\r\n\r\n/**\r\n * ng-template wrapper directive also storing {@link ChangeDetectorRef} to properly handle change detection.\r\n */\r\n@Directive({\r\n    selector: 'ng-template[polymorpheus]',\r\n    exportAs: 'polymorpheus',\r\n})\r\nexport class PolymorpheusTemplate<T extends object> {\r\n    constructor(\r\n        @Inject(TemplateRef)\r\n        @Self()\r\n        readonly template: TemplateRef<T>,\r\n        @Inject(ChangeDetectorRef) private readonly changeDetectorRef: ChangeDetectorRef,\r\n    ) {}\r\n\r\n    check() {\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n}\r\n","import {NgComponentOutlet} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ContentChild,\n    DoCheck,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport {PolymorpheusComponent} from '../classes/component';\nimport {PolymorpheusTemplate} from '../directives/template';\nimport {PolymorpheusContent} from '../types/content';\nimport {PolymorpheusPrimitive} from '../types/primitive';\n\n/**\n * Outlet instantiating {@link PolymorpheusContent} with given context\n */\n@Component({\n    selector: '[polymorpheus-outlet]',\n    templateUrl: './outlet.template.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PolymorpheusOutletComponent<C extends object> implements DoCheck, OnChanges {\n    @ContentChild(TemplateRef)\n    readonly template: TemplateRef<C> | null = null;\n\n    @ViewChild(NgComponentOutlet)\n    readonly outlet?: NgComponentOutlet;\n\n    @Input()\n    content: PolymorpheusContent<C> | null = null;\n\n    @Input()\n    context!: C;\n\n    get primitive(): PolymorpheusPrimitive {\n        if (!this.content || this.isAdvanced(this.content)) {\n            return '';\n        }\n\n        return typeof this.content === 'function'\n            ? this.content(this.context)\n            : this.content;\n    }\n\n    isAdvanced(\n        content: PolymorpheusContent<C> | null,\n    ): content is\n        | PolymorpheusTemplate<C>\n        | TemplateRef<C>\n        | PolymorpheusComponent<object, C> {\n        return isTemplate(content) || isComponent(content);\n    }\n\n    getTemplate(\n        content:\n            | PolymorpheusComponent<object, C>\n            | PolymorpheusTemplate<C>\n            | TemplateRef<C>,\n        componentTmp: TemplateRef<C>,\n    ): TemplateRef<C> {\n        if (isComponent(content)) {\n            return componentTmp;\n        }\n\n        return isDirective(content) ? content.template : content;\n    }\n\n    guard(\n        content: PolymorpheusContent<C> | null,\n    ): content is PolymorpheusComponent<object, C> {\n        return isComponent(content);\n    }\n\n    ngOnChanges({content, context}: SimpleChanges) {\n        // TODO: Keep an eye on private field, name can change\n        const componentRef = (!content &&\n            context &&\n            this.outlet &&\n            this.outlet['_componentRef']) as ComponentRef<object> | null | false;\n\n        if (componentRef) {\n            componentRef.injector.get(ChangeDetectorRef).markForCheck();\n        }\n    }\n\n    ngDoCheck() {\n        if (isDirective(this.content)) {\n            this.content.check();\n        }\n    }\n}\n\nfunction isDirective<C extends object>(\n    content: PolymorpheusContent<C> | null,\n): content is PolymorpheusTemplate<C> {\n    return content instanceof PolymorpheusTemplate;\n}\n\nfunction isComponent<C extends object>(\n    content: PolymorpheusContent<C> | null,\n): content is PolymorpheusComponent<object, C> {\n    return content instanceof PolymorpheusComponent;\n}\n\nfunction isTemplate<C extends object>(\n    content: PolymorpheusContent<C> | null,\n): content is PolymorpheusTemplate<C> | TemplateRef<C> {\n    return isDirective(content) || content instanceof TemplateRef;\n}\n","import {Directive, EmbeddedViewRef, Inject, ViewContainerRef} from '@angular/core';\r\n\r\n/**\r\n * Helper directive, extracting first {@link EmbeddedViewRef} context if it's present\r\n */\r\n@Directive({\r\n    selector: '[context]',\r\n    exportAs: 'context',\r\n})\r\nexport class ContextDirective<C> {\r\n    constructor(\r\n        @Inject(ViewContainerRef) private readonly viewContainerRef: ViewContainerRef,\r\n    ) {}\r\n\r\n    get context(): C | null {\r\n        const viewRef = this.viewContainerRef.get(0) as EmbeddedViewRef<C> | null;\r\n\r\n        return viewRef && viewRef.context;\r\n    }\r\n}\r\n","import {Inject, Injector, Pipe, PipeTransform} from '@angular/core';\r\nimport {PolymorpheusComponent} from '../classes/component';\r\n\r\n/**\r\n * Internal use {@link Pipe} to create {@link Injector}\r\n * only when either content or context change\r\n */\r\n@Pipe({\r\n    name: 'injector',\r\n})\r\nexport class InjectorPipe<C extends object> implements PipeTransform {\r\n    constructor(@Inject(Injector) private readonly injector: Injector) {}\r\n\r\n    transform(content: PolymorpheusComponent<object, C>, context: C): Injector {\r\n        return content.createInjector(this.injector, context);\r\n    }\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {ContextDirective} from './directives/context';\r\nimport {PolymorpheusTemplate} from './directives/template';\r\nimport {PolymorpheusOutletComponent} from './outlet/outlet.component';\r\nimport {InjectorPipe} from './pipes/injector';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [\r\n        PolymorpheusOutletComponent,\r\n        PolymorpheusTemplate,\r\n        ContextDirective,\r\n        InjectorPipe,\r\n    ],\r\n    exports: [PolymorpheusOutletComponent, PolymorpheusTemplate],\r\n})\r\nexport class PolymorpheusModule {}\r\n"],"names":[],"mappings":"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"}