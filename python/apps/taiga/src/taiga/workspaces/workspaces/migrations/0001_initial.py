# -*- coding: utf-8 -*-
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2021-present Kaleidos Ventures SL

# Generated by Django 4.1.1 on 2022-09-22 08:36

import django.db.models.deletion
import taiga.base.db.models
import taiga.base.db.models.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("memberships", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Workspace",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        blank=True,
                        default=taiga.base.db.models.uuid_generator,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=40, verbose_name="name")),
                (
                    "slug",
                    taiga.base.db.models.fields.LowerSlugField(
                        blank=True, max_length=250, unique=True, verbose_name="slug"
                    ),
                ),
                ("color", models.IntegerField(default=1, verbose_name="color")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="created at")),
                ("modified_at", models.DateTimeField(auto_now=True, verbose_name="modified at")),
                ("is_premium", models.BooleanField(blank=True, default=False, verbose_name="is premium")),
                (
                    "members",
                    models.ManyToManyField(
                        related_name="workspaces",
                        through="memberships.WorkspaceMembership",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="members",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="owned_workspaces",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="owner",
                    ),
                ),
            ],
            options={
                "verbose_name": "workspace",
                "verbose_name_plural": "workspaces",
                "ordering": ["slug"],
                "index_together": {("name", "id")},
            },
        ),
    ]
