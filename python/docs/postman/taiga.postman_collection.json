{
	"info": {
		"_postman_id": "938728e8-55b4-407c-98f8-d611f87151f9",
		"name": "taiga-next",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// example using pm.response.to.have",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"auth_token\", pm.response.json().token);",
							"    pm.environment.set(\"refresh_token\", pm.response.json().refresh);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"user2\",\n    \"password\": \"123123\"\n}"
				},
				"url": {
					"raw": "{{protocol}}://{{domain}}{{port}}{{api_url}}/auth/token",
					"protocol": "{{protocol}}",
					"host": [
						"{{domain}}{{port}}{{api_url}}"
					],
					"path": [
						"auth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "refresh token",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{domain}}{{port}}/api/v2/auth/token/refresh",
					"protocol": "{{protocol}}",
					"host": [
						"{{domain}}{{port}}"
					],
					"path": [
						"api",
						"v2",
						"auth",
						"token",
						"refresh"
					]
				}
			},
			"response": []
		},
		{
			"name": "users me",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{domain}}{{port}}{{api_url}}/users/me",
					"protocol": "{{protocol}}",
					"host": [
						"{{domain}}{{port}}{{api_url}}"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "workspaces",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{domain}}{{port}}{{api_url}}/workspaces",
					"protocol": "{{protocol}}",
					"host": [
						"{{domain}}{{port}}{{api_url}}"
					],
					"path": [
						"workspaces"
					]
				}
			},
			"response": []
		},
		{
			"name": "new workspace",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// example using pm.response.to.have",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"ws-slug\", pm.response.json().slug);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"my workspace\",\n  \"color\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{domain}}{{port}}{{api_url}}/workspaces",
					"protocol": "{{protocol}}",
					"host": [
						"{{domain}}{{port}}{{api_url}}"
					],
					"path": [
						"workspaces"
					]
				}
			},
			"response": []
		},
		{
			"name": "workspace by slug",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{domain}}{{port}}{{api_url}}/workspaces/{{ws-slug}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{domain}}{{port}}{{api_url}}"
					],
					"path": [
						"workspaces",
						"{{ws-slug}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "workspace's projects",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{domain}}{{port}}{{api_url}}/workspaces/{{ws-slug}}/projects",
					"protocol": "{{protocol}}",
					"host": [
						"{{domain}}{{port}}{{api_url}}"
					],
					"path": [
						"workspaces",
						"{{ws-slug}}",
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "new project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// example using pm.response.to.have",
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"pj-slug\", pm.response.json().slug);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"My project\",\n  \"description\": \"My description\",\n  \"workspaceSlug\": \"{{ws-slug}}\",\n  \"color\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{domain}}{{port}}{{api_url}}/projects",
					"protocol": "{{protocol}}",
					"host": [
						"{{domain}}{{port}}{{api_url}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "project by slug",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{auth_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{domain}}{{port}}{{api_url}}/projects/{{pj-slug}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{domain}}{{port}}{{api_url}}"
					],
					"path": [
						"projects",
						"{{pj-slug}}"
					]
				}
			},
			"response": []
		}
	]
}